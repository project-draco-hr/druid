{
  for (  File file : workingDir.listFiles()) {
    if (file.isDirectory()) {
      recursiveSearchSegments(segments,file,updateDescriptor);
    }
 else     if (file.getName().equals("descriptor.json")) {
      final File indexZip=new File(file.getParentFile(),"index.zip");
      if (indexZip.exists()) {
        try {
          final DataSegment dataSegment=mapper.readValue(FileUtils.readFileToString(file),DataSegment.class);
          log.info("Found segment [%s] located at [%s]",dataSegment.getIdentifier(),indexZip.getAbsoluteFile());
          final Map<String,Object> loadSpec=dataSegment.getLoadSpec();
          if (!loadSpec.get("type").equals(LocalDataStorageDruidModule.SCHEME) || !loadSpec.get("path").equals(indexZip.getAbsoluteFile())) {
            loadSpec.put("type",LocalDataStorageDruidModule.SCHEME);
            loadSpec.put("path",indexZip.getAbsolutePath());
            if (updateDescriptor) {
              log.info("Updating loadSpec in descriptor.json at [%s] with new path [%s]",file.getAbsolutePath(),indexZip.toString());
              FileUtils.writeStringToFile(file,mapper.writeValueAsString(dataSegment));
            }
          }
          segments.add(dataSegment);
        }
 catch (        IOException e) {
          throw new SegmentLoadingException(e,"Failed to read descriptor.json for segment located at [%s]",file.getAbsoluteFile());
        }
      }
 else {
        throw new SegmentLoadingException("index.zip didn't exist at [%s] while descripter.json exists!?",indexZip.getAbsoluteFile());
      }
    }
  }
}
