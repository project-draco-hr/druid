{
  Iterator resultsIter=actualResults.iterator();
  Iterator resultsIter2=actualResults.iterator();
  Iterator expectedResultsIter=expectedResults.iterator();
  int index=0;
  while (resultsIter.hasNext() && resultsIter2.hasNext() && expectedResultsIter.hasNext()) {
    Object expectedNext=expectedResultsIter.next();
    final Object next=resultsIter.next();
    final Object next2=resultsIter2.next();
    String failMsg=msg + "-" + index++;
    String failMsg2=String.format("%s: Second iterator bad, multiple calls to iterator() should be safe",failMsg);
    if (expectedNext instanceof Row) {
      assertRow(failMsg,(Row)expectedNext,(Row)next);
      assertRow(failMsg2,(Row)expectedNext,(Row)next2);
    }
 else {
      Assert.assertEquals(failMsg,expectedNext,next);
      Assert.assertEquals(failMsg2,expectedNext,next2);
    }
  }
  if (resultsIter.hasNext()) {
    Assert.fail(String.format("%s: Expected resultsIter to be exhausted, next element was %s",msg,resultsIter.next()));
  }
  if (resultsIter2.hasNext()) {
    Assert.fail(String.format("%s: Expected resultsIter2 to be exhausted, next element was %s",msg,resultsIter.next()));
  }
  if (expectedResultsIter.hasNext()) {
    Assert.fail(String.format("%s: Expected expectedResultsIter to be exhausted, next element was %s",msg,expectedResultsIter.next()));
  }
}
