{
  int payloadSize=message.payloadSize();
  if (chars == null || chars.remaining() < payloadSize) {
    chars=CharBuffer.allocate(payloadSize);
  }
  final CoderResult coderResult=Charsets.UTF_8.newDecoder().onMalformedInput(CodingErrorAction.REPLACE).onUnmappableCharacter(CodingErrorAction.REPLACE).decode(message.payload(),chars,true);
  if (coderResult.isUnderflow()) {
    chars.flip();
    try {
      return parser.parse(chars.toString());
    }
  finally {
      chars.clear();
    }
  }
 else {
    throw new FormattedException.Builder().withErrorCode(FormattedException.ErrorCode.UNPARSABLE_ROW).withMessage(String.format("Failed with CoderResult[%s]",coderResult)).build();
  }
}
