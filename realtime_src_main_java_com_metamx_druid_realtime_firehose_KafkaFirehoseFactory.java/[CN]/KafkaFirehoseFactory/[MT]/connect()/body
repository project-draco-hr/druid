{
  final ConsumerConnector connector=Consumer.createJavaConsumerConnector(new ConsumerConfig(consumerProps));
  final Map<String,List<KafkaStream<Message>>> streams=connector.createMessageStreams(ImmutableMap.of(feed,1));
  final List<KafkaStream<Message>> streamList=streams.get(feed);
  if (streamList == null || streamList.size() != 1) {
    return null;
  }
  final KafkaStream<Message> stream=streamList.get(0);
  if (parser instanceof StringInputRowParser) {
    return new StringMessageFirehose(connector,stream);
  }
 else   if (parser instanceof ProtoBufInputRowParser) {
    return new ProtoBufMessageFirehose(stream,connector);
  }
  throw new RuntimeException("No Firehose for parser: " + parser.getClass().getName());
}
