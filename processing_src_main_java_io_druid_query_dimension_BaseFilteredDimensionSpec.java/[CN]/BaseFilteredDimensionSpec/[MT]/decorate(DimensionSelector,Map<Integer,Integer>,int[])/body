{
  if (selector == null) {
    return selector;
  }
  return new DimensionSelector(){
    @Override public IndexedInts getRow(){
      IndexedInts baseRow=selector.getRow();
      List<Integer> result=new ArrayList<>(baseRow.size());
      for (      int i : baseRow) {
        if (forwardMapping.containsKey(i)) {
          result.add(forwardMapping.get(i));
        }
      }
      return new ListBasedIndexedInts(result);
    }
    @Override public int getValueCardinality(){
      return forwardMapping.size();
    }
    @Override public String lookupName(    int id){
      return selector.lookupName(reverseMapping[id]);
    }
    @Override public int lookupId(    String name){
      return forwardMapping.get(selector.lookupId(name));
    }
  }
;
}
