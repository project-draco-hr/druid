{
  final CoordinatorStats stats=new CoordinatorStats();
  stats.addToTieredStat(assignedCount,tier,0);
  int currReplicantsInTier=totalReplicantsInTier;
  int currTotalReplicantsInCluster=totalReplicantsInCluster;
  while (currReplicantsInTier < expectedReplicantsInTier) {
    boolean replicate=currTotalReplicantsInCluster > 0;
    if (replicate && !replicationManager.canCreateReplicant(tier)) {
      break;
    }
    final ServerHolder holder=strategy.findNewSegmentHomeReplicator(segment,serverHolderList);
    if (holder == null) {
      log.warn("Not enough [%s] servers or node capacity to assign segment[%s]! Expected Replicants[%d]",tier,segment.getIdentifier(),expectedReplicantsInTier);
      break;
    }
    if (replicate) {
      replicationManager.registerReplicantCreation(tier,segment.getIdentifier(),holder.getServer().getHost());
    }
    holder.getPeon().loadSegment(segment,new LoadPeonCallback(){
      @Override public void execute(){
        replicationManager.unregisterReplicantCreation(tier,segment.getIdentifier(),holder.getServer().getHost());
      }
    }
);
    stats.addToTieredStat(assignedCount,tier,1);
    ++currReplicantsInTier;
    ++currTotalReplicantsInCluster;
  }
  return stats;
}
