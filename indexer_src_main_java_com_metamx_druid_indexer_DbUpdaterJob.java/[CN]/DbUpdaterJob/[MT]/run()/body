{
  final List<DataSegment> segments=IndexGeneratorJob.getPublishedSegments(config);
  for (  final DataSegment segment : segments) {
    dbi.withHandle(new HandleCallback<Void>(){
      @Override public Void withHandle(      Handle handle) throws Exception {
        handle.createStatement(String.format("INSERT INTO %s (id, dataSource, created_date, start, end, partitioned, version, used, payload) " + "VALUES (:id, :dataSource, :created_date, :start, :end, :partitioned, :version, :used, :payload)",spec.getSegmentTable())).bind("id",segment.getIdentifier()).bind("dataSource",segment.getDataSource()).bind("created_date",new DateTime().toString()).bind("start",segment.getInterval().getStart().toString()).bind("end",segment.getInterval().getEnd().toString()).bind("partitioned",segment.getShardSpec().getPartitionNum()).bind("version",segment.getVersion()).bind("used",true).bind("payload",jsonMapper.writeValueAsString(segment)).execute();
        return null;
      }
    }
);
    log.info("Published %s",segment.getIdentifier());
  }
  return true;
}
