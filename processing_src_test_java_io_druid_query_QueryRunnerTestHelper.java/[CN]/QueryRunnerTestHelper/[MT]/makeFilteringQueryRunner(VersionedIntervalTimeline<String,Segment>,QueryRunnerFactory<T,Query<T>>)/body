{
  final QueryToolChest<T,Query<T>> toolChest=factory.getToolchest();
  return new FinalizeResultsQueryRunner(toolChest.postMergeQueryDecoration(toolChest.mergeResults(toolChest.preMergeQueryDecoration(new QueryRunner<T>(){
    @Override public Sequence<T> run(    Query<T> query,    Map<String,Object> responseContext){
      List<TimelineObjectHolder> segments=Lists.newArrayList();
      for (      Interval interval : query.getIntervals()) {
        segments.addAll(timeline.lookup(interval));
      }
      List<Sequence<T>> sequences=Lists.newArrayList();
      for (      TimelineObjectHolder<String,Segment> holder : toolChest.filterSegments(query,segments)) {
        Segment segment=holder.getObject().getChunk(0).getObject();
        Query running=query.withQuerySegmentSpec(new SpecificSegmentSpec(new SegmentDescriptor(holder.getInterval(),holder.getVersion(),0)));
        sequences.add(factory.createRunner(segment).run(running,responseContext));
      }
      return new MergeSequence<>(query.getResultOrdering(),Sequences.simple(sequences));
    }
  }
))),toolChest);
}
