{
  final long timestamp=System.currentTimeMillis();
  IncrementalIndex toPersist=IncrementalIndexTest.createIndex(null);
  IncrementalIndexTest.populateIndex(timestamp,toPersist);
  Map<String,Object> metadataElems=ImmutableMap.<String,Object>of("key","value");
  toPersist.getMetadata().putAll(metadataElems);
  final File tempDir=temporaryFolder.newFolder();
  QueryableIndex index=closer.closeLater(INDEX_IO.loadIndex(INDEX_MERGER.persist(toPersist,tempDir,indexSpec)));
  Assert.assertEquals(2,index.getColumn(Column.TIME_COLUMN_NAME).getLength());
  Assert.assertEquals(Arrays.asList("dim1","dim2"),Lists.newArrayList(index.getAvailableDimensions()));
  Assert.assertEquals(3,index.getColumnNames().size());
  assertDimCompression(index,indexSpec.getDimensionCompression());
  Assert.assertEquals(new Metadata().setAggregators(IncrementalIndexTest.getDefaultCombiningAggregatorFactories()).setQueryGranularity(QueryGranularities.NONE).setRollup(Boolean.TRUE).putAll(metadataElems),index.getMetadata());
}
