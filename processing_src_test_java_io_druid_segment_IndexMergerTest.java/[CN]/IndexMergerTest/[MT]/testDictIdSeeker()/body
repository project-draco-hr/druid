{
  IntBuffer dimConversions=ByteBuffer.allocateDirect(3 * Ints.BYTES).asIntBuffer();
  dimConversions.put(0);
  dimConversions.put(2);
  dimConversions.put(4);
  IndexMerger.DictIdSeeker dictIdSeeker=new IndexMerger.DictIdSeeker((IntBuffer)dimConversions.asReadOnlyBuffer().rewind());
  Assert.assertEquals(0,dictIdSeeker.seek(0));
  Assert.assertEquals(-1,dictIdSeeker.seek(1));
  Assert.assertEquals(1,dictIdSeeker.seek(2));
  try {
    dictIdSeeker.seek(5);
    Assert.fail("Only support access in order");
  }
 catch (  ISE ise) {
    Assert.assertTrue("Only support access in order",true);
  }
  Assert.assertEquals(-1,dictIdSeeker.seek(3));
  Assert.assertEquals(2,dictIdSeeker.seek(4));
  Assert.assertEquals(-1,dictIdSeeker.seek(5));
}
