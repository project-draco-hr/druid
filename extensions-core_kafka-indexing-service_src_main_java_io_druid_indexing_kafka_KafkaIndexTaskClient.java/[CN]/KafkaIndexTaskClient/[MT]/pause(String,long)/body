{
  log.debug("Pause task[%s] timeout[%d]",id,timeout);
  try {
    final FullResponseHolder response=submitRequest(id,HttpMethod.POST,"pause",timeout > 0 ? String.format("timeout=%d",timeout) : null,true);
    if (response.getStatus().equals(HttpResponseStatus.OK)) {
      log.info("Task [%s] paused successfully",id);
      return jsonMapper.readValue(response.getContent(),new TypeReference<Map<Integer,Long>>(){
      }
);
    }
    final RetryPolicy retryPolicy=retryPolicyFactory.makeRetryPolicy();
    while (true) {
      if (getStatus(id) == KafkaIndexTask.Status.PAUSED) {
        return getCurrentOffsets(id,true);
      }
      final Duration delay=retryPolicy.getAndIncrementRetryDelay();
      if (delay == null) {
        log.error("Task [%s] failed to pause, aborting",id);
        throw new ISE("Task [%s] failed to pause, aborting",id);
      }
 else {
        final long sleepTime=delay.getMillis();
        log.info("Still waiting for task [%s] to pause; will try again in [%s]",id,new Duration(sleepTime).toString());
        Thread.sleep(sleepTime);
      }
    }
  }
 catch (  NoTaskLocationException e) {
    log.error("Exception [%s] while pausing Task [%s]",e.getMessage(),id);
    return ImmutableMap.of();
  }
catch (  IOException|InterruptedException e) {
    log.error("Exception [%s] while pausing Task [%s]",e.getMessage(),id);
    throw Throwables.propagate(e);
  }
}
