{
  final Map<String,String> stringMap=ImmutableMap.of("1","HELLO","a","HELLO","def","HELLO","abc","UNKNOWN");
  LookupExtractor mapExtractor=new MapLookupExtractor(stringMap,false);
  LookupExtractionFn lookupFn=new LookupExtractionFn(mapExtractor,false,"UNKNOWN",false,true);
  assertFilterMatches(newJavaScriptDimFilter("dim0",jsValueFilter("HELLO"),lookupFn),ImmutableList.of("1"));
  assertFilterMatches(newJavaScriptDimFilter("dim0",jsValueFilter("UNKNOWN"),lookupFn),ImmutableList.of("0","2","3","4","5"));
  assertFilterMatches(newJavaScriptDimFilter("dim1",jsValueFilter("HELLO"),lookupFn),ImmutableList.of("3","4"));
  assertFilterMatches(newJavaScriptDimFilter("dim1",jsValueFilter("UNKNOWN"),lookupFn),ImmutableList.of("0","1","2","5"));
  assertFilterMatches(newJavaScriptDimFilter("dim2",jsValueFilter("HELLO"),lookupFn),ImmutableList.of("0","3"));
  assertFilterMatches(newJavaScriptDimFilter("dim2",jsValueFilter("UNKNOWN"),lookupFn),ImmutableList.of("0","1","2","4","5"));
  assertFilterMatches(newJavaScriptDimFilter("dim3",jsValueFilter("HELLO"),lookupFn),ImmutableList.<String>of());
  assertFilterMatches(newJavaScriptDimFilter("dim3",jsValueFilter("UNKNOWN"),lookupFn),ImmutableList.of("0","1","2","3","4","5"));
  assertFilterMatches(newJavaScriptDimFilter("dim4",jsValueFilter("HELLO"),lookupFn),ImmutableList.<String>of());
  assertFilterMatches(newJavaScriptDimFilter("dim4",jsValueFilter("UNKNOWN"),lookupFn),ImmutableList.of("0","1","2","3","4","5"));
}
