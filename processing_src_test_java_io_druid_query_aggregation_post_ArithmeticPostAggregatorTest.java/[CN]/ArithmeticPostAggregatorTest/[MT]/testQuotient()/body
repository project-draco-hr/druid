{
  ArithmeticPostAggregator agg=new ArithmeticPostAggregator(null,"quotient",ImmutableList.<PostAggregator>of(new FieldAccessPostAggregator("numerator","value"),new ConstantPostAggregator("zero",0)),"numericFirst");
  Assert.assertEquals(Double.NaN,agg.compute(ImmutableMap.<String,Object>of("value",0)));
  Assert.assertEquals(Double.NaN,agg.compute(ImmutableMap.<String,Object>of("value",Double.NaN)));
  Assert.assertEquals(Double.POSITIVE_INFINITY,agg.compute(ImmutableMap.<String,Object>of("value",1)));
  Assert.assertEquals(Double.NEGATIVE_INFINITY,agg.compute(ImmutableMap.<String,Object>of("value",-1)));
}
