{
  ArithmeticPostAggregator arithmeticPostAggregator;
  CountAggregator agg=new CountAggregator("rows");
  agg.aggregate();
  agg.aggregate();
  agg.aggregate();
  Map<String,Object> metricValues=new HashMap<String,Object>();
  metricValues.put(agg.getName(),agg.get());
  List<PostAggregator> postAggregatorList=Lists.newArrayList(new ConstantPostAggregator("roku",6),new FieldAccessPostAggregator("rows","rows"));
  arithmeticPostAggregator=new ArithmeticPostAggregator("add","+",postAggregatorList);
  Assert.assertEquals(9.0,arithmeticPostAggregator.compute(metricValues));
  arithmeticPostAggregator=new ArithmeticPostAggregator("subtract","-",postAggregatorList);
  Assert.assertEquals(3.0,arithmeticPostAggregator.compute(metricValues));
  arithmeticPostAggregator=new ArithmeticPostAggregator("multiply","*",postAggregatorList);
  Assert.assertEquals(18.0,arithmeticPostAggregator.compute(metricValues));
  arithmeticPostAggregator=new ArithmeticPostAggregator("divide","/",postAggregatorList);
  Assert.assertEquals(2.0,arithmeticPostAggregator.compute(metricValues));
}
