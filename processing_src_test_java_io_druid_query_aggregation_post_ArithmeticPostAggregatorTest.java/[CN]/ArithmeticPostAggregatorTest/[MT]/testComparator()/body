{
  ArithmeticPostAggregator arithmeticPostAggregator;
  CountAggregator agg=new CountAggregator("rows");
  Map<String,Object> metricValues=new HashMap<String,Object>();
  metricValues.put(agg.getName(),agg.get());
  List<PostAggregator> postAggregatorList=Lists.newArrayList(new ConstantPostAggregator("roku",6,null),new FieldAccessPostAggregator("rows","rows"));
  arithmeticPostAggregator=new ArithmeticPostAggregator("add","+",postAggregatorList);
  Comparator comp=arithmeticPostAggregator.getComparator();
  Object before=arithmeticPostAggregator.compute(metricValues);
  agg.aggregate();
  agg.aggregate();
  agg.aggregate();
  metricValues.put(agg.getName(),agg.get());
  Object after=arithmeticPostAggregator.compute(metricValues);
  Assert.assertEquals(-1,comp.compare(before,after));
  Assert.assertEquals(0,comp.compare(before,before));
  Assert.assertEquals(0,comp.compare(after,after));
  Assert.assertEquals(1,comp.compare(after,before));
}
