{
  if (arg1 == null) {
    return arg2;
  }
  if (arg2 == null) {
    return arg1;
  }
  final int limit=gran instanceof AllGranularity ? this.limit : -1;
  SearchResultValue arg1Vals=arg1.getValue();
  SearchResultValue arg2Vals=arg2.getValue();
  Iterable<SearchHit> merged=Iterables.mergeSorted(Arrays.asList(arg1Vals,arg2Vals),searchSortSpec.getComparator());
  int maxSize=arg1Vals.getValue().size() + arg2Vals.getValue().size();
  if (limit > 0) {
    maxSize=Math.min(limit,maxSize);
  }
  List<SearchHit> results=Lists.newArrayListWithExpectedSize(maxSize);
  SearchHit prev=null;
  for (  SearchHit searchHit : merged) {
    if (prev == null) {
      prev=searchHit;
      continue;
    }
    if (prev.equals(searchHit)) {
      if (prev.getCount() != null) {
        prev=new SearchHit(prev.getDimension(),prev.getValue(),prev.getCount() + searchHit.getCount());
      }
    }
 else {
      results.add(prev);
      prev=searchHit;
      if (limit > 0 && results.size() >= limit) {
        break;
      }
    }
  }
  if (prev != null && (limit < 0 || results.size() < limit)) {
    results.add(prev);
  }
  final DateTime timestamp=gran instanceof AllGranularity ? arg1.getTimestamp() : gran.toDateTime(gran.truncate(arg1.getTimestamp().getMillis()));
  return new Result<SearchResultValue>(timestamp,new SearchResultValue(results));
}
