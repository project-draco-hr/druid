{
  final TestColumnSelectorFactory columnSelectorFactory=GrouperTestUtil.newColumnSelectorFactory();
  final Grouper<Integer> grouper=makeGrouper(columnSelectorFactory,10000,Integer.MAX_VALUE);
  final int expectedMaxSize=267;
  columnSelectorFactory.setRow(new MapBasedRow(0,ImmutableMap.<String,Object>of("value",10L)));
  for (int i=0; i < expectedMaxSize; i++) {
    Assert.assertTrue(String.valueOf(i),grouper.aggregate(i));
  }
  Assert.assertFalse(grouper.aggregate(expectedMaxSize));
  columnSelectorFactory.setRow(new MapBasedRow(0,ImmutableMap.<String,Object>of("value",11L)));
  for (int i=0; i < expectedMaxSize; i++) {
    Assert.assertTrue(String.valueOf(i),grouper.aggregate(i));
  }
  Assert.assertFalse(grouper.aggregate(expectedMaxSize));
  final List<Grouper.Entry<Integer>> expected=Lists.newArrayList();
  for (int i=0; i < expectedMaxSize; i++) {
    expected.add(new Grouper.Entry<>(i,new Object[]{21L,2L}));
  }
  Assert.assertEquals(expected,Lists.newArrayList(grouper.iterator(true)));
}
