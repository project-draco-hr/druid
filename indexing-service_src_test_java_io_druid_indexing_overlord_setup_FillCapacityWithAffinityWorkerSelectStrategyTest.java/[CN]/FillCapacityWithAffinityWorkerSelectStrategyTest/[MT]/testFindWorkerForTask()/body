{
  FillCapacityWorkerSelectStrategy strategy=new FillCapacityWithAffinityWorkerSelectStrategy(new FillCapacityWithAffinityConfig(ImmutableMap.of("foo",Arrays.asList("localhost"))));
  Optional<ImmutableWorkerInfo> optional=strategy.findWorkerForTask(new RemoteTaskRunnerConfig(),ImmutableMap.of("lhost",new ImmutableWorkerInfo(new Worker("lhost","lhost",1,"v1"),0,Sets.<String>newHashSet(),Sets.<String>newHashSet(),DateTime.now()),"localhost",new ImmutableWorkerInfo(new Worker("localhost","localhost",1,"v1"),0,Sets.<String>newHashSet(),Sets.<String>newHashSet(),DateTime.now())),new NoopTask(null,1,0,null,null,null){
    @Override public String getDataSource(){
      return "foo";
    }
  }
);
  ImmutableWorkerInfo worker=optional.get();
  Assert.assertEquals("localhost",worker.getWorker().getHost());
}
