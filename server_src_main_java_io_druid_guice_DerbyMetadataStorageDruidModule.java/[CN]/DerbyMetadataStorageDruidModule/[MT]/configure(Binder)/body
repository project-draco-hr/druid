{
  bindDataBaseDerby(binder);
  PolyBind.createChoice(binder,"druid.db.type",Key.get(MetadataStorageConnector.class),Key.get(DerbyConnector.class));
  PolyBind.createChoice(binder,"druid.db.type",Key.get(MetadataSegmentManager.class),Key.get(DerbyMetadataSegmentManager.class));
  PolyBind.createChoice(binder,"druid.db.type",Key.get(MetadataSegmentManagerProvider.class),Key.get(DerbyMetadataSegmentManagerProvider.class));
  PolyBind.createChoice(binder,"druid.db.type",Key.get(MetadataRuleManager.class),Key.get(DerbyMetadataRuleManager.class));
  PolyBind.createChoice(binder,"druid.db.type",Key.get(MetadataRuleManagerProvider.class),Key.get(DerbyMetadataRuleManagerProvider.class));
  PolyBind.createChoice(binder,"druid.db.type",Key.get(SegmentPublisher.class),Key.get(SQLMetadataSegmentPublisher.class));
  PolyBind.createChoice(binder,"druid.db.type",Key.get(MetadataSegmentPublisherProvider.class),Key.get(SQLMetadataSegmentPublisherProvider.class));
  PolyBind.createChoice(binder,"druid.db.type",Key.get(IndexerMetadataStorageCoordinator.class),Key.get(IndexerSQLMetadataStorageCoordinator.class));
  PolyBind.createChoice(binder,"druid.db.type",Key.get(MetadataStorageActionHandler.class),Key.get(SQLMetadataStorageActionHandler.class));
  PolyBind.createChoice(binder,"druid.db.type",Key.get(MetadataStorageUpdaterJobHandler.class),Key.get(SQLMetadataStorageUpdaterJobHandler.class));
}
