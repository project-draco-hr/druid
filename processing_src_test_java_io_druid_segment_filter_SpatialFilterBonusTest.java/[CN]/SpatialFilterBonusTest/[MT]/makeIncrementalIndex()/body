{
  IncrementalIndex theIndex=new OnheapIncrementalIndex(new IncrementalIndexSchema.Builder().withMinTimestamp(DATA_INTERVAL.getStartMillis()).withQueryGranularity(QueryGranularity.DAY).withMetrics(METRIC_AGGS).withDimensionsSpec(new DimensionsSpec(null,null,Arrays.asList(new SpatialDimensionSchema("dim.geo",Lists.<String>newArrayList())))).build(),false,NUM_POINTS);
  theIndex.add(new MapBasedInputRow(new DateTime("2013-01-01").getMillis(),DIMS,ImmutableMap.<String,Object>of("timestamp",new DateTime("2013-01-01").toString(),"dim","foo","dim.geo","0.0,0.0","val",17L)));
  theIndex.add(new MapBasedInputRow(new DateTime("2013-01-02").getMillis(),DIMS,ImmutableMap.<String,Object>of("timestamp",new DateTime("2013-01-02").toString(),"dim","foo","dim.geo","1.0,3.0","val",29L)));
  theIndex.add(new MapBasedInputRow(new DateTime("2013-01-03").getMillis(),DIMS,ImmutableMap.<String,Object>of("timestamp",new DateTime("2013-01-03").toString(),"dim","foo","dim.geo","4.0,2.0","val",13L)));
  theIndex.add(new MapBasedInputRow(new DateTime("2013-01-04").getMillis(),DIMS,ImmutableMap.<String,Object>of("timestamp",new DateTime("2013-01-04").toString(),"dim","foo","dim.geo","7.0,3.0","val",91L)));
  theIndex.add(new MapBasedInputRow(new DateTime("2013-01-05").getMillis(),DIMS,ImmutableMap.<String,Object>of("timestamp",new DateTime("2013-01-05").toString(),"dim","foo","dim.geo","8.0,6.0","val",47L)));
  theIndex.add(new MapBasedInputRow(new DateTime("2013-01-05").getMillis(),DIMS,ImmutableMap.<String,Object>of("timestamp",new DateTime("2013-01-05").toString(),"dim","foo","dim.geo","_mmx.unknown","val",501L)));
  Random rand=new Random();
  for (int i=6; i < NUM_POINTS; i++) {
    theIndex.add(new MapBasedInputRow(new DateTime("2013-01-01").getMillis(),DIMS,ImmutableMap.<String,Object>of("timestamp",new DateTime("2013-01-01").toString(),"dim","boo","dim.geo",String.format("%s,%s",(float)(rand.nextFloat() * 10 + 10.0),(float)(rand.nextFloat() * 10 + 10.0)),"val",i)));
  }
  return theIndex;
}
