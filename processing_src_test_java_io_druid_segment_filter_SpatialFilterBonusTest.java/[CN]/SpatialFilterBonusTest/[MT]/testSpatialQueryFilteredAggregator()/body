{
  TimeseriesQuery query=Druids.newTimeseriesQueryBuilder().dataSource("test").granularity(QueryGranularity.DAY).intervals(Arrays.asList(new Interval("2013-01-01/2013-01-07"))).aggregators(Arrays.asList(new CountAggregatorFactory("rows"),new FilteredAggregatorFactory(new LongSumAggregatorFactory("valFiltered","val"),new SpatialDimFilter("dim.geo",new RectangularBound(new float[]{0.0f,0.0f},new float[]{9.0f,9.0f}))),new LongSumAggregatorFactory("val","val"))).build();
  List<Result<TimeseriesResultValue>> expectedResults=Arrays.asList(new Result<>(new DateTime("2013-01-01T00:00:00.000Z"),new TimeseriesResultValue(ImmutableMap.<String,Object>builder().put("rows",4995L).put("val",12497502L).put("valFiltered",17L).build())),new Result<>(new DateTime("2013-01-02T00:00:00.000Z"),new TimeseriesResultValue(ImmutableMap.<String,Object>builder().put("rows",1L).put("val",29L).put("valFiltered",29L).build())),new Result<>(new DateTime("2013-01-03T00:00:00.000Z"),new TimeseriesResultValue(ImmutableMap.<String,Object>builder().put("rows",1L).put("val",13L).put("valFiltered",13L).build())),new Result<>(new DateTime("2013-01-04T00:00:00.000Z"),new TimeseriesResultValue(ImmutableMap.<String,Object>builder().put("rows",1L).put("val",91L).put("valFiltered",91L).build())),new Result<>(new DateTime("2013-01-05T00:00:00.000Z"),new TimeseriesResultValue(ImmutableMap.<String,Object>builder().put("rows",2L).put("val",548L).put("valFiltered",47L).build())));
  try {
    TimeseriesQueryRunnerFactory factory=new TimeseriesQueryRunnerFactory(new TimeseriesQueryQueryToolChest(QueryRunnerTestHelper.NoopIntervalChunkingQueryRunnerDecorator()),new TimeseriesQueryEngine(),QueryRunnerTestHelper.NOOP_QUERYWATCHER);
    QueryRunner runner=new FinalizeResultsQueryRunner(factory.createRunner(segment),factory.getToolchest());
    HashMap<String,Object> context=new HashMap<String,Object>();
    TestHelper.assertExpectedResults(expectedResults,runner.run(query,context));
  }
 catch (  Exception e) {
    throw Throwables.propagate(e);
  }
}
