{
  return new QueryRunner<T>(){
    @Override public Sequence<T> run(    Query<T> query,    Map<String,Object> responseContext){
      try {
        Server instance=brokerSelector.pick();
        if (instance == null) {
          return Sequences.empty();
        }
        final Server brokerServer=brokerSelector.pick();
        final URL url=new URL(brokerServer.getScheme(),brokerServer.getAddress(),brokerServer.getPort(),"/druid/v2/");
        StatusResponseHolder response=httpClient.go(new Request(HttpMethod.POST,url).setContent(MediaType.APPLICATION_JSON,jsonMapper.writeValueAsBytes(query)),responseHandler).get();
        List<T> results=jsonMapper.readValue(response.getContent(),new TypeReference<List<T>>(){
        }
);
        return Sequences.simple(results);
      }
 catch (      Exception e) {
        log.error(e,"Exception with bridge query");
        return Sequences.empty();
      }
    }
  }
;
}
