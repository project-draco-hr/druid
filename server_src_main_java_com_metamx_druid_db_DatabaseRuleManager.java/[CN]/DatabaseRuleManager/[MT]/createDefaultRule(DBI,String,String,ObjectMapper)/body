{
  try {
    dbi.withHandle(new HandleCallback<Void>(){
      @Override public Void withHandle(      Handle handle) throws Exception {
        List<Map<String,Object>> existing=handle.select(String.format("SELECT id from %s where datasource=%s;",ruleTable,defaultDatasource));
        if (!existing.isEmpty()) {
          return null;
        }
        final List<Rule> defaultRules=Arrays.<Rule>asList(new PeriodLoadRule(new Period("P5000Y"),2,"_default_tier"));
        final String version=new DateTime().toString();
        handle.createStatement(String.format("INSERT INTO %s (id, dataSource, version, payload) VALUES (:id, :dataSource, :version, :payload)",ruleTable)).bind("id",String.format("%s_%s",defaultDatasource,version)).bind("dataSource",defaultDatasource).bind("version",version).bind("payload",jsonMapper.writeValueAsString(defaultRules)).execute();
        return null;
      }
    }
);
  }
 catch (  Exception e) {
    throw Throwables.propagate(e);
  }
}
