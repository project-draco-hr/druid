{
  final LinkedList<String> tables=new LinkedList<String>();
  final String entryType=tablesConfig.getTaskEntryType();
  tables.add(tablesConfig.getConfigTable());
  tables.add(tablesConfig.getSegmentsTable());
  tables.add(tablesConfig.getRulesTable());
  tables.add(tablesConfig.getLockTable(entryType));
  tables.add(tablesConfig.getLogTable(entryType));
  tables.add(tablesConfig.getEntryTable(entryType));
  tables.add(tablesConfig.getAuditTable());
  tables.add(tablesConfig.getSupervisorTable());
  connector.createSegmentTable();
  connector.createConfigTable();
  connector.createRulesTable();
  connector.createTaskTables();
  connector.createAuditTable();
  connector.createSupervisorsTable();
  connector.getDBI().withHandle(new HandleCallback<Void>(){
    @Override public Void withHandle(    Handle handle) throws Exception {
      for (      String table : tables) {
        Assert.assertTrue(String.format("table %s was not created!",table),connector.tableExists(handle,table));
      }
      return null;
    }
  }
);
  for (  String table : tables) {
    dropTable(table);
  }
}
