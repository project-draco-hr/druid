{
  PolyBind.createChoice(binder,"druid.indexer.task.chathandler.type",Key.get(ChatHandlerProvider.class),Key.get(NoopChatHandlerProvider.class));
  final MapBinder<String,ChatHandlerProvider> handlerProviderBinder=PolyBind.optionBinder(binder,Key.get(ChatHandlerProvider.class));
  handlerProviderBinder.addBinding("curator").to(EventReceivingChatHandlerProvider.class);
  handlerProviderBinder.addBinding("noop").to(NoopChatHandlerProvider.class);
  binder.bind(TaskToolboxFactory.class).in(LazySingleton.class);
  JsonConfigProvider.bind(binder,"druid.indexer.task",TaskConfig.class);
  JsonConfigProvider.bind(binder,"druid.worker.taskActionClient.retry",RetryPolicyConfig.class);
  binder.bind(TaskActionClientFactory.class).to(RemoteTaskActionClientFactory.class).in(LazySingleton.class);
  binder.bind(RetryPolicyFactory.class).in(LazySingleton.class);
  binder.bind(DataSegmentKiller.class).to(S3DataSegmentKiller.class).in(LazySingleton.class);
  binder.bind(ExecutorLifecycle.class).in(ManageLifecycle.class);
  binder.bind(ExecutorLifecycleConfig.class).toInstance(config);
  binder.bind(TaskRunner.class).to(ThreadPoolTaskRunner.class).in(LazySingleton.class);
  binder.bind(ThreadPoolTaskRunner.class).in(ManageLifecycle.class);
}
