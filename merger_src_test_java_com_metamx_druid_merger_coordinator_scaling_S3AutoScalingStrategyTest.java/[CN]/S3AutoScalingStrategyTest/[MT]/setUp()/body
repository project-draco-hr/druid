{
  amazonEC2Client=EasyMock.createMock(AmazonEC2Client.class);
  runInstancesResult=EasyMock.createMock(RunInstancesResult.class);
  describeInstancesResult=EasyMock.createMock(DescribeInstancesResult.class);
  reservation=EasyMock.createMock(Reservation.class);
  instance=new Instance().withInstanceId(INSTANCE_ID).withLaunchTime(new Date()).withImageId(AMI_ID);
  worker=new WorkerWrapper(new Worker("dummyHost","dummyIP",2,"0"),new ConcurrentSkipListSet<String>(),null);
  worker.setLastCompletedTaskTime(new DateTime(0));
  strategy=new S3AutoScalingStrategy(amazonEC2Client,new S3AutoScalingStrategyConfig(){
    @Override public String getAmiId(){
      return AMI_ID;
    }
    @Override public String getWorkerPort(){
      return "8080";
    }
    @Override public String getInstanceType(){
      return "t1.micro";
    }
    @Override public long getMillisToWaitBeforeTerminating(){
      return 0;
    }
    @Override public int getMinNuMWorkers(){
      return 0;
    }
  }
);
}
