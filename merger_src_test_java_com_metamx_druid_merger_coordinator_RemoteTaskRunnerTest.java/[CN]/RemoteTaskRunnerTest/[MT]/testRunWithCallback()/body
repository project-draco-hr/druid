{
  final MutableBoolean callbackCalled=new MutableBoolean(false);
  Futures.addCallback(remoteTaskRunner.run(new TestTask(task1.getId(),task1.getDataSource(),task1.getSegments(),Lists.<AggregatorFactory>newArrayList(),TaskStatus.running(task1.getId()))),new FutureCallback<TaskStatus>(){
    @Override public void onSuccess(    TaskStatus taskStatus){
      callbackCalled.setValue(true);
    }
    @Override public void onFailure(    Throwable throwable){
    }
  }
);
  int count=0;
  while (remoteTaskRunner.findWorkerRunningTask(task1.getId()) == null) {
    Thread.sleep(500);
    if (count > 10) {
      throw new ISE("WTF?! Task still not announced in ZK?");
    }
    count++;
  }
  Assert.assertTrue(remoteTaskRunner.getRunningTasks().size() == 1);
  cf.setData().forPath(String.format("%s/worker1/task1",statusPath),jsonMapper.writeValueAsBytes(TaskStatus.success(task1.getId())));
  count=0;
  while (remoteTaskRunner.findWorkerRunningTask(task1.getId()) != null) {
    Thread.sleep(500);
    if (count > 10) {
      throw new ISE("WTF?! Task still exists in ZK?");
    }
    count++;
  }
  Assert.assertTrue("TaskCallback was not called!",callbackCalled.booleanValue());
}
