{
  final String section="convert dims";
  progress.startSection(section);
  for (  IndexableAdapter index : adapters) {
    int[] arr=new int[index.getNumRows()];
    Arrays.fill(arr,INVALID_ROW);
    rowNumConversions.add(IntBuffer.wrap(arr));
  }
  int rowCount=0;
  for (  Rowboat theRow : theRows) {
    for (    Map.Entry<Integer,TreeSet<Integer>> comprisedRow : theRow.getComprisedRows().entrySet()) {
      final IntBuffer conversionBuffer=rowNumConversions.get(comprisedRow.getKey());
      for (      Integer rowNum : comprisedRow.getValue()) {
        while (conversionBuffer.position() < rowNum) {
          conversionBuffer.put(INVALID_ROW);
        }
        conversionBuffer.put(rowCount);
      }
    }
    if ((++rowCount % 500000) == 0) {
      progress.progressSection(section,String.format("Walked 500,000/%,d rows",rowCount));
    }
  }
  for (  IntBuffer rowNumConversion : rowNumConversions) {
    rowNumConversion.rewind();
  }
  progress.stopSection(section);
  return rowCount;
}
