{
  File file=new File(filename);
  if (!file.exists()) {
    System.out.printf("File[%s] does not exist.%n",file);
  }
  File outFile=new File(outFilename);
  if (!outFile.getParentFile().exists()) {
    outFile.getParentFile().mkdirs();
  }
  Properties fromFile=new Properties();
  try (Reader in=new InputStreamReader(new FileInputStream(file),Charsets.UTF_8)){
    fromFile.load(in);
  }
 catch (  IOException e) {
    throw Throwables.propagate(e);
  }
  Properties updatedProps=new Properties();
  int count=0;
  for (  String property : fromFile.stringPropertyNames()) {
    boolean handled=false;
    for (    PropertyConverter converter : converters) {
      if (converter.canHandle(property)) {
        for (        Map.Entry<String,String> entry : converter.convert(fromFile).entrySet()) {
          ++count;
          updatedProps.setProperty(entry.getKey(),entry.getValue());
        }
        handled=true;
      }
    }
    if (!handled) {
      updatedProps.put(property,fromFile.getProperty(property));
    }
  }
  updatedProps.setProperty("druid.monitoring.monitors","[\"io.druid.server.metrics.ServerMonitor\", \"com.metamx.metrics.SysMonitor\"]");
  try (Writer out=new OutputStreamWriter(new FileOutputStream(outFile),Charsets.UTF_8)){
    updatedProps.store(out,null);
  }
 catch (  IOException e) {
    throw Throwables.propagate(e);
  }
  log.info("Completed!  Converted[%,d] properties.",count);
}
