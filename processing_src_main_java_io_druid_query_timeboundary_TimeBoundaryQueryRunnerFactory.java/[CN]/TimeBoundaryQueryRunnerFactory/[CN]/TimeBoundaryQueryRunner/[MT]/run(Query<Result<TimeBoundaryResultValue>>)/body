{
  if (!(input instanceof TimeBoundaryQuery)) {
    throw new ISE("Got a [%s] which isn't a %s",input.getClass(),TimeBoundaryQuery.class);
  }
  final TimeBoundaryQuery legacyQuery=(TimeBoundaryQuery)input;
  return new BaseSequence<>(new BaseSequence.IteratorMaker<Result<TimeBoundaryResultValue>,Iterator<Result<TimeBoundaryResultValue>>>(){
    @Override public Iterator<Result<TimeBoundaryResultValue>> make(){
      if (adapter == null) {
        throw new ISE("Null storage adapter found. Probably trying to issue a query against a segment being memory unmapped.");
      }
      final DateTime minTime=legacyQuery.getBound().equalsIgnoreCase(TimeBoundaryQuery.MAX_TIME) ? null : adapter.getMinTime();
      final DateTime maxTime=legacyQuery.getBound().equalsIgnoreCase(TimeBoundaryQuery.MIN_TIME) ? null : adapter.getMaxTime();
      return legacyQuery.buildResult(adapter.getInterval().getStart(),minTime,maxTime).iterator();
    }
    @Override public void cleanup(    Iterator<Result<TimeBoundaryResultValue>> toClean){
    }
  }
);
}
