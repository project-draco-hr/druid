{
  doSetup();
  TestRealtimeTaskV2 task1=new TestRealtimeTaskV2("rtV1",new TaskResource("rtV1",1),"foo",TaskStatus.running("rtV1"));
  remoteTaskRunner.run(task1);
  Assert.assertTrue(taskAnnounced(task1.getId()));
  mockWorkerRunningTask(task1);
  TestRealtimeTaskV2 task2=new TestRealtimeTaskV2("rtV2",new TaskResource("rtV1",1),"foo",TaskStatus.running("rtV2"));
  remoteTaskRunner.run(task2);
  TestRealtimeTaskV2 task3=new TestRealtimeTaskV2("rtV3",new TaskResource("rtV2",1),"foo",TaskStatus.running("rtV3"));
  remoteTaskRunner.run(task3);
  Assert.assertTrue(TestUtils.conditionValid(new IndexingServiceCondition(){
    @Override public boolean isValid(){
      return remoteTaskRunner.getRunningTasks().size() == 2;
    }
  }
));
  Assert.assertTrue(TestUtils.conditionValid(new IndexingServiceCondition(){
    @Override public boolean isValid(){
      return remoteTaskRunner.getPendingTasks().size() == 1;
    }
  }
));
  Assert.assertTrue(remoteTaskRunner.getPendingTasks().iterator().next().getTaskId().equals("rtV2"));
}
