{
  final File taskFile=Preconditions.checkNotNull(config.getTaskFile(),"taskFile");
  final File statusFile=Preconditions.checkNotNull(config.getStatusFile(),"statusFile");
  final InputStream parentStream=Preconditions.checkNotNull(config.getParentStream(),"parentStream");
  final Task task;
  try {
    task=jsonMapper.readValue(taskFile,Task.class);
    log.info("Running with task: %s",jsonMapper.writerWithDefaultPrettyPrinter().writeValueAsString(task));
  }
 catch (  IOException e) {
    throw Throwables.propagate(e);
  }
  parentMonitorExec.submit(new Runnable(){
    @Override public void run(){
      try {
        while (parentStream.read() != -1) {
        }
      }
 catch (      Exception e) {
        log.error(e,"Failed to read from stdin");
      }
      log.info("Triggering JVM shutdown.");
      System.exit(2);
    }
  }
);
  try {
    if (!task.isReady(taskActionClientFactory.create(task))) {
      throw new ISE("Task is not ready to run yet!",task.getId());
    }
  }
 catch (  Exception e) {
    throw new ISE(e,"Failed to run isReady",task.getId());
  }
  statusFuture=Futures.transform(taskRunner.run(task),new Function<TaskStatus,TaskStatus>(){
    @Override public TaskStatus apply(    TaskStatus taskStatus){
      try {
        log.info("Task completed with status: %s",jsonMapper.writerWithDefaultPrettyPrinter().writeValueAsString(taskStatus));
        final File statusFileParent=statusFile.getParentFile();
        if (statusFileParent != null) {
          statusFileParent.mkdirs();
        }
        jsonMapper.writeValue(statusFile,taskStatus);
        return taskStatus;
      }
 catch (      Exception e) {
        throw Throwables.propagate(e);
      }
    }
  }
);
}
