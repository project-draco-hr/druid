{
  this.schema=Preconditions.checkNotNull(schema,"schema");
  this.tuningConfig=Preconditions.checkNotNull(tuningConfig,"tuningConfig");
  this.metrics=Preconditions.checkNotNull(metrics,"metrics");
  this.dataSegmentPusher=Preconditions.checkNotNull(dataSegmentPusher,"dataSegmentPusher");
  this.objectMapper=Preconditions.checkNotNull(objectMapper,"objectMapper");
  this.conglomerate=conglomerate;
  this.segmentAnnouncer=segmentAnnouncer;
  this.emitter=emitter;
  this.queryExecutorService=queryExecutorService;
  this.indexIO=indexIO;
  this.indexMerger=indexMerger;
  this.cache=cache;
  this.cacheConfig=cacheConfig;
  if (conglomerate != null) {
    Preconditions.checkNotNull(segmentAnnouncer,"segmentAnnouncer");
    Preconditions.checkNotNull(emitter,"emitter");
    Preconditions.checkNotNull(queryExecutorService,"queryExecutorService");
    Preconditions.checkNotNull(cache,"cache");
    Preconditions.checkNotNull(cacheConfig,"cacheConfig");
    if (!cache.isLocal()) {
      log.error("Configured cache is not local, caching will not be enabled");
    }
  }
  log.info("Creating appenderator for dataSource[%s]",schema.getDataSource());
}
