{
  setupServerAndCurator();
  curator.start();
  try {
    cacheDir=new File(File.createTempFile("blah","blah2").getParent(),"ZkCoordinatorTest");
    cacheDir.mkdirs();
    for (    File file : cacheDir.listFiles()) {
      file.delete();
    }
    log.info("Creating tmp test files in [%s]",cacheDir);
  }
 catch (  IOException e) {
    throw new RuntimeException(e);
  }
  serverManager=new ServerManager(new CacheTestSegmentLoader(),new NoopQueryRunnerFactoryConglomerate(),new NoopServiceEmitter(),MoreExecutors.sameThreadExecutor());
  final DruidServerMetadata me=new DruidServerMetadata("dummyServer","dummyHost",0,"dummyType","normal");
  final ZkPathsConfig zkPaths=new ZkPathsConfig(){
    @Override public String getZkBasePath(){
      return "/druid";
    }
  }
;
  announcer=new SingleDataSegmentAnnouncer(me,zkPaths,new Announcer(curator,Execs.singleThreaded("blah")),jsonMapper);
  zkCoordinator=new ZkCoordinator(jsonMapper,new ZkCoordinatorConfig(){
    @Override public File getSegmentInfoCacheDirectory(){
      return cacheDir;
    }
  }
,zkPaths,me,announcer,curator,serverManager);
}
