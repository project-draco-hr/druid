{
  try {
    cacheDir=new File(File.createTempFile("blah","blah2").getParent(),"ZkCoordinatorTest");
    cacheDir.mkdirs();
    for (    File file : cacheDir.listFiles()) {
      file.delete();
    }
    log.info("Creating tmp test files in [%s]",cacheDir);
  }
 catch (  IOException e) {
    throw new RuntimeException(e);
  }
  serverManager=new ServerManager(new NoopStorageAdapterLoader(),new NoopQueryRunnerFactoryConglomerate(),new NoopServiceEmitter(),MoreExecutors.sameThreadExecutor());
  yp=EasyMock.createNiceMock(ZKPhoneBook.class);
  EasyMock.replay(yp);
  zkCoordinator=new ZkCoordinator(jsonMapper,new ZkCoordinatorConfig(){
    @Override public String getAnnounceLocation(){
      return null;
    }
    @Override public String getServedSegmentsLocation(){
      return null;
    }
    @Override public String getLoadQueueLocation(){
      return null;
    }
    @Override public File getSegmentInfoCacheDirectory(){
      return cacheDir;
    }
  }
,new DruidServer(new DruidServerConfig(){
    @Override public String getServerName(){
      return "dummyServer";
    }
    @Override public String getHost(){
      return "dummyHost";
    }
    @Override public long getMaxSize(){
      return 0;
    }
    @Override public String getSubType(){
      return null;
    }
  }
,"dummyType"),yp,serverManager,new NoopServiceEmitter());
  EasyMock.reset(yp);
}
