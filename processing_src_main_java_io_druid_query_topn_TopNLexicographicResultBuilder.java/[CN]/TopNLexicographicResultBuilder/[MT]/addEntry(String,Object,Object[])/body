{
  final Map<String,Object> metricValues=Maps.newHashMapWithExpectedSize(metricVals.length + 1);
  if (shouldAdd(dimName)) {
    metricValues.put(dimSpec.getOutputName(),dimName);
    final int extra=metricVals.length % LOOP_UNROLL_COUNT;
switch (extra) {
case 7:
      metricValues.put(aggFactoryNames[6],metricVals[6]);
case 6:
    metricValues.put(aggFactoryNames[5],metricVals[5]);
case 5:
  metricValues.put(aggFactoryNames[4],metricVals[4]);
case 4:
metricValues.put(aggFactoryNames[3],metricVals[3]);
case 3:
metricValues.put(aggFactoryNames[2],metricVals[2]);
case 2:
metricValues.put(aggFactoryNames[1],metricVals[1]);
case 1:
metricValues.put(aggFactoryNames[0],metricVals[0]);
}
for (int i=extra; i < metricVals.length; i+=LOOP_UNROLL_COUNT) {
metricValues.put(aggFactoryNames[i + 0],metricVals[i + 0]);
metricValues.put(aggFactoryNames[i + 1],metricVals[i + 1]);
metricValues.put(aggFactoryNames[i + 2],metricVals[i + 2]);
metricValues.put(aggFactoryNames[i + 3],metricVals[i + 3]);
metricValues.put(aggFactoryNames[i + 4],metricVals[i + 4]);
metricValues.put(aggFactoryNames[i + 5],metricVals[i + 5]);
metricValues.put(aggFactoryNames[i + 6],metricVals[i + 6]);
metricValues.put(aggFactoryNames[i + 7],metricVals[i + 7]);
}
pQueue.add(new DimValHolder.Builder().withDimName(dimName).withMetricValues(metricValues).build());
if (pQueue.size() > threshold) {
pQueue.poll();
}
}
return this;
}
