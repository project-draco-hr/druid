{
  try {
    IncrementalIndex first=new IncrementalIndex(new IncrementalIndexSchema.Builder().withMinTimestamp(DATA_INTERVAL.getStartMillis()).withQueryGranularity(QueryGranularity.DAY).withMetrics(METRIC_AGGS).withSpatialDimensions(Arrays.asList(new SpatialDimensionSchema("dim.geo",Arrays.asList("lat","long")))).build());
    IncrementalIndex second=new IncrementalIndex(new IncrementalIndexSchema.Builder().withMinTimestamp(DATA_INTERVAL.getStartMillis()).withQueryGranularity(QueryGranularity.DAY).withMetrics(METRIC_AGGS).withSpatialDimensions(Arrays.asList(new SpatialDimensionSchema("dim.geo",Arrays.asList("lat","long")))).build());
    IncrementalIndex third=new IncrementalIndex(new IncrementalIndexSchema.Builder().withMinTimestamp(DATA_INTERVAL.getStartMillis()).withQueryGranularity(QueryGranularity.DAY).withMetrics(METRIC_AGGS).withSpatialDimensions(Arrays.asList(new SpatialDimensionSchema("dim.geo",Arrays.asList("lat","long")))).build());
    first.add(new MapBasedInputRow(new DateTime("2013-01-01").getMillis(),DIMS,ImmutableMap.<String,Object>of("timestamp",new DateTime("2013-01-01").toString(),"dim","foo","dim.geo",Arrays.asList(0.0f,0.0f),"val",17l)));
    first.add(new MapBasedInputRow(new DateTime("2013-01-02").getMillis(),DIMS,ImmutableMap.<String,Object>of("timestamp",new DateTime("2013-01-02").toString(),"dim","foo","dim.geo",Arrays.asList(1.0f,3.0f),"val",29l)));
    first.add(new MapBasedInputRow(new DateTime("2013-01-03").getMillis(),DIMS,ImmutableMap.<String,Object>of("timestamp",new DateTime("2013-01-03").toString(),"dim","foo","dim.geo",Arrays.asList(4.0f,2.0f),"val",13l)));
    second.add(new MapBasedInputRow(new DateTime("2013-01-04").getMillis(),DIMS,ImmutableMap.<String,Object>of("timestamp",new DateTime("2013-01-04").toString(),"dim","foo","dim.geo",Arrays.asList(7.0f,3.0f),"val",91l)));
    second.add(new MapBasedInputRow(new DateTime("2013-01-05").getMillis(),DIMS,ImmutableMap.<String,Object>of("timestamp",new DateTime("2013-01-05").toString(),"dim","foo","dim.geo",Arrays.asList(8.0f,6.0f),"val",47l)));
    Random rand=new Random();
    for (int i=5; i < 5000; i++) {
      third.add(new MapBasedInputRow(new DateTime("2013-01-01").getMillis(),DIMS,ImmutableMap.<String,Object>of("timestamp",new DateTime("2013-01-01").toString(),"dim","boo","dim.geo",Arrays.asList((float)(rand.nextFloat() * 10 + 10.0),(float)(rand.nextFloat() * 10 + 10.0)),"val",i)));
    }
    File tmpFile=File.createTempFile("yay","who");
    tmpFile.delete();
    File firstFile=new File(tmpFile,"first");
    File secondFile=new File(tmpFile,"second");
    File thirdFile=new File(tmpFile,"third");
    File mergedFile=new File(tmpFile,"merged");
    firstFile.mkdirs();
    firstFile.deleteOnExit();
    secondFile.mkdirs();
    secondFile.deleteOnExit();
    thirdFile.mkdirs();
    thirdFile.deleteOnExit();
    mergedFile.mkdirs();
    mergedFile.deleteOnExit();
    IndexMerger.persist(first,DATA_INTERVAL,firstFile);
    IndexMerger.persist(second,DATA_INTERVAL,secondFile);
    IndexMerger.persist(third,DATA_INTERVAL,thirdFile);
    QueryableIndex mergedRealtime=IndexIO.loadIndex(IndexMerger.mergeQueryableIndex(Arrays.asList(IndexIO.loadIndex(firstFile),IndexIO.loadIndex(secondFile),IndexIO.loadIndex(thirdFile)),METRIC_AGGS,mergedFile));
    return mergedRealtime;
  }
 catch (  IOException e) {
    throw Throwables.propagate(e);
  }
}
