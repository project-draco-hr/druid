{
  final GroupByQueryConfig defaultConfig=new GroupByQueryConfig();
  final GroupByQueryConfig singleThreadedConfig=new GroupByQueryConfig(){
    @Override public boolean isSingleThreaded(){
      return true;
    }
  }
;
  final GroupByQueryConfig v2Config=new GroupByQueryConfig(){
    @Override public String getDefaultStrategy(){
      return GroupByStrategySelector.STRATEGY_V2;
    }
  }
;
  defaultConfig.setMaxIntermediateRows(10000);
  singleThreadedConfig.setMaxIntermediateRows(10000);
  final List<Object[]> constructors=Lists.newArrayList();
  final List<GroupByQueryConfig> configs=ImmutableList.of(defaultConfig,singleThreadedConfig,v2Config);
  for (  GroupByQueryConfig config : configs) {
    final GroupByQueryRunnerFactory factory=GroupByQueryRunnerTest.makeQueryRunnerFactory(config);
    for (    QueryRunner<Row> runner : QueryRunnerTestHelper.makeQueryRunners(factory)) {
      constructors.add(new Object[]{factory,runner});
    }
  }
  return constructors;
}
