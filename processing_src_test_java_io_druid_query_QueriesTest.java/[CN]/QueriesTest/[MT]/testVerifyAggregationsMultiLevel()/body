{
  List<AggregatorFactory> aggFactories=Arrays.<AggregatorFactory>asList(new CountAggregatorFactory("count"),new DoubleSumAggregatorFactory("idx","index"),new DoubleSumAggregatorFactory("rev","revenue"));
  List<PostAggregator> postAggs=Arrays.<PostAggregator>asList(new ArithmeticPostAggregator("divideStuff","/",Arrays.<PostAggregator>asList(new ArithmeticPostAggregator("addStuff","+",Arrays.asList(new FieldAccessPostAggregator("idx","idx"),new ConstantPostAggregator("const",1,null))),new ArithmeticPostAggregator("subtractStuff","-",Arrays.asList(new FieldAccessPostAggregator("rev","rev"),new ConstantPostAggregator("const",1,null))))),new ArithmeticPostAggregator("addStuff","+",Arrays.<PostAggregator>asList(new FieldAccessPostAggregator("divideStuff","divideStuff"),new FieldAccessPostAggregator("count","count"))));
  boolean exceptionOccured=false;
  try {
    Queries.verifyAggregations(aggFactories,postAggs);
  }
 catch (  IllegalArgumentException e) {
    exceptionOccured=true;
  }
  Assert.assertFalse(exceptionOccured);
}
