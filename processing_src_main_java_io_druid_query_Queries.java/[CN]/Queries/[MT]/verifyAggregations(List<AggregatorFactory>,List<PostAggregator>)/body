{
  Preconditions.checkNotNull(aggFactories,"aggregations cannot be null");
  Preconditions.checkArgument(aggFactories.size() > 0,"Must have at least one AggregatorFactory");
  if (postAggs != null && !postAggs.isEmpty()) {
    Set<String> combinedAggNames=Sets.newHashSet(Lists.transform(aggFactories,new Function<AggregatorFactory,String>(){
      @Override public String apply(      AggregatorFactory input){
        return input.getName();
      }
    }
));
    for (    PostAggregator postAgg : postAggs) {
      Set<String> dependencies=postAgg.getDependentFields();
      Set<String> missing=Sets.difference(dependencies,combinedAggNames);
      Preconditions.checkArgument(missing.isEmpty(),"Missing fields [%s] for postAggregator [%s]",missing,postAgg.getName());
      combinedAggNames.add(postAgg.getName());
    }
  }
}
