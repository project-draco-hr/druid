{
  Preconditions.checkNotNull(aggFactories,"aggregations cannot be null");
  Preconditions.checkArgument(aggFactories.size() > 0,"Must have at least one AggregatorFactory");
  final Set<String> aggNames=Sets.newHashSet();
  for (  AggregatorFactory aggFactory : aggFactories) {
    Preconditions.checkArgument(aggNames.add(aggFactory.getName()),"[%s] already defined",aggFactory.getName());
  }
  if (postAggs != null && !postAggs.isEmpty()) {
    final Set<String> combinedAggNames=Sets.newHashSet(aggNames);
    for (    PostAggregator postAgg : postAggs) {
      final Set<String> dependencies=postAgg.getDependentFields();
      final Set<String> missing=Sets.difference(dependencies,combinedAggNames);
      Preconditions.checkArgument(missing.isEmpty(),"Missing fields [%s] for postAggregator [%s]",missing,postAgg.getName());
      Preconditions.checkArgument(combinedAggNames.add(postAgg.getName()),"[%s] already defined",postAgg.getName());
    }
  }
}
