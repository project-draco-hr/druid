{
  if (rb1.getTimestamp() != rb2.getTimestamp()) {
    throw new SegmentValidationException("Timestamp mismatch. Expected %d found %d",rb1.getTimestamp(),rb2.getTimestamp());
  }
  final Object[] dims1=rb1.getDims();
  final Object[] dims2=rb2.getDims();
  if (dims1.length != dims2.length) {
    throw new SegmentValidationException("Dim lengths not equal %s vs %s",Arrays.deepToString(dims1),Arrays.deepToString(dims2));
  }
  final Indexed<String> dim1Names=adapter1.getDimensionNames();
  final Indexed<String> dim2Names=adapter2.getDimensionNames();
  for (int i=0; i < dims1.length; ++i) {
    final Object dim1Vals=dims1[i];
    final Object dim2Vals=dims2[i];
    final String dim1Name=dim1Names.get(i);
    final String dim2Name=dim2Names.get(i);
    ColumnCapabilities capabilities1=adapter1.getCapabilities(dim1Name);
    ColumnCapabilities capabilities2=adapter2.getCapabilities(dim2Name);
    ValueType dim1Type=capabilities1.getType();
    ValueType dim2Type=capabilities2.getType();
    if (dim1Type != dim2Type) {
      throw new SegmentValidationException("Dim [%s] types not equal. Expected %d found %d",dim1Name,dim1Type,dim2Type);
    }
    DimensionHandler dimHandler=dimHandlers.get(dim1Name);
    dimHandler.validateSortedEncodedArrays(dim1Vals,dim2Vals,adapter1.getDimValueLookup(dim1Name),adapter2.getDimValueLookup(dim2Name));
  }
}
