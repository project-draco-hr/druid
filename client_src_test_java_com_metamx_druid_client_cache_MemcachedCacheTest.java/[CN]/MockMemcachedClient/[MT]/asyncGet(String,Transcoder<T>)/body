{
  CachedData data=theMap.get(key);
  final T theValue=data != null ? tc.decode(data) : null;
  return new Future<T>(){
    @Override public boolean cancel(    boolean b){
      return false;
    }
    @Override public boolean isCancelled(){
      return false;
    }
    @Override public boolean isDone(){
      return true;
    }
    @Override public T get() throws InterruptedException, ExecutionException {
      return theValue;
    }
    @Override public T get(    long l,    TimeUnit timeUnit) throws InterruptedException, ExecutionException, TimeoutException {
      return theValue;
    }
  }
;
}
