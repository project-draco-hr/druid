{
  PolyBind.optionBinder(binder,Key.get(MetadataStorageConnector.class)).addBinding("postgresql").to(PostgreSQLConnector.class).in(LazySingleton.class);
  PolyBind.optionBinder(binder,Key.get(SQLMetadataConnector.class)).addBinding("postgresql").to(PostgreSQLConnector.class).in(LazySingleton.class);
  PolyBind.optionBinder(binder,Key.get(MetadataSegmentManager.class)).addBinding("postgresql").to(SQLMetadataSegmentManager.class).in(LazySingleton.class);
  PolyBind.optionBinder(binder,Key.get(MetadataSegmentManagerProvider.class)).addBinding("postgresql").to(SQLMetadataSegmentManagerProvider.class).in(LazySingleton.class);
  PolyBind.optionBinder(binder,Key.get(MetadataRuleManager.class)).addBinding("postgresql").to(SQLMetadataRuleManager.class).in(LazySingleton.class);
  PolyBind.optionBinder(binder,Key.get(MetadataRuleManagerProvider.class)).addBinding("postgresql").to(SQLMetadataRuleManagerProvider.class).in(LazySingleton.class);
  PolyBind.optionBinder(binder,Key.get(DbSegmentPublisher.class)).addBinding("postgresql").to(SQLMetadataSegmentPublisher.class).in(LazySingleton.class);
  PolyBind.optionBinder(binder,Key.get(MetadataStorageActionHandler.class)).addBinding("postgresql").to(SQLMetadataStorageActionHandler.class).in(LazySingleton.class);
  PolyBind.optionBinder(binder,Key.get(MetadataSegmentPublisherProvider.class)).addBinding("postgresql").to(SQLMetadataSegmentPublisherProvider.class).in(LazySingleton.class);
  PolyBind.optionBinder(binder,Key.get(MetadataStorageUpdaterJobHandler.class)).addBinding("postgresql").to(SQLMetadataStorageUpdaterJobHandler.class).in(LazySingleton.class);
  PolyBind.optionBinder(binder,Key.get(IndexerMetadataStorageCoordinator.class)).addBinding("postgresql").to(IndexerSQLMetadataStorageCoordinator.class).in(LazySingleton.class);
}
