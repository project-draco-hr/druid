{
  ImmutableMap.Builder<String,ImmutableZkWorker> builder=new ImmutableMap.Builder<>();
  for (  String workerHost : zkWorkers.keySet()) {
    if (!isolatedWorkers.contains(workerHost)) {
      builder.put(workerHost,zkWorkers.get(workerHost));
    }
  }
  ImmutableMap<String,ImmutableZkWorker> eligibleWorkers=builder.build();
  List<String> workerHosts=isolationConfig.getPreferences().get(task.getDataSource());
  if (workerHosts == null) {
    return super.findWorkerForTask(eligibleWorkers,task);
  }
  ImmutableMap.Builder<String,ImmutableZkWorker> isolatedBuilder=new ImmutableMap.Builder<>();
  for (  String workerHost : workerHosts) {
    ImmutableZkWorker zkWorker=zkWorkers.get(workerHost);
    if (zkWorker != null) {
      isolatedBuilder.put(workerHost,zkWorker);
    }
  }
  ImmutableMap<String,ImmutableZkWorker> isolatedWorkers=isolatedBuilder.build();
  if (isolatedWorkers.isEmpty()) {
    return super.findWorkerForTask(eligibleWorkers,task);
  }
 else {
    return super.findWorkerForTask(isolatedWorkers,task);
  }
}
