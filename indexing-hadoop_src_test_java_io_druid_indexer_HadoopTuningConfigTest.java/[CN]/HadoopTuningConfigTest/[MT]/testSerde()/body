{
  HadoopTuningConfig expected=new HadoopTuningConfig("/tmp/workingpath","version",null,null,null,100,true,true,true,true,null,true,true,null,null,null);
  HadoopTuningConfig actual=jsonReadWriteRead(jsonMapper.writeValueAsString(expected),HadoopTuningConfig.class);
  Assert.assertEquals("/tmp/workingpath",actual.getWorkingPath());
  Assert.assertEquals("version",actual.getVersion());
  Assert.assertNotNull(actual.getPartitionsSpec());
  Assert.assertEquals(ImmutableMap.<DateTime,List<HadoopyShardSpec>>of(),actual.getShardSpecs());
  Assert.assertEquals(new IndexSpec(),actual.getIndexSpec());
  Assert.assertEquals(100,actual.getRowFlushBoundary());
  Assert.assertEquals(true,actual.isLeaveIntermediate());
  Assert.assertEquals(true,actual.isCleanupOnFailure());
  Assert.assertEquals(true,actual.isOverwriteFiles());
  Assert.assertEquals(true,actual.isIgnoreInvalidRows());
  Assert.assertEquals(ImmutableMap.<String,String>of(),actual.getJobProperties());
  Assert.assertEquals(true,actual.isCombineText());
  Assert.assertEquals(true,actual.getUseCombiner());
  Assert.assertEquals(0,actual.getNumBackgroundPersistThreads());
}
