{
  byte[] bytes=new byte[numBytes];
  buffer.get(bytes);
  final ResourceHolder<ByteBuffer> bufHolder=CompressedPools.getByteBuf(order);
  final ByteBuffer buf=bufHolder.get();
  buf.position(0);
  buf.limit(buf.capacity());
  try {
    final ResourceHolder<byte[]> outputBytesHolder=CompressedPools.getOutputBytes();
    byte[] outputBytes=outputBytesHolder.get();
    int numDecompressedBytes=LZFDecoder.decode(bytes,outputBytes);
    buf.put(outputBytes,0,numDecompressedBytes);
    buf.flip();
    Closeables.closeQuietly(outputBytesHolder);
    return new ResourceHolder<T>(){
      @Override public T get(){
        return converter.convert(buf);
      }
      @Override public void close() throws IOException {
        bufHolder.close();
      }
    }
;
  }
 catch (  IOException e) {
    throw Throwables.propagate(e);
  }
}
