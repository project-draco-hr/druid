{
  if (dims.size() > 0) {
    List<ByteBuffer> retVal=null;
    for (    Integer dimValue : dims.get(0).getRow()) {
      ByteBuffer newKey=key.duplicate();
      newKey.putInt(dimValue);
      final List<ByteBuffer> unaggregatedBuffers=updateValues(newKey,dims.subList(1,dims.size()));
      if (unaggregatedBuffers != null) {
        if (retVal == null) {
          retVal=Lists.newArrayList();
        }
        retVal.addAll(unaggregatedBuffers);
      }
    }
    return retVal;
  }
 else {
    key.clear();
    Integer position=positions.get(key);
    int[] increments=positionMaintainer.getIncrements();
    int thePosition;
    if (position == null) {
      ByteBuffer keyCopy=ByteBuffer.allocate(key.limit());
      keyCopy.put(key.asReadOnlyBuffer());
      keyCopy.clear();
      position=positionMaintainer.getNext();
      if (position == null) {
        return Lists.newArrayList(keyCopy);
      }
      positions.put(keyCopy,position);
      thePosition=position;
      for (int i=0; i < aggregators.length; ++i) {
        aggregators[i].init(metricValues,thePosition);
        thePosition+=increments[i];
      }
    }
    thePosition=position;
    for (int i=0; i < aggregators.length; ++i) {
      aggregators[i].aggregate(metricValues,thePosition);
      thePosition+=increments[i];
    }
    return null;
  }
}
