{
  byte[] dimensionBytes=StringUtils.toUtf8(dimension);
  byte[] extractionFnBytes=extractionFn == null ? new byte[0] : extractionFn.getCacheKey();
  int intervalsBytesSize=intervalLongs.size() * Longs.BYTES * 2 + intervalLongs.size();
  ByteBuffer filterCacheKey=ByteBuffer.allocate(3 + dimensionBytes.length + intervalsBytesSize+ extractionFnBytes.length).put(DimFilterUtils.INTERVAL_CACHE_ID).put(dimensionBytes).put(DimFilterUtils.STRING_SEPARATOR).put(extractionFnBytes).put(DimFilterUtils.STRING_SEPARATOR);
  for (  Pair<Long,Long> interval : intervalLongs) {
    filterCacheKey.put(Longs.toByteArray(interval.lhs)).put(Longs.toByteArray(interval.rhs)).put((byte)0xFF);
  }
  return filterCacheKey.array();
}
