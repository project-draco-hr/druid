{
  final HadoopDruidIndexerConfig configCopy=toolbox.getObjectMapper().readValue(toolbox.getObjectMapper().writeValueAsBytes(config),HadoopDruidIndexerConfig.class);
  final TaskLock myLock=Iterables.getOnlyElement(getTaskLocks(toolbox));
  log.info("Setting version to: %s",myLock.getVersion());
  configCopy.setVersion(myLock.getVersion());
  configCopy.setJobOutputDir(toolbox.getConfig().getHadoopWorkingPath());
  configCopy.setSegmentOutputDir(toolbox.getSegmentPusher().getPathForHadoop(getDataSource()));
  HadoopDruidIndexerJob job=new HadoopDruidIndexerJob(configCopy);
  configCopy.verify();
  log.info("Starting a hadoop index generator job...");
  if (job.run()) {
    List<DataSegment> publishedSegments=job.getPublishedSegments();
    toolbox.getTaskActionClient().submit(new SegmentInsertAction(ImmutableSet.copyOf(publishedSegments)));
    return TaskStatus.success(getId());
  }
 else {
    return TaskStatus.failure(getId());
  }
}
