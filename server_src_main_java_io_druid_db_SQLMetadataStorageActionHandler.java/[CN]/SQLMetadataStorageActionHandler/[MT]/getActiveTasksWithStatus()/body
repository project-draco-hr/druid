{
  return retryingHandle(new HandleCallback<List<Pair<TaskType,TaskStatusType>>>(){
    @Override public List<Pair<TaskType,TaskStatusType>> withHandle(    Handle handle) throws Exception {
      return handle.createQuery(String.format("SELECT id, payload, status_payload FROM %s WHERE active = TRUE ORDER BY created_date",config.getTasksTable())).map(new ResultSetMapper<Pair<TaskType,TaskStatusType>>(){
        @Override public Pair<TaskType,TaskStatusType> map(        int index,        ResultSet r,        StatementContext ctx) throws SQLException {
          try {
            return Pair.of(jsonMapper.<TaskType>readValue(r.getBytes("payload"),taskType),jsonMapper.<TaskStatusType>readValue(r.getBytes("status_payload"),taskStatusType));
          }
 catch (          IOException e) {
            log.makeAlert(e,"Failed to parse task payload").addData("task",r.getString("id")).emit();
            throw new SQLException(e);
          }
        }
      }
).list();
    }
  }
);
}
