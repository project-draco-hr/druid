{
  return retryingHandle(new HandleCallback<List<TaskActionType>>(){
    @Override public List<TaskActionType> withHandle(    Handle handle) throws Exception {
      return handle.createQuery(String.format("SELECT log_payload FROM %s WHERE task_id = :task_id",config.getTaskLogTable())).bind("task_id",taskId).map(ByteArrayMapper.FIRST).fold(Lists.<TaskActionType>newLinkedList(),new Folder3<List<TaskActionType>,byte[]>(){
        @Override public List<TaskActionType> fold(        List<TaskActionType> list,        byte[] bytes,        FoldController control,        StatementContext ctx) throws SQLException {
          try {
            list.add(jsonMapper.<TaskActionType>readValue(bytes,taskActionType));
            return list;
          }
 catch (          IOException e) {
            log.makeAlert(e,"Failed to deserialize TaskLog").addData("task",taskId).addData("logPayload",new String(bytes,Charsets.UTF_8)).emit();
            throw new SQLException(e);
          }
        }
      }
);
    }
  }
);
}
