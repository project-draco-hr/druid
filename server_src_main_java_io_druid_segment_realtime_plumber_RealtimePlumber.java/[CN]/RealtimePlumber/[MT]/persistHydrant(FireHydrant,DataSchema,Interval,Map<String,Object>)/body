{
synchronized (indexToPersist) {
    if (indexToPersist.hasSwapped()) {
      log.info("DataSource[%s], Interval[%s], Hydrant[%s] already swapped. Ignoring request to persist.",schema.getDataSource(),interval,indexToPersist);
      return 0;
    }
    log.info("DataSource[%s], Interval[%s], Metadata [%s] persisting Hydrant[%s]",schema.getDataSource(),interval,metaData,indexToPersist);
    try {
      int numRows=indexToPersist.getIndex().size();
      final IndexSpec indexSpec=config.getIndexSpec();
      final File persistedFile=indexMerger.persist(indexToPersist.getIndex(),new File(computePersistDir(schema,interval),String.valueOf(indexToPersist.getCount())),metaData,indexSpec);
      indexToPersist.swapSegment(new QueryableIndexSegment(indexToPersist.getSegment().getIdentifier(),indexIO.loadIndex(persistedFile)));
      return numRows;
    }
 catch (    IOException e) {
      log.makeAlert("dataSource[%s] -- incremental persist failed",schema.getDataSource()).addData("interval",interval).addData("count",indexToPersist.getCount()).emit();
      throw Throwables.propagate(e);
    }
  }
}
