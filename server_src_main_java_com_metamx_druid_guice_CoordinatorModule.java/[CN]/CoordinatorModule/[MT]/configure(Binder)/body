{
  ConfigProvider.bind(binder,DruidMasterConfig.class);
  ConfigProvider.bind(binder,ServerInventoryViewConfig.class);
  JsonConfigProvider.bind(binder,"druid.manager.segment",DatabaseSegmentManagerConfig.class);
  JsonConfigProvider.bind(binder,"druid.manager.rules",DatabaseRuleManagerConfig.class);
  binder.bind(InventoryView.class).to(ServerInventoryView.class);
  binder.bind(RedirectServlet.class).in(LazySingleton.class);
  binder.bind(RedirectFilter.class).in(LazySingleton.class);
  JsonConfigProvider.bind(binder,"druid.announcer",ServerInventoryViewProvider.class);
  binder.bind(ServerInventoryView.class).toProvider(ServerInventoryViewProvider.class).in(ManageLifecycle.class);
  binder.bind(DatabaseSegmentManager.class).toProvider(DatabaseSegmentManagerProvider.class).in(ManageLifecycle.class);
  binder.bind(DatabaseRuleManager.class).toProvider(DatabaseRuleManagerProvider.class).in(ManageLifecycle.class);
  binder.bind(new TypeLiteral<DiscoverySelector<Server>>(){
  }
).annotatedWith(IndexingService.class).to(IndexingServiceSelector.class).in(ManageLifecycle.class);
  binder.bind(IndexingServiceClient.class).in(LazySingleton.class);
  binder.bind(RedirectInfo.class).to(MasterRedirectInfo.class).in(LazySingleton.class);
  binder.bind(DruidMaster.class);
}
