{
  final List<Object> timeAndDims=HadoopDruidIndexerConfig.jsonMapper.readValue(key.getBytes(),new TypeReference<List<Object>>(){
  }
);
  final DateTime timestamp=new DateTime(timeAndDims.get(0));
  final Map<String,Object> dims=(Map<String,Object>)timeAndDims.get(1);
  final Optional<Interval> maybeInterval=config.getGranularitySpec().bucketInterval(timestamp);
  if (!maybeInterval.isPresent()) {
    throw new ISE("WTF?! No bucket found for timestamp: %s",timestamp);
  }
  final Interval interval=maybeInterval.get();
  final byte[] groupKey=interval.getStart().toString().getBytes(Charsets.UTF_8);
  for (  final Map.Entry<String,Object> dimAndValues : dims.entrySet()) {
    final String dim=dimAndValues.getKey();
    if (partitionDimension == null || partitionDimension.equals(dim)) {
      final List<String> dimValues=(List<String>)dimAndValues.getValue();
      if (dimValues.size() == 1) {
        write(context,groupKey,new DimValueCount(dim,dimValues.get(0),1));
      }
 else {
        write(context,groupKey,new DimValueCount(dim,"",-1));
      }
    }
  }
}
