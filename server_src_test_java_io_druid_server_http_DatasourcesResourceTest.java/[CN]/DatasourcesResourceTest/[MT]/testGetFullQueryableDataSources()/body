{
  EasyMock.expect(server.getDataSources()).andReturn(ImmutableList.of(listDataSources.get(0),listDataSources.get(1))).atLeastOnce();
  EasyMock.expect(inventoryView.getInventory()).andReturn(ImmutableList.of(server)).atLeastOnce();
  EasyMock.replay(inventoryView,server);
  DatasourcesResource datasourcesResource=new DatasourcesResource(inventoryView,null,null,new AuthConfig());
  Response response=datasourcesResource.getQueryableDataSources("full",null,request);
  Set<DruidDataSource> result=(Set<DruidDataSource>)response.getEntity();
  DruidDataSource[] resultantDruidDataSources=new DruidDataSource[result.size()];
  result.toArray(resultantDruidDataSources);
  Assert.assertEquals(200,response.getStatus());
  Assert.assertEquals(2,resultantDruidDataSources.length);
  Assert.assertArrayEquals(listDataSources.toArray(),resultantDruidDataSources);
  response=datasourcesResource.getQueryableDataSources(null,null,request);
  List<String> result1=(List<String>)response.getEntity();
  Assert.assertEquals(200,response.getStatus());
  Assert.assertEquals(2,result1.size());
  Assert.assertTrue(result1.contains("datasource1"));
  Assert.assertTrue(result1.contains("datasource2"));
  EasyMock.verify(inventoryView,server);
}
