{
  final Supplier<Committer> committerSupplier=Committers.supplierFromFirehose(firehose);
  while (firehose.hasMore()) {
    final InputRow inputRow;
    try {
      inputRow=firehose.nextRow();
      if (inputRow == null) {
        log.debug("thrown away null input row, considering unparseable");
        metrics.incrementUnparseable();
        continue;
      }
    }
 catch (    ParseException e) {
      log.debug(e,"thrown away line due to exception, considering unparseable");
      metrics.incrementUnparseable();
      continue;
    }
    boolean lateEvent=false;
    boolean indexLimitExceeded=false;
    try {
      lateEvent=plumber.add(inputRow,committerSupplier) == -1;
    }
 catch (    IndexSizeExceededException e) {
      log.info("Index limit exceeded: %s",e.getMessage());
      indexLimitExceeded=true;
    }
    if (indexLimitExceeded || lateEvent) {
      metrics.incrementThrownAway();
      log.debug("Throwing away event[%s]",inputRow);
      if (indexLimitExceeded) {
        plumber.persist(committerSupplier.get());
      }
      continue;
    }
    metrics.incrementProcessed();
  }
}
