{
  SelectBinaryFn binaryFn=new SelectBinaryFn(QueryGranularities.ALL,new PagingSpec(null,5),false);
  Result<SelectResultValue> res1=new Result<>(new DateTime("2013-01-01"),new SelectResultValue(ImmutableMap.<String,Integer>of(),Sets.newHashSet("first","fourth"),Sets.newHashSet("sixth"),Arrays.asList(new EventHolder(segmentId1,0,ImmutableMap.<String,Object>of(EventHolder.timestampKey,new DateTime("2013-01-01T00"),"dim","first")),new EventHolder(segmentId1,1,ImmutableMap.<String,Object>of(EventHolder.timestampKey,new DateTime("2013-01-01T03"),"dim","fourth")),new EventHolder(segmentId1,2,ImmutableMap.<String,Object>of(EventHolder.timestampKey,new DateTime("2013-01-01T05"),"dim","sixth")))));
  Result<SelectResultValue> res2=new Result<>(new DateTime("2013-01-01"),new SelectResultValue(ImmutableMap.<String,Integer>of(),Sets.newHashSet("second","third"),Sets.newHashSet("fifth"),Arrays.asList(new EventHolder(segmentId2,0,ImmutableMap.<String,Object>of(EventHolder.timestampKey,new DateTime("2013-01-01T00"),"dim","second")),new EventHolder(segmentId2,1,ImmutableMap.<String,Object>of(EventHolder.timestampKey,new DateTime("2013-01-01T02"),"dim","third")),new EventHolder(segmentId2,2,ImmutableMap.<String,Object>of(EventHolder.timestampKey,new DateTime("2013-01-01T04"),"dim","fifth")))));
  Result<SelectResultValue> merged=binaryFn.apply(res1,res2);
  Assert.assertEquals(res1.getTimestamp(),merged.getTimestamp());
  LinkedHashMap<String,Integer> expectedPageIds=Maps.newLinkedHashMap();
  expectedPageIds.put(segmentId1,0);
  expectedPageIds.put(segmentId2,0);
  expectedPageIds.put(segmentId2,1);
  expectedPageIds.put(segmentId1,1);
  expectedPageIds.put(segmentId2,2);
  Iterator<String> exSegmentIter=expectedPageIds.keySet().iterator();
  Iterator<String> acSegmentIter=merged.getValue().getPagingIdentifiers().keySet().iterator();
  verifyIters(exSegmentIter,acSegmentIter);
  Iterator<Integer> exOffsetIter=expectedPageIds.values().iterator();
  Iterator<Integer> acOffsetIter=merged.getValue().getPagingIdentifiers().values().iterator();
  verifyIters(exOffsetIter,acOffsetIter);
  List<EventHolder> exEvents=Arrays.<EventHolder>asList(new EventHolder(segmentId1,0,ImmutableMap.<String,Object>of(EventHolder.timestampKey,new DateTime("2013-01-01T00"),"dim","first")),new EventHolder(segmentId2,0,ImmutableMap.<String,Object>of(EventHolder.timestampKey,new DateTime("2013-01-01T00"),"dim","second")),new EventHolder(segmentId2,1,ImmutableMap.<String,Object>of(EventHolder.timestampKey,new DateTime("2013-01-01T02"),"dim","third")),new EventHolder(segmentId1,1,ImmutableMap.<String,Object>of(EventHolder.timestampKey,new DateTime("2013-01-01T03"),"dim","fourth")),new EventHolder(segmentId2,2,ImmutableMap.<String,Object>of(EventHolder.timestampKey,new DateTime("2013-01-01T04"),"dim","fifth")));
  List<EventHolder> acEvents=merged.getValue().getEvents();
  verifyEvents(exEvents,acEvents);
}
