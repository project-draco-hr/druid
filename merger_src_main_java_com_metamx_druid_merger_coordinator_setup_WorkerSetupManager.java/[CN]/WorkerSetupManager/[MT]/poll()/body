{
  try {
    List<WorkerSetupData> setupDataList=dbi.withHandle(new HandleCallback<List<WorkerSetupData>>(){
      @Override public List<WorkerSetupData> withHandle(      Handle handle) throws Exception {
        return handle.createQuery(String.format("SELECT minVersion, minNumWorkers, nodeData, userData, securityGroupIds, keyName FROM %s",config.getWorkerSetupTable())).fold(Lists.<WorkerSetupData>newArrayList(),new Folder3<ArrayList<WorkerSetupData>,Map<String,Object>>(){
          @Override public ArrayList<WorkerSetupData> fold(          ArrayList<WorkerSetupData> workerNodeConfigurations,          Map<String,Object> stringObjectMap,          FoldController foldController,          StatementContext statementContext) throws SQLException {
            try {
              workerNodeConfigurations.add(new WorkerSetupData(MapUtils.getString(stringObjectMap,"minVersion"),MapUtils.getInteger(stringObjectMap,"minNumWorkers"),jsonMapper.readValue(MapUtils.getString(stringObjectMap,"nodeData"),WorkerNodeData.class),jsonMapper.readValue(MapUtils.getString(stringObjectMap,"userData"),WorkerUserData.class),(List<String>)jsonMapper.readValue(MapUtils.getString(stringObjectMap,"securityGroupIds"),new TypeReference<List<String>>(){
              }
),MapUtils.getString(stringObjectMap,"keyName")));
              return workerNodeConfigurations;
            }
 catch (            Exception e) {
              throw Throwables.propagate(e);
            }
          }
        }
);
      }
    }
);
    if (setupDataList.isEmpty()) {
      throw new ISE("WTF?! No configuration found for worker nodes!");
    }
 else     if (setupDataList.size() != 1) {
      throw new ISE("WTF?! Found more than one configuration for worker nodes");
    }
    workerSetupData.set(setupDataList.get(0));
  }
 catch (  Exception e) {
    log.error(e,"Exception while polling for worker setup data!");
  }
}
