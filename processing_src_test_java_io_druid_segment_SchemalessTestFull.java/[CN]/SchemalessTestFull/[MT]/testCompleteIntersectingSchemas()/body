{
  List<Result<TimeseriesResultValue>> expectedTimeSeriesResults=Arrays.asList(new Result<TimeseriesResultValue>(new DateTime("2011-01-12T00:00:00.000Z"),new TimeseriesResultValue(ImmutableMap.<String,Object>builder().put("rows",2L).put("index",200.0D).put("addRowsIndexConstant",203.0D).put("uniques",UNIQUES_2).put("maxIndex",100.0D).put("minIndex",100.0D).build())));
  List<Result<TimeseriesResultValue>> expectedFilteredTimeSeriesResults=Arrays.asList(new Result<TimeseriesResultValue>(new DateTime("2011-01-12T00:00:00.000Z"),new TimeseriesResultValue(ImmutableMap.<String,Object>builder().put("rows",1L).put("index",100.0D).put("addRowsIndexConstant",102.0D).put("uniques",UNIQUES_1).put("maxIndex",100.0D).put("minIndex",100.0D).build())));
  List<Result<TopNResultValue>> expectedTopNResults=Arrays.asList(new Result<TopNResultValue>(new DateTime("2011-01-12T00:00:00.000Z"),new TopNResultValue(Arrays.<Map<String,Object>>asList(ImmutableMap.<String,Object>builder().put("provider","spot").put("rows",1L).put("index",100.0D).put("addRowsIndexConstant",102.0D).put("uniques",UNIQUES_1).put("maxIndex",100.0).put("minIndex",100.0).build(),ImmutableMap.<String,Object>builder().put("provider","total_market").put("rows",1L).put("index",100.0D).put("addRowsIndexConstant",102.0D).put("uniques",UNIQUES_1).put("maxIndex",100.0D).put("minIndex",100.0D).build()))));
  List<Result<TopNResultValue>> expectedFilteredTopNResults=Arrays.asList(new Result<TopNResultValue>(new DateTime("2011-01-12T00:00:00.000Z"),new TopNResultValue(Arrays.<Map<String,Object>>asList(ImmutableMap.<String,Object>builder().put("provider","spot").put("rows",1L).put("index",100.0D).put("addRowsIndexConstant",102.0D).put("uniques",UNIQUES_1).put("maxIndex",100.0).put("minIndex",100.0).build()))));
  List<Result<SearchResultValue>> expectedSearchResults=Arrays.asList(new Result<SearchResultValue>(new DateTime("2011-01-12T00:00:00.000Z"),new SearchResultValue(Arrays.<SearchHit>asList(new SearchHit(placementishDimension,"a"),new SearchHit(qualityDimension,"automotive"),new SearchHit(placementDimension,"mezzanine"),new SearchHit(providerDimension,"total_market")))));
  List<Result<SearchResultValue>> expectedFilteredSearchResults=Arrays.asList(new Result<SearchResultValue>(new DateTime("2011-01-12T00:00:00.000Z"),new SearchResultValue(Arrays.<SearchHit>asList(new SearchHit(placementishDimension,"a"),new SearchHit(qualityDimension,"automotive")))));
  List<Result<TimeBoundaryResultValue>> expectedTimeBoundaryResults=Arrays.asList(new Result<TimeBoundaryResultValue>(new DateTime("2011-01-12T00:00:00.000Z"),new TimeBoundaryResultValue(ImmutableMap.of(TimeBoundaryQuery.MIN_TIME,new DateTime("2011-01-12T00:00:00.000Z"),TimeBoundaryQuery.MAX_TIME,new DateTime("2011-01-13T00:00:00.000Z")))));
  testAll(1,5,expectedTimeSeriesResults,expectedFilteredTimeSeriesResults,expectedTopNResults,expectedFilteredTopNResults,expectedSearchResults,expectedFilteredSearchResults,expectedTimeBoundaryResults);
}
