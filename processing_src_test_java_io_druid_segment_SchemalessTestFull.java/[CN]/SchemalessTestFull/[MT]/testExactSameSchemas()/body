{
  List<Result<TimeseriesResultValue>> expectedTimeseriesResults=Arrays.asList(new Result<>(new DateTime("2011-01-12T00:00:00.000Z"),new TimeseriesResultValue(ImmutableMap.<String,Object>builder().put("rows",1L).put("index",200.0D).put("addRowsIndexConstant",202.0D).put("uniques",UNIQUES_1).put("maxIndex",200.0D).put("minIndex",200.0D).build())));
  List<Result<TimeseriesResultValue>> expectedFilteredTimeSeriesResults=expectedTimeseriesResults;
  List<Result<TopNResultValue>> expectedTopNResults=Arrays.asList(new Result<>(new DateTime("2011-01-12T00:00:00.000Z"),new TopNResultValue(Arrays.<Map<String,Object>>asList(ImmutableMap.<String,Object>builder().put("market","spot").put("rows",1L).put("index",200.0D).put("addRowsIndexConstant",202.0D).put("uniques",UNIQUES_1).put("maxIndex",200.0).put("minIndex",200.0).build()))));
  List<Result<TopNResultValue>> expectedFilteredTopNResults=expectedTopNResults;
  List<Result<SearchResultValue>> expectedSearchResults=Arrays.asList(new Result<>(new DateTime("2011-01-12T00:00:00.000Z"),new SearchResultValue(Arrays.<SearchHit>asList(new SearchHit(placementishDimension,"a"),new SearchHit(qualityDimension,"automotive")))));
  List<Result<SearchResultValue>> expectedFilteredSearchResults=expectedSearchResults;
  List<Result<TimeBoundaryResultValue>> expectedTimeBoundaryResults=Arrays.asList(new Result<>(new DateTime("2011-01-12T00:00:00.000Z"),new TimeBoundaryResultValue(ImmutableMap.of(TimeBoundaryQuery.MIN_TIME,new DateTime("2011-01-12T00:00:00.000Z"),TimeBoundaryQuery.MAX_TIME,new DateTime("2011-01-12T00:00:00.000Z")))));
  runTests(new QueryableIndexSegment(null,SchemalessIndex.getMergedIncrementalIndex(1,1)),expectedTimeseriesResults,expectedFilteredTimeSeriesResults,expectedTopNResults,expectedFilteredTopNResults,expectedSearchResults,expectedFilteredSearchResults,expectedTimeBoundaryResults,"Failed: MII[1, 1]");
}
