{
  final CountDownLatch removeCallbackLatch=new CountDownLatch(1);
  segmentAnnouncer.announceSegments(testSegments);
  waitForSync(filteredBatchServerInventoryView,testSegments);
  DruidServer server=Iterables.get(filteredBatchServerInventoryView.getInventory(),0);
  Set<DataSegment> segments=Sets.newHashSet(server.getSegments().values());
  Assert.assertEquals(testSegments,segments);
  ServerView.SegmentCallback callback=EasyMock.createStrictMock(ServerView.SegmentCallback.class);
  Comparator<DataSegment> dataSegmentComparator=new Comparator<DataSegment>(){
    @Override public int compare(    DataSegment o1,    DataSegment o2){
      return o1.getInterval().equals(o2.getInterval()) ? 0 : -1;
    }
  }
;
  EasyMock.expect(callback.segmentAdded(EasyMock.<DruidServerMetadata>anyObject(),EasyMock.cmp(makeSegment(INITIAL_SEGMENTS + 2),dataSegmentComparator,LogicalOperator.EQUAL))).andReturn(ServerView.CallbackAction.CONTINUE).times(1);
  EasyMock.expect(callback.segmentRemoved(EasyMock.<DruidServerMetadata>anyObject(),EasyMock.cmp(makeSegment(INITIAL_SEGMENTS + 2),dataSegmentComparator,LogicalOperator.EQUAL))).andAnswer(new IAnswer<ServerView.CallbackAction>(){
    @Override public ServerView.CallbackAction answer() throws Throwable {
      removeCallbackLatch.countDown();
      return ServerView.CallbackAction.CONTINUE;
    }
  }
).times(1);
  EasyMock.replay(callback);
  filteredBatchServerInventoryView.registerSegmentCallback(MoreExecutors.sameThreadExecutor(),callback,new Predicate<DataSegment>(){
    @Override public boolean apply(    @Nullable DataSegment dataSegment){
      return dataSegment.getInterval().getStart().equals(SEGMENT_INTERVAL_START.plusDays(INITIAL_SEGMENTS + 2));
    }
  }
);
  DataSegment segment2=makeSegment(INITIAL_SEGMENTS + 2);
  segmentAnnouncer.announceSegment(segment2);
  testSegments.add(segment2);
  DataSegment oldSegment=makeSegment(-1);
  segmentAnnouncer.announceSegment(oldSegment);
  testSegments.add(oldSegment);
  segmentAnnouncer.unannounceSegment(oldSegment);
  testSegments.remove(oldSegment);
  waitForSync(filteredBatchServerInventoryView,testSegments);
  segmentAnnouncer.unannounceSegment(segment2);
  testSegments.remove(segment2);
  waitForSync(filteredBatchServerInventoryView,testSegments);
  timing.forWaiting().awaitLatch(removeCallbackLatch);
  EasyMock.verify(callback);
}
