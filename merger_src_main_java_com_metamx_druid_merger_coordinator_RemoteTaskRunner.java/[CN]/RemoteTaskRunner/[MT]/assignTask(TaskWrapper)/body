{
  WorkerWrapper workerWrapper=findWorkerRunningTask(taskWrapper);
  if (workerWrapper != null) {
    final Worker worker=workerWrapper.getWorker();
    try {
      log.info("Worker[%s] is already running task[%s].",worker.getHost(),taskWrapper.getTask().getId());
      final ChildData workerData=workerWrapper.getStatusCache().getCurrentData(JOINER.join(config.getStatusPath(),worker.getHost(),taskWrapper.getTask().getId()));
      if (workerData != null && workerData.getData() != null) {
        final TaskStatus taskStatus=jsonMapper.readValue(workerData.getData(),TaskStatus.class);
        TaskCallback callback=taskWrapper.getCallback();
        if (callback != null) {
          callback.notify(taskStatus);
        }
        if (taskStatus.isComplete()) {
          new CleanupPaths(worker.getHost(),taskWrapper.getTask().getId()).run();
        }
      }
 else {
        log.warn("Worker data was null for worker: %s",worker.getHost());
      }
    }
 catch (    Exception e) {
      log.error(e,"Task exists, but hit exception!");
      retryTask(new CleanupPaths(worker.getHost(),taskWrapper.getTask().getId()),taskWrapper);
    }
  }
 else {
    workerWrapper=findWorkerForTask();
    if (workerWrapper != null) {
      announceTask(workerWrapper.getWorker(),taskWrapper);
    }
 else {
      retryTask(null,taskWrapper);
    }
  }
}
