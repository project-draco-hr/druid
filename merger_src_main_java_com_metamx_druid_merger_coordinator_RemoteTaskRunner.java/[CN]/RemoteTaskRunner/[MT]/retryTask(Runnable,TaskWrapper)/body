{
  final Task task=taskWrapper.getTask();
  final RetryPolicy retryPolicy=taskWrapper.getRetryPolicy();
  log.info("Registering retry for failed task[%s]",task.getId());
  if (retryPolicy.hasExceededRetryThreshold()) {
    log.makeAlert("Task exceeded maximum retry count").addData("task",task.getId()).addData("retryCount",retryPolicy.getNumRetries()).emit();
    return;
  }
  scheduledExec.schedule(new Runnable(){
    @Override public void run(){
      if (pre != null) {
        pre.run();
      }
      if (tasks.containsKey(task.getId())) {
        log.info("Retry[%d] for task[%s]",retryPolicy.getNumRetries(),task.getId());
        assignTask(taskWrapper);
      }
    }
  }
,retryPolicy.getAndIncrementRetryDelay().getMillis(),TimeUnit.MILLISECONDS);
}
