{
  final Task task=taskRunnerWorkItem.getTask();
  log.info("Coordinator asking Worker[%s] to add task[%s]",theWorker.getHost(),task.getId());
  byte[] rawBytes=jsonMapper.writeValueAsBytes(task);
  if (rawBytes.length > config.getMaxNumBytes()) {
    throw new ISE("Length of raw bytes for task too large[%,d > %,d]",rawBytes.length,config.getMaxNumBytes());
  }
  cf.create().withMode(CreateMode.EPHEMERAL).forPath(JOINER.join(config.getIndexerTaskPath(),theWorker.getHost(),task.getId()),rawBytes);
  runningTasks.put(task.getId(),pendingTasks.remove(task.getId()));
  log.info("Task %s switched from pending to running",task.getId());
synchronized (statusLock) {
    while (!isWorkerRunningTask(theWorker.getHost(),task.getId())) {
      statusLock.wait(config.getTaskAssignmentTimeoutDuration().getMillis());
      if (!isWorkerRunningTask(theWorker.getHost(),task.getId())) {
        log.error("Something went wrong! %s never ran task %s after %s!",theWorker.getHost(),task.getId(),config.getTaskAssignmentTimeoutDuration());
        retryTask(runningTasks.get(task.getId()),theWorker.getHost());
        break;
      }
    }
  }
}
