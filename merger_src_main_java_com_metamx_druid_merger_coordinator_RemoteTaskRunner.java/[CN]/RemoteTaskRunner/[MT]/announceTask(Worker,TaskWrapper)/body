{
synchronized (statusLock) {
    final Task task=taskWrapper.getTask();
    final TaskContext taskContext=taskWrapper.getTaskContext();
    try {
      log.info("Coordinator asking Worker[%s] to add task[%s]",theWorker.getHost(),task.getId());
      tasks.put(task.getId(),taskWrapper);
      byte[] rawBytes=jsonMapper.writeValueAsBytes(new TaskHolder(task,taskContext));
      if (rawBytes.length > config.getMaxNumBytes()) {
        throw new ISE("Length of raw bytes for task too large[%,d > %,d]",rawBytes.length,config.getMaxNumBytes());
      }
      cf.create().withMode(CreateMode.EPHEMERAL).forPath(JOINER.join(config.getTaskPath(),theWorker.getHost(),task.getId()),jsonMapper.writeValueAsBytes(new TaskHolder(task,taskContext)));
      while (findWorkerRunningTask(taskWrapper) == null) {
        statusLock.wait(config.getTaskAssignmentTimeoutDuration().getMillis());
      }
    }
 catch (    Exception e) {
      log.error(e,"Exception creating task[%s] for worker node[%s]",task.getId(),theWorker.getHost());
      throw Throwables.propagate(e);
    }
  }
}
