{
  if (extractionFn == null) {
    return new SelectorFilter(dimension,value);
  }
 else {
    final String valueOrNull=Strings.emptyToNull(value);
    final DruidPredicateFactory predicateFactory=new DruidPredicateFactory(){
      @Override public Predicate<String> makeStringPredicate(){
        return new Predicate<String>(){
          @Override public boolean apply(          String input){
            return Objects.equals(valueOrNull,input);
          }
        }
;
      }
      @Override public DruidLongPredicate makeLongPredicate(){
        initLongValue();
        if (valueAsLong == null) {
          return new DruidLongPredicate(){
            @Override public boolean applyLong(            long input){
              return false;
            }
          }
;
        }
 else {
          final long unboxedLong=valueAsLong.longValue();
          return new DruidLongPredicate(){
            @Override public boolean applyLong(            long input){
              return input == unboxedLong;
            }
          }
;
        }
      }
    }
;
    return new DimensionPredicateFilter(dimension,predicateFactory,extractionFn);
  }
}
