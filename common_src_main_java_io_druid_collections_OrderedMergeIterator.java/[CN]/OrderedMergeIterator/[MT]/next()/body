{
  if (!hasNext()) {
    throw new NoSuchElementException();
  }
  final PeekingIterator<T> littleIt;
  if (!iterOfIterators.hasNext()) {
    littleIt=firstElementComparedPQueue.remove();
  }
 else   if (firstElementComparedPQueue.isEmpty()) {
    littleIt=iterOfIterators.next();
  }
 else {
    T pQueueValue=firstElementComparedPQueue.peek().peek();
    T iterItersValue=iterOfIterators.peek().peek();
    if (comparator.compare(pQueueValue,iterItersValue) <= 0) {
      littleIt=firstElementComparedPQueue.remove();
    }
 else {
      littleIt=iterOfIterators.next();
    }
  }
  T retVal=littleIt.next();
  if (littleIt.hasNext()) {
    firstElementComparedPQueue.add(littleIt);
  }
  return retVal;
}
