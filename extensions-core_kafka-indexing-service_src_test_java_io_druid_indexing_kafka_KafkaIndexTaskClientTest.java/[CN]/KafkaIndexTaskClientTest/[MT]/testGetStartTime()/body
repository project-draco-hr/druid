{
  client=new RetryingTestableKafkaIndexTaskClient(httpClient,objectMapper,taskInfoProvider);
  DateTime now=DateTime.now();
  Capture<Request> captured=Capture.newInstance();
  expect(responseHolder.getStatus()).andReturn(HttpResponseStatus.NOT_FOUND).times(3).andReturn(HttpResponseStatus.OK);
  expect(responseHolder.getResponse()).andReturn(response);
  expect(response.headers()).andReturn(headers);
  expect(headers.get("X-Druid-Task-Id")).andReturn(null);
  expect(responseHolder.getContent()).andReturn(String.valueOf(now.getMillis())).anyTimes();
  expect(httpClient.go(capture(captured),anyObject(FullResponseHandler.class))).andReturn(Futures.immediateFuture(responseHolder)).times(2);
  replayAll();
  DateTime results=client.getStartTime(TEST_ID);
  verifyAll();
  Request request=captured.getValue();
  Assert.assertEquals(HttpMethod.GET,request.getMethod());
  Assert.assertEquals(new URL("http://test-host:1234/druid/worker/v1/chat/test-id/time/start"),request.getUrl());
  Assert.assertTrue(request.getHeaders().get("X-Druid-Task-Id").contains("test-id"));
  Assert.assertEquals(now,results);
}
