{
  expect(responseHolder.getStatus()).andReturn(HttpResponseStatus.NOT_FOUND).times(3).andReturn(HttpResponseStatus.OK);
  expect(responseHolder.getResponse()).andReturn(response);
  expect(responseHolder.getContent()).andReturn("").andReturn("{}");
  expect(response.headers()).andReturn(headers);
  expect(headers.get("X-Druid-Task-Id")).andReturn("a-different-task-id");
  expect(httpClient.go(anyObject(Request.class),anyObject(FullResponseHandler.class),eq(TEST_HTTP_TIMEOUT))).andReturn(Futures.immediateFuture(responseHolder)).times(2);
  replayAll();
  Map<Integer,Long> results=client.getCurrentOffsets(TEST_ID,true);
  verifyAll();
  Assert.assertEquals(0,results.size());
}
