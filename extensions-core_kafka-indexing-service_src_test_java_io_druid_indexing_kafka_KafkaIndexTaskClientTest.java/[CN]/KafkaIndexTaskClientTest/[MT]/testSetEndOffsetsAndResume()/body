{
  Map<Integer,Long> endOffsets=ImmutableMap.of(0,15L,1,120L);
  Capture<Request> captured=Capture.newInstance();
  expect(responseHolder.getStatus()).andReturn(HttpResponseStatus.OK).anyTimes();
  expect(httpClient.go(capture(captured),anyObject(FullResponseHandler.class),eq(TEST_HTTP_TIMEOUT))).andReturn(Futures.immediateFuture(responseHolder));
  replayAll();
  client.setEndOffsets(TEST_ID,endOffsets,true);
  verifyAll();
  Request request=captured.getValue();
  Assert.assertEquals(HttpMethod.POST,request.getMethod());
  Assert.assertEquals(new URL("http://test-host:1234/druid/worker/v1/chat/test-id/offsets/end?resume=true"),request.getUrl());
  Assert.assertTrue(request.getHeaders().get("X-Druid-Task-Id").contains("test-id"));
  Assert.assertEquals("{\"0\":15,\"1\":120}",new String(request.getContent().array()));
}
