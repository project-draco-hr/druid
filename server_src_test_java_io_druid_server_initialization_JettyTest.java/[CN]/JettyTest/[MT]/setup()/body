{
  setProperties();
  Injector injector=Initialization.makeInjectorWithModules(GuiceInjectors.makeStartupInjector(),ImmutableList.<Object>of(new Module(){
    @Override public void configure(    Binder binder){
      JsonConfigProvider.bindInstance(binder,Key.get(DruidNode.class,Self.class),new DruidNode("test","localhost",null));
      binder.bind(JettyServerInitializer.class).to(JettyServerInit.class).in(LazySingleton.class);
      Jerseys.addResource(binder,SlowResource.class);
      Jerseys.addResource(binder,ExceptionResource.class);
      LifecycleModule.register(binder,Server.class);
    }
  }
));
  lifecycle=injector.getInstance(Lifecycle.class);
  lifecycle.start();
  ClientHolder holder=injector.getInstance(ClientHolder.class);
  client=holder.getClient();
}
