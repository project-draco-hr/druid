{
  return asLeaderWith(taskMaster.getTaskQueue(),new Function<TaskQueue,Response>(){
    @Override public Response apply(    TaskQueue taskQueue){
      try {
        taskQueue.add(task);
        return Response.ok(ImmutableMap.of("task",task.getId())).build();
      }
 catch (      EntryExistsException e) {
        return Response.status(Response.Status.BAD_REQUEST).entity(ImmutableMap.of("error",String.format("Task[%s] already exists!",task.getId()))).build();
      }
    }
  }
);
}
