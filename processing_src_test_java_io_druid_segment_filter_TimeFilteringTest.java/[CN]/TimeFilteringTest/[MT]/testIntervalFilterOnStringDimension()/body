{
  assertFilterMatches(new IntervalDimFilter("dim0",Arrays.asList(Interval.parse("1970-01-01T00:00:00.001Z/1970-01-01T00:00:00.005Z")),null),ImmutableList.<String>of("1","2","3","4"));
  assertFilterMatches(new IntervalDimFilter("dim0",Arrays.asList(Interval.parse("1970-01-01T00:00:00.000Z/1970-01-01T00:00:00.003Z"),Interval.parse("1970-01-01T00:00:00.004Z/1970-01-01T00:00:00.006Z")),null),ImmutableList.<String>of("0","1","2","4","5"));
  assertFilterMatches(new IntervalDimFilter("dim0",Arrays.asList(Interval.parse("1970-01-01T00:00:00.000Z/1970-01-01T00:00:00.001Z"),Interval.parse("1970-01-01T00:00:00.003Z/1970-01-01T00:00:00.006Z"),Interval.parse("1970-01-01T00:00:00.002Z/1970-01-01T00:00:00.005Z")),null),ImmutableList.<String>of("0","2","3","4","5"));
  assertFilterMatches(new IntervalDimFilter("dim1",Arrays.asList(Interval.parse("1970-01-01T00:00:00.002Z/1970-01-01T00:00:00.011Z")),null),ImmutableList.<String>of("1","2"));
  String timeBoosterJsFn="function(x) { return(Number(x) + 7200000) }";
  ExtractionFn exFn=new JavaScriptExtractionFn(timeBoosterJsFn,true,JavaScriptConfig.getDefault());
  assertFilterMatches(new IntervalDimFilter("dim0",Arrays.asList(Interval.parse("1970-01-01T02:00:00.001Z/1970-01-01T02:00:00.005Z")),exFn),ImmutableList.<String>of("1","2","3","4"));
}
