{
  final Injector injector=Guice.createInjector(new DruidGuiceExtensions(),new LifecycleModule(),new Module(){
    @Override public void configure(    Binder binder){
      binder.bind(TestInterface.class).to(AnnotatedClass.class).in(ManageLifecycle.class);
    }
  }
);
  final Lifecycle lifecycle=injector.getInstance(Lifecycle.class);
  final TestInterface instance=injector.getInstance(TestInterface.class);
  Assert.assertEquals(0,instance.getStarted());
  Assert.assertEquals(0,instance.getStopped());
  Assert.assertEquals(0,instance.getRan());
  instance.run();
  Assert.assertEquals(0,instance.getStarted());
  Assert.assertEquals(0,instance.getStopped());
  Assert.assertEquals(1,instance.getRan());
  lifecycle.start();
  Assert.assertEquals(2,instance.getStarted());
  Assert.assertEquals(0,instance.getStopped());
  Assert.assertEquals(1,instance.getRan());
  injector.getInstance(TestInterface.class).run();
  Assert.assertEquals(2,instance.getStarted());
  Assert.assertEquals(0,instance.getStopped());
  Assert.assertEquals(2,instance.getRan());
  lifecycle.stop();
  Assert.assertEquals(2,instance.getStarted());
  Assert.assertEquals(2,instance.getStopped());
  Assert.assertEquals(2,instance.getRan());
}
