{
  EasyMock.reset(autoScalingStrategy);
  EasyMock.expect(autoScalingStrategy.ipToIdLookup(EasyMock.<List<String>>anyObject())).andReturn(Lists.<String>newArrayList("ip"));
  EasyMock.replay(autoScalingStrategy);
  boolean terminatedSomething=simpleResourceManagementStrategy.doTerminate(Arrays.<RemoteTaskRunnerWorkItem>asList(),Arrays.<ZkWorker>asList(new TestZkWorker(NoopTask.create(),"h1","i1","0"),new TestZkWorker(NoopTask.create(),"h1","i2","0")));
  Assert.assertFalse(terminatedSomething);
  EasyMock.verify(autoScalingStrategy);
  EasyMock.reset(autoScalingStrategy);
  EasyMock.expect(autoScalingStrategy.ipToIdLookup(EasyMock.<List<String>>anyObject())).andReturn(Lists.<String>newArrayList("ip"));
  EasyMock.replay(autoScalingStrategy);
  boolean provisionedSomething=simpleResourceManagementStrategy.doProvision(Arrays.<RemoteTaskRunnerWorkItem>asList(),Arrays.<ZkWorker>asList(new TestZkWorker(NoopTask.create()),new TestZkWorker(NoopTask.create())));
  Assert.assertFalse(provisionedSomething);
  EasyMock.verify(autoScalingStrategy);
  workerSetupData.set(new WorkerSetupData("1",0,2,null,null,null));
  EasyMock.reset(autoScalingStrategy);
  EasyMock.expect(autoScalingStrategy.ipToIdLookup(EasyMock.<List<String>>anyObject())).andReturn(Lists.<String>newArrayList("ip"));
  EasyMock.expect(autoScalingStrategy.provision()).andReturn(new AutoScalingData(Lists.<String>newArrayList("h3")));
  EasyMock.expect(autoScalingStrategy.provision()).andReturn(new AutoScalingData(Lists.<String>newArrayList("h4")));
  EasyMock.replay(autoScalingStrategy);
  provisionedSomething=simpleResourceManagementStrategy.doProvision(Arrays.<RemoteTaskRunnerWorkItem>asList(),Arrays.<ZkWorker>asList(new TestZkWorker(NoopTask.create(),"h1","i1","0"),new TestZkWorker(NoopTask.create(),"h2","i2","0")));
  Assert.assertTrue(provisionedSomething);
  EasyMock.verify(autoScalingStrategy);
  EasyMock.reset(autoScalingStrategy);
  EasyMock.expect(autoScalingStrategy.ipToIdLookup(ImmutableList.of("i1","i2","i3","i4"))).andReturn(ImmutableList.of("h1","h2","h3","h4"));
  EasyMock.expect(autoScalingStrategy.terminate(ImmutableList.of("i1","i2"))).andReturn(new AutoScalingData(ImmutableList.of("h1","h2")));
  EasyMock.replay(autoScalingStrategy);
  terminatedSomething=simpleResourceManagementStrategy.doTerminate(Arrays.<RemoteTaskRunnerWorkItem>asList(),Arrays.<ZkWorker>asList(new TestZkWorker(null,"h1","i1","0"),new TestZkWorker(null,"h2","i2","0"),new TestZkWorker(NoopTask.create(),"h3","i3","1"),new TestZkWorker(NoopTask.create(),"h4","i4","1")));
  Assert.assertTrue(terminatedSomething);
  EasyMock.verify(autoScalingStrategy);
}
