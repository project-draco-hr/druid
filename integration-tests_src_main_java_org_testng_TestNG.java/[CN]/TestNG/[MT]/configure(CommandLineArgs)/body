{
  if (cla.verbose != null) {
    setVerbose(cla.verbose);
  }
  setOutputDirectory(cla.outputDirectory);
  String testClasses=cla.testClass;
  if (null != testClasses) {
    String[] strClasses=testClasses.split(",");
    List<Class> classes=Lists.newArrayList();
    for (    String c : strClasses) {
      classes.add(ClassHelper.fileToClass(c));
    }
    setTestClasses(classes.toArray(new Class[classes.size()]));
  }
  setOutputDirectory(cla.outputDirectory);
  if (cla.testNames != null) {
    setTestNames(Arrays.asList(cla.testNames.split(",")));
  }
  if (cla.useDefaultListeners != null) {
    setUseDefaultListeners("true".equalsIgnoreCase(cla.useDefaultListeners));
  }
  setGroups(cla.groups);
  setExcludedGroups(cla.excludedGroups);
  setTestJar(cla.testJar);
  setXmlPathInJar(cla.xmlPathInJar);
  setJUnit(cla.junit);
  setMixed(cla.mixed);
  setMaster(cla.master);
  setSlave(cla.slave);
  setSkipFailedInvocationCounts(cla.skipFailedInvocationCounts);
  if (cla.parallelMode != null) {
    setParallel(cla.parallelMode);
  }
  if (cla.configFailurePolicy != null) {
    setConfigFailurePolicy(cla.configFailurePolicy);
  }
  if (cla.threadCount != null) {
    setThreadCount(cla.threadCount);
  }
  if (cla.dataProviderThreadCount != null) {
    setDataProviderThreadCount(cla.dataProviderThreadCount);
  }
  if (cla.suiteName != null) {
    setDefaultSuiteName(cla.suiteName);
  }
  if (cla.testName != null) {
    setDefaultTestName(cla.testName);
  }
  if (cla.listener != null) {
    String sep=";";
    if (cla.listener.indexOf(",") >= 0) {
      sep=",";
    }
    String[] strs=Utils.split(cla.listener,sep);
    List<Class> classes=Lists.newArrayList();
    for (    String cls : strs) {
      classes.add(ClassHelper.fileToClass(cls));
    }
    setListenerClasses(classes);
  }
  if (null != cla.methodSelectors) {
    String[] strs=Utils.split(cla.methodSelectors,",");
    for (    String cls : strs) {
      String[] sel=Utils.split(cls,":");
      try {
        if (sel.length == 2) {
          addMethodSelector(sel[0],Integer.valueOf(sel[1]));
        }
 else {
          error("Method selector value was not in the format org.example.Selector:4");
        }
      }
 catch (      NumberFormatException nfe) {
        error("Method selector value was not in the format org.example.Selector:4");
      }
    }
  }
  if (cla.objectFactory != null) {
    setObjectFactory(ClassHelper.fileToClass(cla.objectFactory));
  }
  if (cla.testRunnerFactory != null) {
    setTestRunnerFactoryClass(ClassHelper.fileToClass(cla.testRunnerFactory));
  }
  if (System.getProperty("testrunfactory") != null) {
    setTestRunnerFactoryClass(ClassHelper.fileToClass(System.getProperty("testrunfactory")));
  }
  if (cla.reporter != null) {
    ReporterConfig reporterConfig=ReporterConfig.deserialize(cla.reporter);
    addReporter(reporterConfig);
  }
  if (cla.commandLineMethods.size() > 0) {
    m_commandLineMethods=cla.commandLineMethods;
  }
  if (cla.suiteFiles != null) {
    setTestSuites(cla.suiteFiles);
  }
  setSuiteThreadPoolSize(cla.suiteThreadPoolSize);
  setRandomizeSuites(cla.randomizeSuites);
}
