{
  if (lhs == null) {
    return rhs;
  }
  if (rhs == null) {
    return lhs;
  }
  Object[] metrics=new Object[metricAggs.length];
  Object[] lhsMetrics=lhs.getMetrics();
  Object[] rhsMetrics=rhs.getMetrics();
  for (int i=0; i < metrics.length; ++i) {
    Object lhsMetric=lhsMetrics[i];
    Object rhsMetric=rhsMetrics[i];
    if (lhsMetric == null) {
      metrics[i]=rhsMetric;
    }
 else     if (rhsMetric == null) {
      metrics[i]=lhsMetric;
    }
 else {
      metrics[i]=metricAggs[i].combine(lhsMetric,rhsMetric);
    }
  }
  final Rowboat retVal=new Rowboat(lhs.getTimestamp(),lhs.getDims(),metrics,lhs.getRowNum(),lhs.getHandlers());
  for (  Rowboat rowboat : Arrays.asList(lhs,rhs)) {
    for (    Map.Entry<Integer,TreeSet<Integer>> entry : rowboat.getComprisedRows().entrySet()) {
      for (      Integer rowNum : entry.getValue()) {
        retVal.addRow(entry.getKey(),rowNum);
      }
    }
  }
  return retVal;
}
