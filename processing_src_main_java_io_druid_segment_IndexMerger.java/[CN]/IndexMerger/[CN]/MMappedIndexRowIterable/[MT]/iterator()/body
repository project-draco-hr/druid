{
  return Iterators.transform(index.iterator(),new Function<Rowboat,Rowboat>(){
    @Override public Rowboat apply(    @Nullable Rowboat input){
      Object[] dims=input.getDims();
      Object[] newDims=new Object[convertedDims.size()];
      for (int i=0; i < convertedDims.size(); ++i) {
        if (i >= dims.length) {
          continue;
        }
        newDims[i]=mergers.get(i).convertSegmentRowValuesToMergedRowValues(dims[i],indexNumber);
      }
      final Rowboat retVal=new Rowboat(input.getTimestamp(),newDims,input.getMetrics(),input.getRowNum(),input.getHandlers());
      retVal.addRow(indexNumber,input.getRowNum());
      return retVal;
    }
  }
);
}
