{
  LOG.info("Starting test: ITRealtimeIndexTaskTest");
  try {
    String task=setShutOffTime(getTaskAsString(REALTIME_TASK_RESOURCE),new DateTime(System.currentTimeMillis() + TimeUnit.MINUTES.toMillis(3)));
    LOG.info("indexerSpec: [%s]\n",task);
    taskID=indexer.submitTask(task);
    postEvents();
    TimeUnit.SECONDS.sleep(5);
    String query_response_template=null;
    InputStream is=ITRealtimeIndexTaskTest.class.getResourceAsStream(REALTIME_QUERIES_RESOURCE);
    if (null == is) {
      throw new ISE("could not open query file: %s",REALTIME_QUERIES_RESOURCE);
    }
    query_response_template=IOUtils.toString(is,"UTF-8");
    String queryStr=query_response_template.replace("%%TIMEBOUNDARY_RESPONSE_TIMESTAMP%%",TIMESTAMP_FMT.print(dtFirst)).replace("%%TIMEBOUNDARY_RESPONSE_MAXTIME%%",TIMESTAMP_FMT.print(dtLast)).replace("%%TIMEBOUNDARY_RESPONSE_MINTIME%%",TIMESTAMP_FMT.print(dtFirst)).replace("%%TIMESERIES_QUERY_START%%",INTERVAL_FMT.print(dtFirst)).replace("%%TIMESERIES_QUERY_END%%",INTERVAL_FMT.print(dtLast.plusMinutes(2))).replace("%%TIMESERIES_RESPONSE_TIMESTAMP%%",TIMESTAMP_FMT.print(dtFirst)).replace("%%POST_AG_REQUEST_START%%",INTERVAL_FMT.print(dtFirst)).replace("%%POST_AG_REQUEST_END%%",INTERVAL_FMT.print(dtLast.plusMinutes(2))).replace("%%POST_AG_RESPONSE_TIMESTAMP%%",TIMESTAMP_FMT.print(dtLast.minusSeconds(24).withSecondOfMinute(0)));
    try {
      this.queryHelper.testQueriesFromString(getRouterURL(),queryStr,2);
    }
 catch (    Exception e) {
      Throwables.propagate(e);
    }
    indexer.waitUntilTaskCompletes(taskID);
    RetryUtil.retryUntil(new Callable<Boolean>(){
      @Override public Boolean call() throws Exception {
        return coordinator.areSegmentsLoaded(INDEX_DATASOURCE);
      }
    }
,true,60000,10,"Real-time generated segments loaded");
    this.queryHelper.testQueriesFromString(getRouterURL(),queryStr,2);
  }
 catch (  Exception e) {
    Throwables.propagate(e);
  }
 finally {
    String first=DateTimeFormat.forPattern("yyyy-MM-dd'T'00:00:00.000'Z'").print(dtFirst);
    String last=DateTimeFormat.forPattern("yyyy-MM-dd'T'00:00:00.000'Z'").print(dtFirst.plusDays(1));
    unloadAndKillData(INDEX_DATASOURCE,first,last);
  }
}
