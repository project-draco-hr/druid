{
  File localStorageDir=new File(config.getCacheDirectory(),DataSegmentPusherUtil.getStorageDir(segment));
  final String legacyDir=DataSegmentPusherUtil.getLegacyStorageDir(segment);
  if (legacyDir != null) {
    File legacyStorageDir=new File(config.getCacheDirectory(),legacyDir);
    if (legacyStorageDir.exists()) {
      log.info("Found legacyStorageDir[%s], moving to new storage location[%s]",legacyStorageDir,localStorageDir);
      if (localStorageDir.exists()) {
        try {
          FileUtils.deleteDirectory(localStorageDir);
        }
 catch (        IOException e) {
          throw new SegmentLoadingException(e,"Error deleting localDir[%s]",localStorageDir);
        }
      }
      final File parentDir=localStorageDir.getParentFile();
      if (!parentDir.exists()) {
        log.info("Parent[%s] didn't exist, creating.");
        parentDir.mkdirs();
      }
      if (!legacyStorageDir.renameTo(localStorageDir)) {
        log.info("Failed moving [%s] to [%s]",legacyStorageDir,localStorageDir);
      }
    }
  }
  if (localStorageDir.exists()) {
    long localLastModified=localStorageDir.lastModified();
    long remoteLastModified=dataSegmentPuller.getLastModified(segment);
    if (remoteLastModified > 0 && localLastModified >= remoteLastModified) {
      log.info("Found localStorageDir[%s] with modified[%s], which is same or after remote[%s].  Using.",localStorageDir,localLastModified,remoteLastModified);
      return localStorageDir;
    }
  }
  if (localStorageDir.exists()) {
    try {
      FileUtils.deleteDirectory(localStorageDir);
    }
 catch (    IOException e) {
      log.warn(e,"Exception deleting previously existing local dir[%s]",localStorageDir);
    }
  }
  if (!localStorageDir.mkdirs()) {
    log.info("Unable to make parent file[%s]",localStorageDir);
  }
  dataSegmentPuller.getSegmentFiles(segment,localStorageDir);
  return localStorageDir;
}
