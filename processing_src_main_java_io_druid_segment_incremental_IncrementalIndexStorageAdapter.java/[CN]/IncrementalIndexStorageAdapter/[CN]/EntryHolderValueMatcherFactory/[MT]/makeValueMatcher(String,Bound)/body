{
  IncrementalIndex.DimensionDesc dimensionDesc=index.getDimension(dimension);
  if (dimensionDesc == null) {
    return new BooleanValueMatcher(false);
  }
  final int dimIndex=dimensionDesc.getIndex();
  final IncrementalIndex.DimDim dimDim=dimensionDesc.getValues();
  return new ValueMatcher(){
    @Override public boolean matches(){
      int[][] dims=holder.getKey().getDims();
      if (dimIndex >= dims.length || dims[dimIndex] == null) {
        return false;
      }
      for (      int dimVal : dims[dimIndex]) {
        Comparable fullDimVal=dimDim.getValue(dimVal);
        if (!(fullDimVal instanceof String)) {
          return false;
        }
        List<String> stringCoords=Lists.newArrayList(SPLITTER.split((String)fullDimVal));
        float[] coords=new float[stringCoords.size()];
        for (int j=0; j < coords.length; j++) {
          coords[j]=Float.valueOf(stringCoords.get(j));
        }
        if (bound.contains(coords)) {
          return true;
        }
      }
      return false;
    }
  }
;
}
