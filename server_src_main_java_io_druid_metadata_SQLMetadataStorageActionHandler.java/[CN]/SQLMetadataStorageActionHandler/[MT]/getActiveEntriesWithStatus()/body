{
  return retryingHandle(new HandleCallback<List<Pair<EntryType,StatusType>>>(){
    @Override public List<Pair<EntryType,StatusType>> withHandle(    Handle handle) throws Exception {
      return handle.createQuery(String.format("SELECT id, payload, status_payload FROM %s WHERE active = TRUE ORDER BY created_date",entryTable)).map(new ResultSetMapper<Pair<EntryType,StatusType>>(){
        @Override public Pair<EntryType,StatusType> map(        int index,        ResultSet r,        StatementContext ctx) throws SQLException {
          try {
            return Pair.of(jsonMapper.<EntryType>readValue(r.getBytes("payload"),entryType),jsonMapper.<StatusType>readValue(r.getBytes("status_payload"),statusType));
          }
 catch (          IOException e) {
            log.makeAlert(e,"Failed to parse entry payload").addData("entry",r.getString("id")).emit();
            throw new SQLException(e);
          }
        }
      }
).list();
    }
  }
);
}
