{
  CoordinatorStats stats=new CoordinatorStats();
  if (params.hasDeletionWaitTimeElapsed()) {
    DruidCluster cluster=params.getDruidCluster();
    Map<String,VersionedIntervalTimeline<String,DataSegment>> timelines=Maps.newHashMap();
    for (    MinMaxPriorityQueue<ServerHolder> serverHolders : cluster.getSortedServersByTier()) {
      for (      ServerHolder serverHolder : serverHolders) {
        ImmutableDruidServer server=serverHolder.getServer();
        for (        ImmutableDruidDataSource dataSource : server.getDataSources()) {
          VersionedIntervalTimeline<String,DataSegment> timeline=timelines.get(dataSource.getName());
          if (timeline == null) {
            timeline=new VersionedIntervalTimeline<>(Comparators.comparable());
            timelines.put(dataSource.getName(),timeline);
          }
          for (          DataSegment segment : dataSource.getSegments()) {
            timeline.add(segment.getInterval(),segment.getVersion(),segment.getShardSpec().createChunk(segment));
          }
        }
      }
    }
    for (    VersionedIntervalTimeline<String,DataSegment> timeline : timelines.values()) {
      for (      TimelineObjectHolder<String,DataSegment> holder : timeline.findOvershadowed()) {
        for (        DataSegment dataSegment : holder.getObject().payloads()) {
          coordinator.removeSegment(dataSegment);
          stats.addToGlobalStat("overShadowedCount",1);
        }
      }
      for (      LoadQueuePeon loadQueue : coordinator.getLoadManagementPeons().values()) {
        for (        DataSegment dataSegment : loadQueue.getSegmentsToLoad()) {
          timeline=timelines.get(dataSegment.getDataSource());
          if (timeline == null) {
            continue;
          }
          timeline.add(dataSegment.getInterval(),dataSegment.getVersion(),dataSegment.getShardSpec().createChunk(dataSegment));
          for (          TimelineObjectHolder<String,DataSegment> holder : timeline.findOvershadowed()) {
            for (            DataSegment segmentToRemove : holder.getObject().payloads()) {
              if (segmentToRemove == dataSegment) {
                coordinator.removeSegment(dataSegment);
                stats.addToGlobalStat("overShadowedCount",1);
              }
            }
          }
          timeline.remove(dataSegment.getInterval(),dataSegment.getVersion(),dataSegment.getShardSpec().createChunk(dataSegment));
        }
      }
    }
  }
  return params.buildFromExisting().withCoordinatorStats(stats).build();
}
