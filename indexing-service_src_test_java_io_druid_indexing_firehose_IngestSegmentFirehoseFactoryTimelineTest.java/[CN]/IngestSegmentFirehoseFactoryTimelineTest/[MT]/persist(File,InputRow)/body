{
  final File persistDir=new File(tmpDir,UUID.randomUUID().toString());
  final IncrementalIndexSchema schema=new IncrementalIndexSchema.Builder().withQueryGranularity(QueryGranularity.NONE).withMinTimestamp(JodaUtils.MIN_INSTANT).withDimensionsSpec(ROW_PARSER).withMetrics(new AggregatorFactory[]{new LongSumAggregatorFactory(METRICS[0],METRICS[0])}).build();
  final OnheapIncrementalIndex index=new OnheapIncrementalIndex(schema,true,rows.length);
  for (  InputRow row : rows) {
    try {
      index.add(row);
    }
 catch (    IndexSizeExceededException e) {
      throw Throwables.propagate(e);
    }
  }
  try {
    INDEX_MERGER.persist(index,persistDir,new IndexSpec());
  }
 catch (  IOException e) {
    throw Throwables.propagate(e);
  }
  return ImmutableMap.<String,Object>of("type","local","path",persistDir.getAbsolutePath());
}
