{
  initializeHttpClient();
  initializeEmitter();
  initializeMonitors();
  initializeMergerConfig();
  initializeServiceDiscovery();
  initializeCoordinatorServiceProvider();
  initializeJacksonSubtypes();
  initializeCuratorCoordinator();
  initializePersistentTaskLogs();
  initializeTaskRunner();
  initializeWorkerTaskMonitor();
  initializeServer();
  final ScheduledExecutorFactory scheduledExecutorFactory=ScheduledExecutors.createFactory(getLifecycle());
  final ScheduledExecutorService globalScheduledExec=scheduledExecutorFactory.create(1,"Global--%d");
  final MonitorScheduler monitorScheduler=new MonitorScheduler(getConfigFactory().build(MonitorSchedulerConfig.class),globalScheduledExec,emitter,monitors);
  getLifecycle().addManagedInstance(monitorScheduler);
  final Injector injector=Guice.createInjector(new WorkerServletModule(getJsonMapper(),emitter,forkingTaskRunner));
  final Context root=new Context(server,"/",Context.SESSIONS);
  root.addServlet(new ServletHolder(new StatusServlet()),"/status");
  root.addServlet(new ServletHolder(new DefaultServlet()),"/*");
  root.addEventListener(new GuiceServletConfig(injector));
  root.addFilter(GuiceFilter.class,"/mmx/worker/v1/*",0);
}
