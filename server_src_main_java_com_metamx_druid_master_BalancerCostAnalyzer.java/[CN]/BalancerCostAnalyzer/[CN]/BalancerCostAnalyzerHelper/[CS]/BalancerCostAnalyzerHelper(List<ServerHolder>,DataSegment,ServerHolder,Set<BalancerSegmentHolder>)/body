{
  this.costsServerHolderPairs=MinMaxPriorityQueue.orderedBy(new Comparator<Pair<Double,ServerHolder>>(){
    @Override public int compare(    Pair<Double,ServerHolder> o,    Pair<Double,ServerHolder> o1){
      return Double.compare(o.lhs,o1.lhs);
    }
  }
).create();
  this.serverHolderList=serverHolderList;
  this.proposalSegment=proposalSegment;
  this.fromServerHolder=fromServerHolder;
  this.segmentHoldersToMove=segmentHoldersToMove;
  this.currCost=0;
}
