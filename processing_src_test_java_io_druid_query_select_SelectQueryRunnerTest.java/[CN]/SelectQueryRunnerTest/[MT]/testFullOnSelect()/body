{
  SelectQuery query=new SelectQuery(QueryRunnerTestHelper.dataSource,QueryRunnerTestHelper.fullOnInterval,null,QueryRunnerTestHelper.allGran,Lists.<String>newArrayList(),Lists.<String>newArrayList(),new PagingSpec(null,3),null);
  Iterable<Result<SelectResultValue>> results=Sequences.toList(runner.run(query),Lists.<Result<SelectResultValue>>newArrayList());
  List<Result<SelectResultValue>> expectedResults=Arrays.asList(new Result<SelectResultValue>(new DateTime("2011-01-12T00:00:00.000Z"),new SelectResultValue(ImmutableMap.of(QueryRunnerTestHelper.segmentId,2),Arrays.asList(new EventHolder(QueryRunnerTestHelper.segmentId,0,new ImmutableMap.Builder<String,Object>().put(EventHolder.timestampKey,new DateTime("2011-01-12T00:00:00.000Z")).put(providerLowercase,"spot").put(QueryRunnerTestHelper.qualityDimension,"automotive").put(QueryRunnerTestHelper.placementDimension,"preferred").put(QueryRunnerTestHelper.placementishDimension,Lists.newArrayList("a","preferred")).put(QueryRunnerTestHelper.indexMetric,100.000000F).build()),new EventHolder(QueryRunnerTestHelper.segmentId,1,new ImmutableMap.Builder<String,Object>().put(EventHolder.timestampKey,new DateTime("2011-01-12T00:00:00.000Z")).put(providerLowercase,"spot").put(QueryRunnerTestHelper.qualityDimension,"business").put(QueryRunnerTestHelper.placementDimension,"preferred").put(QueryRunnerTestHelper.placementishDimension,Lists.newArrayList("b","preferred")).put(QueryRunnerTestHelper.indexMetric,100.000000F).build()),new EventHolder(QueryRunnerTestHelper.segmentId,2,new ImmutableMap.Builder<String,Object>().put(EventHolder.timestampKey,new DateTime("2011-01-12T00:00:00.000Z")).put(providerLowercase,"spot").put(QueryRunnerTestHelper.qualityDimension,"entertainment").put(QueryRunnerTestHelper.placementDimension,"preferred").put(QueryRunnerTestHelper.placementishDimension,Lists.newArrayList("e","preferred")).put(QueryRunnerTestHelper.indexMetric,100.000000F).build())))));
  verify(expectedResults,results);
}
