{
  SelectQuery query=new SelectQuery(new TableDataSource(QueryRunnerTestHelper.dataSource),QueryRunnerTestHelper.fullOnInterval,null,QueryRunnerTestHelper.allGran,Lists.<String>newArrayList(QueryRunnerTestHelper.qualityDimension),Lists.<String>newArrayList(QueryRunnerTestHelper.indexMetric),new PagingSpec(Maps.newLinkedHashMap(ImmutableMap.of(QueryRunnerTestHelper.segmentId,3)),3),null);
  Iterable<Result<SelectResultValue>> results=Sequences.toList(runner.run(query),Lists.<Result<SelectResultValue>>newArrayList());
  List<Result<SelectResultValue>> expectedResults=Arrays.asList(new Result<SelectResultValue>(new DateTime("2011-01-12T00:00:00.000Z"),new SelectResultValue(ImmutableMap.of(QueryRunnerTestHelper.segmentId,5),Arrays.asList(new EventHolder(QueryRunnerTestHelper.segmentId,3,new ImmutableMap.Builder<String,Object>().put(EventHolder.timestampKey,new DateTime("2011-01-12T00:00:00.000Z")).put(QueryRunnerTestHelper.qualityDimension,"health").put(QueryRunnerTestHelper.indexMetric,100.000000F).build()),new EventHolder(QueryRunnerTestHelper.segmentId,4,new ImmutableMap.Builder<String,Object>().put(EventHolder.timestampKey,new DateTime("2011-01-12T00:00:00.000Z")).put(QueryRunnerTestHelper.qualityDimension,"mezzanine").put(QueryRunnerTestHelper.indexMetric,100.000000F).build()),new EventHolder(QueryRunnerTestHelper.segmentId,5,new ImmutableMap.Builder<String,Object>().put(EventHolder.timestampKey,new DateTime("2011-01-12T00:00:00.000Z")).put(QueryRunnerTestHelper.qualityDimension,"news").put(QueryRunnerTestHelper.indexMetric,100.000000F).build())))));
  verify(expectedResults,results);
}
