{
  Preconditions.checkNotNull(mapper);
  Preconditions.checkNotNull(derbyConnectorRule);
  TaskStorage taskStorage;
switch (taskStorageType) {
case HEAP_TASK_STORAGE:
{
      taskStorage=new HeapMemoryTaskStorage(new TaskStorageConfig(null){
      }
);
      break;
    }
case METADATA_TASK_STORAGE:
{
    TestDerbyConnector testDerbyConnector=derbyConnectorRule.getConnector();
    mapper.registerSubtypes(new NamedType(MockExceptionalFirehoseFactory.class,"mockExcepFirehoseFactory"),new NamedType(MockFirehoseFactory.class,"mockFirehoseFactory"));
    testDerbyConnector.createTaskTables();
    testDerbyConnector.createSegmentTable();
    taskStorage=new MetadataTaskStorage(testDerbyConnector,new TaskStorageConfig(null),new SQLMetadataStorageActionHandlerFactory(testDerbyConnector,derbyConnectorRule.metadataTablesConfigSupplier().get(),mapper));
    break;
  }
default :
{
  throw new RuntimeException(String.format("Unknown task storage type [%s]",taskStorageType));
}
}
tsqa=new TaskStorageQueryAdapter(taskStorage);
return taskStorage;
}
