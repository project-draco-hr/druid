{
  ArrayList<IndexedIntsWriter> dimWriters=Lists.newArrayListWithCapacity(mergedDimensions.size());
  final CompressedObjectStrategy.CompressionStrategy dimCompression=indexSpec.getDimensionCompressionStrategy();
  for (int dimIndex=0; dimIndex < mergedDimensions.size(); ++dimIndex) {
    String dim=mergedDimensions.get(dimIndex);
    int cardinality=dimCardinalities.get(dim);
    ColumnCapabilitiesImpl capabilities=dimCapabilities.get(dimIndex);
    String filenameBase=String.format("%s.forward_dim",dim);
    IndexedIntsWriter writer;
    if (capabilities.hasMultipleValues()) {
      writer=(dimCompression != null) ? CompressedVSizeIndexedV3Writer.create(ioPeon,filenameBase,cardinality,dimCompression) : new VSizeIndexedWriter(ioPeon,filenameBase,cardinality);
    }
 else {
      writer=(dimCompression != null) ? CompressedVSizeIntsIndexedWriter.create(ioPeon,filenameBase,cardinality,dimCompression) : new VSizeIndexedIntsWriter(ioPeon,filenameBase,cardinality);
    }
    writer.open();
    dimWriters.add(writer);
  }
  return dimWriters;
}
