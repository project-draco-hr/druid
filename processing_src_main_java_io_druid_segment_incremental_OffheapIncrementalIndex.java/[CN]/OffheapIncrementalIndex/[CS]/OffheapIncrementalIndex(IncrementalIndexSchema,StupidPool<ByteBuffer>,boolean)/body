{
  super(incrementalIndexSchema,deserializeComplexMetrics);
  this.bufferHolder=bufferPool.take();
  final AggregatorFactory[] metrics=incrementalIndexSchema.getMetrics();
  this.aggPositionOffsets=new int[metrics.length];
  int currAggSize=0;
  for (int i=0; i < metrics.length; i++) {
    final AggregatorFactory agg=metrics[i];
    aggPositionOffsets[i]=currAggSize;
    currAggSize+=agg.getMaxIntermediateSize();
  }
  this.totalAggSize=currAggSize;
  final DBMaker dbMaker=DBMaker.newMemoryDirectDB().transactionDisable().asyncWriteEnable().cacheSoftRefEnable();
  this.factsDb=dbMaker.make();
  this.db=dbMaker.make();
  final TimeAndDimsSerializer timeAndDimsSerializer=new TimeAndDimsSerializer(this);
  this.facts=factsDb.createTreeMap("__facts" + UUID.randomUUID()).keySerializer(timeAndDimsSerializer).comparator(timeAndDimsSerializer.getComparator()).valueSerializer(Serializer.INTEGER).make();
}
