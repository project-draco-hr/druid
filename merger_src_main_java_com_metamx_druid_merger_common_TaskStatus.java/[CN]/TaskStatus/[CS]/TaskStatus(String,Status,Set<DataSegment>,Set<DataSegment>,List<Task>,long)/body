{
  this.id=id;
  this.segments=ImmutableSet.copyOf(segments);
  this.segmentsNuked=ImmutableSet.copyOf(segmentsNuked);
  this.nextTasks=ImmutableList.copyOf(nextTasks);
  this.status=status;
  this.duration=duration;
  Preconditions.checkNotNull(id,"id");
  Preconditions.checkNotNull(status,"status");
  if (this.segments.size() > 0) {
    Preconditions.checkArgument(status == Status.RUNNING || status == Status.SUCCESS,"segments not allowed for %s tasks",status);
  }
  if (this.segmentsNuked.size() > 0) {
    Preconditions.checkArgument(status == Status.SUCCESS,"segmentsNuked not allowed for %s tasks",status);
  }
  if (this.nextTasks.size() > 0) {
    Preconditions.checkArgument(status == Status.SUCCESS || status == Status.RUNNING,"nextTasks not allowed for %s tasks",status);
  }
}
