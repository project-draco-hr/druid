{
  ExtractionFn extractionFn1=new RegexDimExtractionFn("^([^,]*),",false,"");
  ExtractionFn extractionFn2=new RegexDimExtractionFn(",(.*)",false,"");
  ExtractionFn extractionFn3=new RegexDimExtractionFn("^([^,]*),",false,"");
  HavingSpec dimHavingSpec1=new DimensionSelectorHavingSpec("dim","v",extractionFn1);
  HavingSpec dimHavingSpec2=new DimensionSelectorHavingSpec("dim","v",extractionFn3);
  HavingSpec dimHavingSpec3=new DimensionSelectorHavingSpec("dim1","v",null);
  HavingSpec dimHavingSpec4=new DimensionSelectorHavingSpec("dim2","v",null);
  HavingSpec dimHavingSpec5=new DimensionSelectorHavingSpec("dim","v1",null);
  HavingSpec dimHavingSpec6=new DimensionSelectorHavingSpec("dim","v2",null);
  HavingSpec dimHavingSpec7=new DimensionSelectorHavingSpec("dim",null,null);
  HavingSpec dimHavingSpec8=new DimensionSelectorHavingSpec("dim",null,null);
  HavingSpec dimHavingSpec9=new DimensionSelectorHavingSpec("dim1",null,null);
  HavingSpec dimHavingSpec10=new DimensionSelectorHavingSpec("dim2",null,null);
  HavingSpec dimHavingSpec11=new DimensionSelectorHavingSpec("dim1","v",null);
  HavingSpec dimHavingSpec12=new DimensionSelectorHavingSpec("dim2",null,null);
  HavingSpec dimHavingSpec13=new DimensionSelectorHavingSpec("dim","value",extractionFn1);
  HavingSpec dimHavingSpec14=new DimensionSelectorHavingSpec("dim","value",extractionFn2);
  assertEquals(dimHavingSpec1,dimHavingSpec2);
  assertNotEquals(dimHavingSpec3,dimHavingSpec4);
  assertNotEquals(dimHavingSpec5,dimHavingSpec6);
  assertEquals(dimHavingSpec7,dimHavingSpec8);
  assertNotEquals(dimHavingSpec9,dimHavingSpec10);
  assertNotEquals(dimHavingSpec11,dimHavingSpec12);
  assertNotEquals(dimHavingSpec13,dimHavingSpec14);
}
