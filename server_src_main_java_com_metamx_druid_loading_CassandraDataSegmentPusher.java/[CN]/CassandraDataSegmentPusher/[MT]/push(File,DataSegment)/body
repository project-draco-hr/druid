{
  log.info("Writing [%s] to C*",indexFilesDir);
  String key=JOINER.join(config.getKeyspace().isEmpty() ? null : config.getKeyspace(),DataSegmentPusherUtil.getStorageDir(segment));
  final File compressedIndexFile=File.createTempFile("druid","index.zip");
  long indexSize=CompressionUtils.zip(indexFilesDir,compressedIndexFile);
  int version=IndexIO.getVersionFromDir(indexFilesDir);
  File descriptorFile=File.createTempFile("druid","descriptor.json");
  Files.copy(ByteStreams.newInputStreamSupplier(jsonMapper.writeValueAsBytes(segment)),descriptorFile);
  String statement="INSERT INTO " + keyspace + "."+ table+ "(key, version, descriptor, index) VALUES (?,?,?,?)";
  PreparedStatement ps=session.prepare(statement);
  byte[] indexData=ByteStreams.toByteArray(new FileInputStream(compressedIndexFile));
  byte[] descriptorData=ByteStreams.toByteArray(new FileInputStream(compressedIndexFile));
  BoundStatement bs=ps.bind(key,version,descriptorData,indexData);
  session.execute(bs);
  segment=segment.withSize(indexSize).withLoadSpec(ImmutableMap.<String,Object>of("type","c*","key",key)).withBinaryVersion(IndexIO.getVersionFromDir(indexFilesDir));
  log.info("Deleting zipped index File[%s]",compressedIndexFile);
  compressedIndexFile.delete();
  log.info("Deleting descriptor file[%s]",descriptorFile);
  descriptorFile.delete();
  return segment;
}
