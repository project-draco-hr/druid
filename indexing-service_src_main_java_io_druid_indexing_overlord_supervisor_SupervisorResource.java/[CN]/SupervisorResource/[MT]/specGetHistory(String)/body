{
  return asLeaderWithSupervisorManager(new Function<SupervisorManager,Response>(){
    @Override public Response apply(    SupervisorManager manager){
      Map<String,List<VersionedSupervisorSpec>> history=manager.getSupervisorHistory();
      if (history.containsKey(id)) {
        return Response.ok(history.get(id)).build();
      }
 else {
        return Response.status(Response.Status.NOT_FOUND).entity(ImmutableMap.of("error",String.format("No history for [%s] (history available for %s)",id,history.keySet()))).build();
      }
    }
  }
);
}
