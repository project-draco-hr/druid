{
  final boolean isSmile=SmileMediaTypes.APPLICATION_JACKSON_SMILE.equals(request.getContentType()) || APPLICATION_SMILE.equals(request.getContentType());
  final ObjectMapper objectMapper=isSmile ? smileMapper : jsonMapper;
  request.setAttribute(OBJECTMAPPER_ATTRIBUTE,objectMapper);
  String host=hostFinder.getDefaultHost();
  request.setAttribute(HOST_ATTRIBUTE,host);
  boolean isQuery=request.getMethod().equals(HttpMethod.POST.asString()) && request.getRequestURI().startsWith("/druid/v2");
  if (isQuery) {
    try {
      Query inputQuery=objectMapper.readValue(request.getInputStream(),Query.class);
      if (inputQuery != null) {
        request.setAttribute(HOST_ATTRIBUTE,hostFinder.getHost(inputQuery));
        if (inputQuery.getId() == null) {
          inputQuery=inputQuery.withId(UUID.randomUUID().toString());
        }
      }
      request.setAttribute(QUERY_ATTRIBUTE,inputQuery);
    }
 catch (    IOException e) {
      log.warn(e,"Exception parsing query");
      final String errorMessage=e.getMessage() == null ? "no error message" : e.getMessage();
      requestLogger.log(new RequestLogLine(new DateTime(),request.getRemoteAddr(),null,new QueryStats(ImmutableMap.<String,Object>of("success",false,"exception",errorMessage))));
      response.setStatus(HttpServletResponse.SC_BAD_REQUEST);
      response.setContentType(MediaType.APPLICATION_JSON);
      objectMapper.writeValue(response.getOutputStream(),ImmutableMap.of("error",errorMessage));
      return;
    }
catch (    Exception e) {
      handleException(response,objectMapper,e);
      return;
    }
  }
  super.service(request,response);
}
