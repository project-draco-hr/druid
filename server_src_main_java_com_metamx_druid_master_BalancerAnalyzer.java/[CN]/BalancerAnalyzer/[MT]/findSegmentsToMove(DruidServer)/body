{
  Set<BalancerSegmentHolder> segmentsToMove=Sets.newHashSet();
  double currPercentDiff=getPercentDiff();
  if (currPercentDiff < PERCENT_THRESHOLD) {
    log.info("Cluster usage is balanced.");
    return segmentsToMove;
  }
  List<DruidDataSource> dataSources=Lists.newArrayList(server.getDataSources());
  Collections.shuffle(dataSources);
  for (  DruidDataSource dataSource : dataSources) {
    List<DataSegment> segments=Lists.newArrayList(dataSource.getSegments());
    Collections.shuffle(segments);
    for (    DataSegment segment : segments) {
      if (segmentsToMove.size() >= MAX_SEGMENTS_TO_MOVE) {
        return segmentsToMove;
      }
      if (getLookaheadPercentDiff(highestSizeUsed - segment.getSize(),lowestSizeUsed + segment.getSize()) < currPercentDiff) {
        segmentsToMove.add(new BalancerSegmentHolder(server,segment));
        update(highestSizeUsed - segment.getSize(),lowestSizeUsed + segment.getSize());
      }
    }
  }
  return segmentsToMove;
}
