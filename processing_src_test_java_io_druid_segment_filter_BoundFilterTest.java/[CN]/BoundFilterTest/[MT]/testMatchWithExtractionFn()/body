{
  String extractionJsFn="function(str) { return 'super-' + str; }";
  ExtractionFn superFn=new JavaScriptExtractionFn(extractionJsFn,false,JavaScriptConfig.getDefault());
  String nullJsFn="function(str) { return null; }";
  ExtractionFn makeNullFn=new JavaScriptExtractionFn(nullJsFn,false,JavaScriptConfig.getDefault());
  assertFilterMatches(new BoundDimFilter("dim0","","",false,false,false,makeNullFn,StringComparators.LEXICOGRAPHIC),ImmutableList.of("0","1","2","3","4","5","6","7"));
  assertFilterMatches(new BoundDimFilter("dim1","super-ab","super-abd",true,true,false,superFn,StringComparators.LEXICOGRAPHIC),ImmutableList.of("5"));
  assertFilterMatches(new BoundDimFilter("dim1","super-0","super-10",false,false,true,superFn,StringComparators.ALPHANUMERIC),ImmutableList.of("1","2","3"));
  assertFilterMatches(new BoundDimFilter("dim2","super-","super-zzzzzz",false,false,false,superFn,StringComparators.LEXICOGRAPHIC),ImmutableList.of("0","1","2","3","4","5","6","7"));
  assertFilterMatches(new BoundDimFilter("dim2","super-null","super-null",false,false,false,superFn,StringComparators.LEXICOGRAPHIC),ImmutableList.of("1","2","5"));
  assertFilterMatches(new BoundDimFilter("dim3","super-null","super-null",false,false,false,superFn,StringComparators.LEXICOGRAPHIC),ImmutableList.of("0","1","2","3","4","5","6","7"));
  assertFilterMatches(new BoundDimFilter("dim4","super-null","super-null",false,false,false,superFn,StringComparators.LEXICOGRAPHIC),ImmutableList.of("0","1","2","3","4","5","6","7"));
  assertFilterMatches(new BoundDimFilter("dim2","super-null","super-null",false,false,false,superFn,StringComparators.NUMERIC),ImmutableList.of("1","2","5"));
  assertFilterMatches(new BoundDimFilter("dim4","super-null","super-null",false,false,false,superFn,StringComparators.NUMERIC),ImmutableList.of("0","1","2","3","4","5","6","7"));
}
