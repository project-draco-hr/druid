{
  return new Statement(){
    @Override public void evaluate() throws Throwable {
      Throwable baseThrown=null;
      try {
        base.evaluate();
      }
 catch (      Throwable e) {
        baseThrown=e;
      }
 finally {
        Throwable exception=null;
        for (        AutoCloseable autoCloseable : Lists.reverse(autoCloseables)) {
          try {
            autoCloseable.close();
          }
 catch (          Exception e) {
            exception=suppressOrSet(exception,e);
          }
        }
        autoCloseables.clear();
        if (exception != null) {
          if (throwException && baseThrown == null) {
            throw exception;
          }
 else           if (baseThrown != null) {
            baseThrown.addSuppressed(exception);
          }
 else {
            log.error(exception,"Exception closing resources");
          }
        }
        if (baseThrown != null) {
          throw baseThrown;
        }
      }
    }
  }
;
}
