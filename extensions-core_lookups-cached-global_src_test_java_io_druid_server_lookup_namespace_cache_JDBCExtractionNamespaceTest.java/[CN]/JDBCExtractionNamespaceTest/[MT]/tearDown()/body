{
  final ListenableFuture<?> tearDownFuture=setupTeardownService.submit(new Runnable(){
    @Override public void run(){
      try {
        closer.close();
      }
 catch (      IOException e) {
        throw Throwables.propagate(e);
      }
    }
  }
);
  try (final Closeable closeable=new Closeable(){
    @Override public void close() throws IOException {
      setupTeardownService.shutdownNow();
      try {
        if (!setupTeardownService.awaitTermination(60,TimeUnit.SECONDS)) {
          log.error("Tear down service didn't finish");
        }
      }
 catch (      InterruptedException e) {
        Thread.currentThread().interrupt();
        throw new IOException("Interrupted",e);
      }
    }
  }
){
    tearDownFuture.get(60,TimeUnit.SECONDS);
  }
  finally {
    if (Thread.interrupted()) {
      log.info("Thread was interrupted. Clearing interrupt and continuing.");
    }
  }
}
