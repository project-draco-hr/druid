{
  final ByteOrder order=ByteOrder.nativeOrder();
  final int sizePer=999;
  CompressedLongsSupplierSerializer serializer=new CompressedLongsSupplierSerializer(sizePer,new GenericIndexedWriter<ResourceHolder<LongBuffer>>(new IOPeonForTesting(),"test",CompressedLongBufferObjectStrategy.getBufferForOrder(order,compressionStrategy,sizePer)),compressionStrategy);
  serializer.open();
  final ByteArrayOutputStream baos=new ByteArrayOutputStream();
  serializer.closeAndConsolidate(new OutputSupplier<OutputStream>(){
    @Override public OutputStream getOutput() throws IOException {
      return baos;
    }
  }
);
  Assert.assertEquals(baos.size(),serializer.getSerializedSize());
  IndexedLongs longs=CompressedLongsIndexedSupplier.fromByteBuffer(ByteBuffer.wrap(baos.toByteArray()),order).get();
  Assert.assertEquals(0,longs.size());
  longs.close();
}
