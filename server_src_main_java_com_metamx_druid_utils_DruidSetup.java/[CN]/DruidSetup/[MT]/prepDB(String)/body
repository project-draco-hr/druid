{
  Properties tmp_props=new Properties();
  loadProperties(pfile,tmp_props);
  final String tableName=tmp_props.getProperty("druid.database.segmentTable","prod_segments");
  final String dbConnectionUrl=tmp_props.getProperty("druid.database.connectURI");
  final String username=tmp_props.getProperty("druid.database.user");
  final String password=tmp_props.getProperty("druid.database.password");
  if (tableName.length() == 0 || !Character.isLetter(tableName.charAt(0))) {
    throw new RuntimeException("poorly formed property druid.database.segmentTable=" + tableName);
  }
  if (username == null || username.length() == 0) {
    throw new RuntimeException("poorly formed property druid.database.user=" + username);
  }
  if (password == null || password.length() == 0) {
    throw new RuntimeException("poorly formed property druid.database.password=" + password);
  }
  if (dbConnectionUrl == null || dbConnectionUrl.length() == 0) {
    throw new RuntimeException("poorly formed property druid.database.connectURI=" + dbConnectionUrl);
  }
  final DbConnectorConfig config=new DbConnectorConfig(){
{
    }
    @Override public String getDatabaseConnectURI(){
      return dbConnectionUrl;
    }
    @Override public String getDatabaseUser(){
      return username;
    }
    @Override public String getDatabasePassword(){
      return password;
    }
    @Override public String getSegmentTable(){
      return tableName;
    }
  }
;
  DbConnector dbConnector=new DbConnector(config);
  DbConnector.createSegmentTable(dbConnector.getDBI(),config);
}
