{
  List<HostAndPort> brokerList=new ArrayList<>();
  for (  String broker : brokers) {
    HostAndPort brokerHostAndPort=HostAndPort.fromString(broker);
    Preconditions.checkArgument(brokerHostAndPort.getHostText() != null && !brokerHostAndPort.getHostText().isEmpty() && brokerHostAndPort.hasPort(),"kafka broker [%s] is not valid, must be <host>:<port>",broker);
    brokerList.add(brokerHostAndPort);
  }
  this.allBrokers=Collections.unmodifiableList(brokerList);
  this.topic=topic;
  this.partitionId=partitionId;
  this.clientId=String.format("%s_%d_%s",topic,partitionId,clientId);
  this.leaderLookupClientId=clientId + "leaderLookup";
  this.replicaBrokers=new ArrayList<>();
  this.replicaBrokers.addAll(this.allBrokers);
  this.earliest=earliest;
  log.info("KafkaSimpleConsumer initialized with clientId [%s] for message consumption and clientId [%s] for leader lookup",this.clientId,this.leaderLookupClientId);
}
