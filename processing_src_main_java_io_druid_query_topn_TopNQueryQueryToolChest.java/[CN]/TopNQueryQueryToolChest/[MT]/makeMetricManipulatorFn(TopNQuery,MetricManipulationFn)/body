{
  return new Function<Result<TopNResultValue>,Result<TopNResultValue>>(){
    private String dimension=query.getDimensionSpec().getOutputName();
    @Override public Result<TopNResultValue> apply(    @Nullable Result<TopNResultValue> result){
      List<Map<String,Object>> serializedValues=Lists.newArrayList(Iterables.transform(result.getValue(),new Function<DimensionAndMetricValueExtractor,Map<String,Object>>(){
        @Override public Map<String,Object> apply(        @Nullable DimensionAndMetricValueExtractor input){
          final Map<String,Object> values=Maps.newHashMap();
          for (          AggregatorFactory agg : query.getAggregatorSpecs()) {
            values.put(agg.getName(),fn.manipulate(agg,input.getMetric(agg.getName())));
          }
          for (          PostAggregator postAgg : query.getPostAggregatorSpecs()) {
            Object calculatedPostAgg=input.getMetric(postAgg.getName());
            if (calculatedPostAgg != null) {
              values.put(postAgg.getName(),calculatedPostAgg);
            }
 else {
              values.put(postAgg.getName(),postAgg.compute(values));
            }
          }
          values.put(dimension,input.getDimensionValue(dimension));
          return values;
        }
      }
));
      return new Result<TopNResultValue>(result.getTimestamp(),new TopNResultValue(serializedValues));
    }
  }
;
}
