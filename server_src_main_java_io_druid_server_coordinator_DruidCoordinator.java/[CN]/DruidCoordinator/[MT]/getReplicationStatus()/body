{
  final Map<String,CountingMap<String>> retVal=Maps.newHashMap();
  if (segmentReplicantLookup == null) {
    return retVal;
  }
  final DateTime now=new DateTime();
  for (  DataSegment segment : getAvailableDataSegments()) {
    List<Rule> rules=databaseRuleManager.getRulesWithDefault(segment.getDataSource());
    for (    Rule rule : rules) {
      if (rule instanceof LoadRule && rule.appliesTo(segment,now)) {
        for (        Map.Entry<String,Integer> entry : ((LoadRule)rule).getTieredReplicants().entrySet()) {
          CountingMap<String> dataSourceMap=retVal.get(entry.getKey());
          if (dataSourceMap == null) {
            dataSourceMap=new CountingMap<>();
            retVal.put(entry.getKey(),dataSourceMap);
          }
          int diff=Math.max(entry.getValue() - segmentReplicantLookup.getTotalReplicants(segment.getIdentifier(),entry.getKey()),0);
          dataSourceMap.add(segment.getDataSource(),diff);
        }
        break;
      }
    }
  }
  return retVal;
}
