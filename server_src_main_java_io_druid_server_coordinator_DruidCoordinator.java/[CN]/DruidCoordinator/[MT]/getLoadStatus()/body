{
  Map<String,Double> loadStatus=Maps.newHashMap();
  for (  DruidDataSource dataSource : metadataSegmentManager.getInventory()) {
    final Set<DataSegment> segments=Sets.newHashSet(dataSource.getSegments());
    final int availableSegmentSize=segments.size();
    for (    DruidServer druidServer : serverInventoryView.getInventory()) {
      final DruidDataSource loadedView=druidServer.getDataSource(dataSource.getName());
      if (loadedView != null) {
        segments.removeAll(loadedView.getSegments());
      }
    }
    final int unloadedSegmentSize=segments.size();
    loadStatus.put(dataSource.getName(),100 * ((double)(availableSegmentSize - unloadedSegmentSize) / (double)availableSegmentSize));
  }
  return loadStatus;
}
