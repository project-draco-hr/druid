{
  MapBinder.newMapBinder(binder,String.class,SearchableVersionedDataFinder.class).addBinding(SCHEME).to(HdfsFileTimestampVersionFinder.class).in(LazySingleton.class);
  Binders.dataSegmentPullerBinder(binder).addBinding(SCHEME).to(HdfsDataSegmentPuller.class).in(LazySingleton.class);
  Binders.dataSegmentPusherBinder(binder).addBinding(SCHEME).to(HdfsDataSegmentPusher.class).in(LazySingleton.class);
  Binders.dataSegmentKillerBinder(binder).addBinding(SCHEME).to(HdfsDataSegmentKiller.class).in(LazySingleton.class);
  final Configuration conf=new Configuration();
  conf.setClassLoader(getClass().getClassLoader());
  if (props != null) {
    for (    String propName : System.getProperties().stringPropertyNames()) {
      if (propName.startsWith("hadoop.")) {
        conf.set(propName.substring("hadoop.".length()),System.getProperty(propName));
      }
    }
  }
  binder.bind(Configuration.class).toInstance(conf);
  JsonConfigProvider.bind(binder,"druid.storage",HdfsDataSegmentPusherConfig.class);
  Binders.taskLogsBinder(binder).addBinding("hdfs").to(HdfsTaskLogs.class);
  JsonConfigProvider.bind(binder,"druid.indexer.logs",HdfsTaskLogsConfig.class);
  binder.bind(HdfsTaskLogs.class).in(LazySingleton.class);
}
