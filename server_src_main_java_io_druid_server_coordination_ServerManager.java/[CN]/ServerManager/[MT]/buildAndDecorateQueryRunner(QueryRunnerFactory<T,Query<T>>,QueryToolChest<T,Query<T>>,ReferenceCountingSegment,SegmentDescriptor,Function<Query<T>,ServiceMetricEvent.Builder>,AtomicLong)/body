{
  SpecificSegmentSpec segmentSpec=new SpecificSegmentSpec(segmentDescriptor);
  return CPUTimeMetricQueryRunner.safeBuild(new SpecificSegmentQueryRunner<T>(new MetricsEmittingQueryRunner<T>(emitter,builderFn,new BySegmentQueryRunner<T>(adapter.getIdentifier(),adapter.getDataInterval().getStart(),new CachingQueryRunner<T>(adapter.getIdentifier(),segmentDescriptor,objectMapper,cache,toolChest,new MetricsEmittingQueryRunner<T>(emitter,new Function<Query<T>,ServiceMetricEvent.Builder>(){
    @Override public ServiceMetricEvent.Builder apply(    @Nullable final Query<T> input){
      return toolChest.makeMetricBuilder(input);
    }
  }
,new ReferenceCountingSegmentQueryRunner<T>(factory,adapter),"query/segment/time",ImmutableMap.of("segment",adapter.getIdentifier())),cachingExec,cacheConfig)),"query/segmentAndCache/time",ImmutableMap.of("segment",adapter.getIdentifier())).withWaitMeasuredFromNow(),segmentSpec),builderFn,emitter,cpuTimeAccumulator,false);
}
