{
  final Map<String,String> stringMap=new HashMap<>();
  stringMap.put("1","Monday");
  stringMap.put("2","Tuesday");
  stringMap.put("3","Wednesday");
  stringMap.put("4","Thursday");
  stringMap.put("5","Friday");
  stringMap.put("6","Saturday");
  LookupExtractor mapExtractor=new MapLookupExtractor(stringMap,false);
  LookupExtractionFn exfn=new LookupExtractionFn(mapExtractor,false,"UNKNOWN",false,true);
  assertFilterMatches(new SelectorDimFilter(COUNT_COLUMN,"Monday",exfn),ImmutableList.<String>of("1"));
  assertFilterMatches(new SelectorDimFilter(COUNT_COLUMN,"Notaday",exfn),ImmutableList.<String>of());
  assertFilterMatches(new BoundDimFilter(COUNT_COLUMN,"Fridax","Fridaz",false,false,true,exfn),ImmutableList.<String>of("5"));
  assertFilterMatches(new BoundDimFilter(COUNT_COLUMN,"Friday","Friday",true,true,true,exfn),ImmutableList.<String>of());
  assertFilterMatches(new InDimFilter(COUNT_COLUMN,Arrays.asList("Caturday","Saturday","Tuesday"),exfn),ImmutableList.<String>of("2","6"));
  List<String> bigList=Arrays.asList("Saturday","Tuesday","Caturday","Xanaday","Vojuday","Gribaday","Kipoday","Dheferday","Fakeday","Qeearaday","Hello","World","1","2","3","4","5","6","7");
  assertFilterMatches(new InDimFilter(COUNT_COLUMN,bigList,exfn),ImmutableList.<String>of("2","6"));
  String jsFn="function(x) { return(x === 'Wednesday' || x === 'Thursday') }";
  assertFilterMatches(new JavaScriptDimFilter(COUNT_COLUMN,jsFn,exfn,JavaScriptConfig.getDefault()),ImmutableList.<String>of("3","4"));
  assertFilterMatches(new RegexDimFilter(COUNT_COLUMN,".*day",exfn),ImmutableList.<String>of("1","2","3","4","5","6"));
  assertFilterMatches(new SearchQueryDimFilter(COUNT_COLUMN,new ContainsSearchQuerySpec("s",true),exfn),ImmutableList.<String>of("2","3","4"));
}
