{
  for (  FireDepartment fireDepartment : fireDepartments) {
    FireDepartmentMetrics metrics=fireDepartment.getMetrics().snapshot();
    FireDepartmentMetrics previous=previousValues.get(fireDepartment);
    if (previous == null) {
      previous=new FireDepartmentMetrics();
    }
    final ServiceMetricEvent.Builder builder=new ServiceMetricEvent.Builder().setUser2(fireDepartment.getDataSchema().getDataSource());
    final long thrownAway=metrics.thrownAway() - previous.thrownAway();
    if (thrownAway > 0) {
      log.warn("[%,d] events thrown away because they are outside the window period!",thrownAway);
    }
    emitter.emit(builder.build("events/thrownAway",thrownAway));
    final long unparseable=metrics.unparseable() - previous.unparseable();
    if (unparseable > 0) {
      log.error("[%,d] Unparseable events! Turn on debug logging to see exception stack trace.",unparseable);
    }
    emitter.emit(builder.build("events/unparseable",unparseable));
    emitter.emit(builder.build("events/processed",metrics.processed() - previous.processed()));
    emitter.emit(builder.build("rows/output",metrics.rowOutput() - previous.rowOutput()));
    emitter.emit(builder.build("persists/num",metrics.numPersists() - previous.numPersists()));
    emitter.emit(builder.build("persists/time",metrics.persistTimeMillis() - previous.persistTimeMillis()));
    emitter.emit(builder.build("persists/backPressure",metrics.persistBackPressureMillis() - previous.persistBackPressureMillis()));
    previousValues.put(fireDepartment,metrics);
  }
  return true;
}
