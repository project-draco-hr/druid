{
  final Interval interval1=new Interval("2010-01-01T00/PT1H");
  final Interval interval2=new Interval("2010-01-01T01/PT1H");
  final TaskLock lock1=toolbox.getTaskActionClient().submit(new LockAcquireAction(interval1));
  final List<TaskLock> locks1=toolbox.getTaskActionClient().submit(new LockListAction());
  Assert.assertEquals("lock1 interval",interval1,lock1.getInterval());
  Assert.assertEquals("locks1",ImmutableList.of(lock1),locks1);
  final TaskLock lock2=toolbox.getTaskActionClient().submit(new LockAcquireAction(interval2));
  final List<TaskLock> locks2=toolbox.getTaskActionClient().submit(new LockListAction());
  Assert.assertEquals("lock2 interval",interval2,lock2.getInterval());
  Assert.assertEquals("locks2",ImmutableList.of(lock1,lock2),locks2);
  toolbox.getTaskActionClient().submit(new SegmentInsertAction(ImmutableSet.of(DataSegment.builder().dataSource("foo").interval(interval1).version(lock1.getVersion()).build())));
  toolbox.getTaskActionClient().submit(new LockReleaseAction(interval1));
  final List<TaskLock> locks3=toolbox.getTaskActionClient().submit(new LockListAction());
  Assert.assertEquals("locks3",ImmutableList.of(lock2),locks3);
  toolbox.getTaskActionClient().submit(new SegmentInsertAction(ImmutableSet.of(DataSegment.builder().dataSource("foo").interval(interval2).version(lock2.getVersion()).build())));
  toolbox.getTaskActionClient().submit(new LockReleaseAction(interval2));
  final List<TaskLock> locks4=toolbox.getTaskActionClient().submit(new LockListAction());
  Assert.assertEquals("locks4",ImmutableList.<TaskLock>of(),locks4);
  return TaskStatus.success(getId());
}
