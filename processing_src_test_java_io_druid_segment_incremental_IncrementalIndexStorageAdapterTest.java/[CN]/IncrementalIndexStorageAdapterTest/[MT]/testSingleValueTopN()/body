{
  IncrementalIndex index=new IncrementalIndex(0,QueryGranularity.MINUTE,new AggregatorFactory[]{new CountAggregatorFactory("cnt")});
  DateTime t=DateTime.now();
  index.add(new MapBasedInputRow(t.minus(1).getMillis(),Lists.newArrayList("sally"),ImmutableMap.<String,Object>of("sally","bo")));
  TopNQueryEngine engine=new TopNQueryEngine(new StupidPool<ByteBuffer>(new Supplier<ByteBuffer>(){
    @Override public ByteBuffer get(){
      return ByteBuffer.allocate(50000);
    }
  }
));
  final Iterable<Result<TopNResultValue>> results=Sequences.toList(engine.query(new TopNQueryBuilder().dataSource("test").granularity(QueryGranularity.ALL).intervals(Lists.newArrayList(new Interval(0,new DateTime().getMillis()))).dimension("sally").metric("cnt").threshold(10).aggregators(Lists.<AggregatorFactory>newArrayList(new LongSumAggregatorFactory("cnt","cnt"))).build(),new IncrementalIndexStorageAdapter(index)),Lists.<Result<TopNResultValue>>newLinkedList());
  Assert.assertEquals(1,Iterables.size(results));
  Assert.assertEquals(1,results.iterator().next().getValue().getValue().size());
}
