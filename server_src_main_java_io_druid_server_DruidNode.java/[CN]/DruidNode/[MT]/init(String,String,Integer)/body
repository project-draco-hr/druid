{
  this.serviceName=serviceName;
  int parsedPort=-1;
  if (host != null) {
    try {
      final URI uri=new URI(null,host,null,null,null);
      if (uri.getHost() != null) {
        parsedPort=uri.getPort();
        host=uri.getHost();
      }
 else {
        throw new IllegalArgumentException();
      }
    }
 catch (    IllegalArgumentException|URISyntaxException ee) {
      try {
        final URI uri=new URI(null,host,null,null);
        host=uri.getHost();
      }
 catch (      URISyntaxException e) {
        throw new IllegalArgumentException(e);
      }
    }
    if (port != null && parsedPort != -1 && port != parsedPort) {
      throw new IAE("Conflicting host:port [%s] and port [%d] settings",host,port);
    }
  }
  if (port == null) {
    if (parsedPort == -1 && host != null) {
      port=SocketUtil.findOpenPort(8080);
    }
 else {
      port=parsedPort;
    }
  }
  this.port=port != null ? port : -1;
  this.host=host != null ? host : DEFAULT_HOST;
  try {
    new URI(null,null,this.host,this.port,null,null,null).getAuthority();
  }
 catch (  URISyntaxException e) {
    throw new IllegalArgumentException(e);
  }
}
