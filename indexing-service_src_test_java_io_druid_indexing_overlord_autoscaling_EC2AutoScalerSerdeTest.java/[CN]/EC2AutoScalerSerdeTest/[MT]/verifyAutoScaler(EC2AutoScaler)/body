{
  Assert.assertEquals(3,autoScaler.getMaxNumWorkers());
  Assert.assertEquals(2,autoScaler.getMinNumWorkers());
  Assert.assertEquals("westeros-east-1a",autoScaler.getEnvConfig().getAvailabilityZone());
  Assert.assertEquals("ami-abc",autoScaler.getEnvConfig().getNodeData().getAmiId());
  Assert.assertEquals("t1.micro",autoScaler.getEnvConfig().getNodeData().getInstanceType());
  Assert.assertEquals("iron",autoScaler.getEnvConfig().getNodeData().getKeyName());
  Assert.assertEquals(1,autoScaler.getEnvConfig().getNodeData().getMaxInstances());
  Assert.assertEquals(1,autoScaler.getEnvConfig().getNodeData().getMinInstances());
  Assert.assertEquals(Lists.newArrayList("kingsguard"),autoScaler.getEnvConfig().getNodeData().getSecurityGroupIds());
  Assert.assertEquals("redkeep",autoScaler.getEnvConfig().getNodeData().getSubnetId());
  Assert.assertEquals("foo",autoScaler.getEnvConfig().getNodeData().getIamProfile().toIamInstanceProfileSpecification().getName());
  Assert.assertEquals("bar",autoScaler.getEnvConfig().getNodeData().getIamProfile().toIamInstanceProfileSpecification().getArn());
  Assert.assertEquals("VERSION=1234\n",new String(BaseEncoding.base64().decode(autoScaler.getEnvConfig().getUserData().withVersion("1234").getUserDataBase64()),Charsets.UTF_8));
}
