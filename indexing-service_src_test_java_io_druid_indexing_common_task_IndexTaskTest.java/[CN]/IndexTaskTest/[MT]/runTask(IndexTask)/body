{
  final List<DataSegment> segments=Lists.newArrayList();
  indexTask.run(new TaskToolbox(null,null,new TaskActionClient(){
    @Override public <RetType>RetType submit(    TaskAction<RetType> taskAction) throws IOException {
      if (taskAction instanceof LockListAction) {
        return (RetType)Arrays.asList(new TaskLock("","",null,new DateTime().toString()));
      }
      return null;
    }
  }
,null,new DataSegmentPusher(){
    @Deprecated @Override public String getPathForHadoop(    String dataSource){
      return getPathForHadoop();
    }
    @Override public String getPathForHadoop(){
      return null;
    }
    @Override public DataSegment push(    File file,    DataSegment segment) throws IOException {
      segments.add(segment);
      return segment;
    }
  }
,null,null,null,null,null,null,null,null,null,null,temporaryFolder.newFolder(),indexMerger,indexIO,null,null,indexMergerV9));
  Collections.sort(segments);
  return segments;
}
