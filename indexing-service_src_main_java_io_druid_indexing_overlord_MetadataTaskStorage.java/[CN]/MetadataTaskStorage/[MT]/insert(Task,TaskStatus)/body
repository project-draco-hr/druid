{
  Preconditions.checkNotNull(task,"task");
  Preconditions.checkNotNull(status,"status");
  Preconditions.checkArgument(task.getId().equals(status.getId()),"Task/Status ID mismatch[%s/%s]",task.getId(),status.getId());
  log.info("Inserting task %s with status: %s",task.getId(),status);
  try {
    handler.insert(dbTables.getTasksTable(),task.getId(),new DateTime().toString(),task.getDataSource(),jsonMapper.writeValueAsBytes(task),status.isRunnable() ? 1 : 0,jsonMapper.writeValueAsBytes(status));
  }
 catch (  Exception e) {
    final boolean isStatementException=e instanceof StatementException || (e instanceof CallbackFailedException && e.getCause() instanceof StatementException);
    if (isStatementException && getTask(task.getId()).isPresent()) {
      throw new TaskExistsException(task.getId(),e);
    }
 else {
      throw Throwables.propagate(e);
    }
  }
}
