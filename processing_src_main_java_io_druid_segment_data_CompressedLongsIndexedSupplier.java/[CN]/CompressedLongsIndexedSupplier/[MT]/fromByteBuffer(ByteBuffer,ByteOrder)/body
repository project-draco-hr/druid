{
  byte versionFromBuffer=buffer.get();
  if (versionFromBuffer == LZF_VERSION || versionFromBuffer == version) {
    final int totalSize=buffer.getInt();
    final int sizePer=buffer.getInt();
    CompressedObjectStrategy.CompressionStrategy compression=CompressedObjectStrategy.CompressionStrategy.LZF;
    CompressionFactory.LongEncodingFormat encoding=CompressionFactory.LEGACY_LONG_ENCODING_FORMAT;
    if (versionFromBuffer == version) {
      byte compressionId=buffer.get();
      if (CompressionFactory.hasEncodingFlag(compressionId)) {
        encoding=CompressionFactory.LongEncodingFormat.forId(buffer.get());
        compressionId=CompressionFactory.clearEncodingFlag(compressionId);
      }
      compression=CompressedObjectStrategy.CompressionStrategy.forId(compressionId);
    }
    Supplier<IndexedLongs> supplier=CompressionFactory.getLongSupplier(totalSize,sizePer,buffer.asReadOnlyBuffer(),order,encoding,compression);
    return new CompressedLongsIndexedSupplier(totalSize,sizePer,buffer,supplier,compression,encoding);
  }
  throw new IAE("Unknown version[%s]",versionFromBuffer);
}
