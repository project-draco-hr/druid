{
  if (isTaskRunning(task.getId())) {
    log.warn("I can't build it. There's something in the way. Got task %s that I am already running...",task.getId());
    workerCuratorCoordinator.unannounceTask(task.getId());
    return;
  }
  log.info("Submitting runnable for task[%s]",task.getId());
  running.add(task);
  exec.submit(new Runnable(){
    @Override public void run(){
      final long startTime=System.currentTimeMillis();
      TaskStatus taskStatus;
      try {
        workerCuratorCoordinator.updateAnnouncement(TaskAnnouncement.create(task,TaskStatus.running(task.getId())));
        if (taskStatusAlreadySubmitted != null) {
          log.info("Affirmative. Connecting to already-running task [%s]",task.getId());
          taskStatus=taskStatusAlreadySubmitted.get();
        }
 else {
          log.info("Affirmative. Running task [%s]",task.getId());
          workerCuratorCoordinator.unannounceTask(task.getId());
          taskStatus=taskRunner.run(task).get();
        }
      }
 catch (      InterruptedException e) {
        log.debug(e,"Interrupted while running task[%s], exiting.",task.getId());
        return;
      }
catch (      Exception e) {
        log.makeAlert(e,"I can't build there. Failed to run task").addData("task",task.getId()).emit();
        taskStatus=TaskStatus.failure(task.getId());
      }
 finally {
        running.remove(task);
      }
      taskStatus=taskStatus.withDuration(System.currentTimeMillis() - startTime);
      try {
        workerCuratorCoordinator.updateAnnouncement(TaskAnnouncement.create(task,taskStatus));
        log.info("Job's finished. Completed [%s] with status [%s]",task.getId(),taskStatus.getStatusCode());
      }
 catch (      Exception e) {
        log.makeAlert(e,"Failed to update task status").addData("task",task.getId()).emit();
      }
    }
  }
);
}
