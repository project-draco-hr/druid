{
  ServerDiscoverySelector selector=EasyMock.createMock(ServerDiscoverySelector.class);
  Server server=EasyMock.createMock(Server.class);
  EasyMock.expect(server.getHost()).andReturn("overlord:port");
  EasyMock.expect(selector.pick()).andReturn(server).anyTimes();
  HttpServletRequest request=EasyMock.createMock(HttpServletRequest.class);
  EasyMock.expect(request.getScheme()).andReturn("https").anyTimes();
  EasyMock.expect(request.getQueryString()).andReturn("param1=test&param2=test2").anyTimes();
  EasyMock.expect(request.getRequestURI()).andReturn("/druid/overlord/worker").anyTimes();
  EasyMock.replay(server,selector,request);
  URI uri=new OverlordProxyServlet(selector).rewriteURI(request);
  Assert.assertEquals("https://overlord:port/druid/overlord/worker?param1=test&param2=test2",uri.toString());
}
