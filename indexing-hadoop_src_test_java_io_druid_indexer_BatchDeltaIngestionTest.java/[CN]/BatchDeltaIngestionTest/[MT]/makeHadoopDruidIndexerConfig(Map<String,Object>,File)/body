{
  HadoopDruidIndexerConfig config=new HadoopDruidIndexerConfig(new HadoopIngestionSpec(new DataSchema("website",MAPPER.convertValue(new StringInputRowParser(new CSVParseSpec(new TimestampSpec("timestamp","yyyyMMddHH",null),new DimensionsSpec(ImmutableList.of("host"),null,null),null,ImmutableList.of("timestamp","host","host2","visited_num"))),Map.class),new AggregatorFactory[]{new LongSumAggregatorFactory("visited_sum","visited_num"),new HyperUniquesAggregatorFactory("unique_hosts","host2")},new UniformGranularitySpec(Granularity.DAY,QueryGranularity.NONE,ImmutableList.of(INTERVAL_FULL)),MAPPER),new HadoopIOConfig(inputSpec,null,tmpDir.getCanonicalPath()),new HadoopTuningConfig(tmpDir.getCanonicalPath(),null,null,null,null,null,false,false,false,false,null,false,false,false,null,null,false)));
  config.setShardSpecs(ImmutableMap.<DateTime,List<HadoopyShardSpec>>of(INTERVAL_FULL.getStart(),ImmutableList.of(new HadoopyShardSpec(new HashBasedNumberedShardSpec(0,1,HadoopDruidIndexerConfig.JSON_MAPPER),0))));
  config=HadoopDruidIndexerConfig.fromSpec(config.getSchema());
  return config;
}
