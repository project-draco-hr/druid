{
  final int size=128;
  List<URIExtractionNamespace> namespaces=new ArrayList<>(size);
  for (int i=0; i < size; ++i) {
    URIExtractionNamespace namespace=new URIExtractionNamespace(String.format("%d-ns-%d",i << 10,i),tmpFile.toURI(),new URIExtractionNamespace.ObjectMapperFlatDataParser(URIExtractionNamespaceTest.registerTypes(new ObjectMapper())),new Period(0),Pattern.quote(tmpFile.getName()));
    namespaces.add(namespace);
    Assert.assertNull(fnCache.get(namespace.getNamespace()));
    NamespaceExtractionCacheManagersTest.waitFor(manager.schedule(namespace));
  }
  for (int i=0; i < size; ++i) {
    URIExtractionNamespace namespace=namespaces.get(i);
    Function<String,String> fn=fnCache.get(namespace.getNamespace());
    while (fn == null) {
      Thread.sleep(1);
      fn=fnCache.get(namespace.getNamespace());
    }
    Assert.assertEquals("bar",fn.apply("foo"));
    Assert.assertEquals(null,fn.apply("baz"));
    manager.delete(namespace.getNamespace());
    Assert.assertNull(fnCache.get(namespace.getNamespace()));
  }
}
