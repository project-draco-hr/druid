{
  List<ImmutableMap<String,Object>> expectedRows=ImmutableList.of(ImmutableMap.<String,Object>of("time",DateTime.parse("2014-10-22T00:00:00.000Z"),"host",ImmutableList.of("a.example.com"),"visited_sum",100L,"unique_hosts",1.0d),ImmutableMap.<String,Object>of("time",DateTime.parse("2014-10-22T01:00:00.000Z"),"host",ImmutableList.of("b.example.com"),"visited_sum",150L,"unique_hosts",1.0d),ImmutableMap.<String,Object>of("time",DateTime.parse("2014-10-22T02:00:00.000Z"),"host",ImmutableList.of("c.example.com"),"visited_sum",200L,"unique_hosts",1.0d));
  Assert.assertEquals(expectedRows.size(),actualRows.size());
  for (int i=0; i < expectedRows.size(); i++) {
    Map<String,Object> expected=expectedRows.get(i);
    InputRow actual=actualRows.get(i);
    Assert.assertEquals(ImmutableList.of("host"),actual.getDimensions());
    Assert.assertEquals(expected.get("time"),actual.getTimestamp());
    Assert.assertEquals(expected.get("host"),actual.getDimension("host"));
    Assert.assertEquals(expected.get("visited_sum"),actual.getLongMetric("visited_sum"));
    Assert.assertEquals((Double)expected.get("unique_hosts"),(Double)HyperUniquesAggregatorFactory.estimateCardinality(actual.getRaw("unique_hosts")),0.001);
  }
}
