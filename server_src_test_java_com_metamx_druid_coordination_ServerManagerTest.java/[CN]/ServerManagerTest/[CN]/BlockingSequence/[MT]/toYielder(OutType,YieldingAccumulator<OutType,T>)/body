{
  notifyLatch.countDown();
  try {
    waitYieldLatch.await();
  }
 catch (  Exception e) {
    throw Throwables.propagate(e);
  }
  final Yielder<OutType> baseYielder=baseSequence.toYielder(initValue,accumulator);
  return new Yielder<OutType>(){
    @Override public OutType get(){
      try {
        waitLatch.await();
      }
 catch (      Exception e) {
        throw Throwables.propagate(e);
      }
      return baseYielder.get();
    }
    @Override public Yielder<OutType> next(    OutType initValue){
      return baseYielder.next(initValue);
    }
    @Override public boolean isDone(){
      return baseYielder.isDone();
    }
    @Override public void close() throws IOException {
      baseYielder.close();
    }
  }
;
}
