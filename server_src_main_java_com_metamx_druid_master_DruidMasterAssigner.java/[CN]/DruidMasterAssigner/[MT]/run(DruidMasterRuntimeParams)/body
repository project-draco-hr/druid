{
  int unassignedCount=0;
  long unassignedSize=0;
  CountingMap<String> assignedCounts=new CountingMap<String>();
  DruidCluster cluster=params.getDruidCluster();
  if (cluster.isEmpty()) {
    log.warn("Uh... I have no servers. Not assigning anything...");
    return params;
  }
  for (  DataSegment segment : params.getAvailableSegments()) {
    Rule rule=params.getSegmentRuleLookup().lookup(segment.getIdentifier());
    AssignStat stat=rule.runAssign(params,segment);
    unassignedCount+=stat.getUnassignedCount();
    unassignedSize+=stat.getUnassignedSize();
    if (stat.getAssignedCount() != null) {
      assignedCounts.add(stat.getAssignedCount().lhs,stat.getAssignedCount().rhs);
    }
  }
  master.decrementRemovedSegmentsLifetime();
  List<String> assignmentMsgs=Lists.newArrayList();
  for (  Map.Entry<String,AtomicLong> entry : assignedCounts.entrySet()) {
    if (cluster.get(entry.getKey()) != null) {
      assignmentMsgs.add(String.format("[%s] : Assigned %s segments among %,d servers",entry.getKey(),assignedCounts.get(entry.getKey()),cluster.get(entry.getKey()).size()));
    }
  }
  return params.buildFromExisting().withMessages(assignmentMsgs).withAssignedCount(assignedCounts).withUnassignedCount(unassignedCount).withUnassignedSize(unassignedSize).build();
}
