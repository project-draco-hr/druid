{
  final MutableBoolean committed=new MutableBoolean(false);
  plumber.getSinks().put(0L,new Sink(new Interval(0,TimeUnit.HOURS.toMillis(1)),schema,tuningConfig,DateTime.now().toString()));
  plumber.startJob();
  final InputRow row=EasyMock.createNiceMock(InputRow.class);
  EasyMock.expect(row.getTimestampFromEpoch()).andReturn(0L);
  EasyMock.expect(row.getDimensions()).andReturn(new ArrayList<String>());
  EasyMock.replay(row);
  plumber.add(row);
  plumber.persist(new Runnable(){
    @Override public void run(){
      committed.setValue(true);
    }
  }
);
  Stopwatch stopwatch=Stopwatch.createStarted();
  while (!committed.booleanValue()) {
    Thread.sleep(100);
    if (stopwatch.elapsed(TimeUnit.MILLISECONDS) > 1000) {
      throw new ISE("Taking too long to set perist value");
    }
  }
  plumber.getSinks().clear();
  plumber.finishJob();
}
