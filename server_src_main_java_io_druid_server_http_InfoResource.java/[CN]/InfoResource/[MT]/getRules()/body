{
  return Response.ok().entity(Maps.transformValues(metadataRuleManager.getAllRules(),new Function<List<Rule>,Object>(){
    @Override public Object apply(    List<Rule> rules){
      return Lists.transform(rules,new Function<Rule,Object>(){
        @Override public Object apply(        Rule rule){
          if (rule instanceof LoadRule) {
            Map<String,Object> newRule=jsonMapper.convertValue(rule,new TypeReference<Map<String,Object>>(){
            }
);
            Set<String> tiers=Sets.newHashSet(((LoadRule)rule).getTieredReplicants().keySet());
            tiers.remove(DruidServer.DEFAULT_TIER);
            String tier=DruidServer.DEFAULT_TIER;
            if (!tiers.isEmpty()) {
              tier=tiers.iterator().next();
            }
            newRule.put("tier",tier);
            newRule.put("replicants",((LoadRule)rule).getNumReplicants(tier));
            return newRule;
          }
          return rule;
        }
      }
);
    }
  }
)).build();
}
