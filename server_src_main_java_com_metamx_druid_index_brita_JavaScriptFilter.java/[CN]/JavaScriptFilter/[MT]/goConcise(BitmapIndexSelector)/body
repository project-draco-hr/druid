{
  final Context cx=Context.enter();
  try {
    ImmutableConciseSet conciseSet=ImmutableConciseSet.union(FunctionalIterable.create(selector.getDimensionValues(dimension)).filter(new Predicate<String>(){
      @Override public boolean apply(      @Nullable String input){
        return predicate.applyInContext(cx,input);
      }
    }
).transform(new com.google.common.base.Function<String,ImmutableConciseSet>(){
      @Override public ImmutableConciseSet apply(      @Nullable String input){
        return selector.getConciseInvertedIndex(dimension,input);
      }
    }
));
    return conciseSet;
  }
  finally {
    Context.exit();
  }
}
