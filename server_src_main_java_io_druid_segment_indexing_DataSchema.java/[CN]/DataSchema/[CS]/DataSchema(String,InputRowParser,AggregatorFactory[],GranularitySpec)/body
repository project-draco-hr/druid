{
  this.dataSource=dataSource;
  final Set<String> dimensionExclusions=Sets.newHashSet();
  for (  AggregatorFactory aggregator : aggregators) {
    dimensionExclusions.addAll(aggregator.requiredFields());
  }
  if (parser != null && parser.getParseSpec() != null) {
    final DimensionsSpec dimensionsSpec=parser.getParseSpec().getDimensionsSpec();
    final TimestampSpec timestampSpec=parser.getParseSpec().getTimestampSpec();
    if (timestampSpec != null) {
      final String timestampColumn=timestampSpec.getTimestampColumn();
      if (!(dimensionsSpec.hasCustomDimensions() && dimensionsSpec.getDimensions().contains(timestampColumn))) {
        dimensionExclusions.add(timestampColumn);
      }
    }
    if (dimensionsSpec != null) {
      this.parser=parser.withParseSpec(parser.getParseSpec().withDimensionsSpec(dimensionsSpec.withDimensionExclusions(Sets.difference(dimensionExclusions,Sets.newHashSet(dimensionsSpec.getDimensions())))));
    }
 else {
      this.parser=parser;
    }
  }
 else {
    this.parser=parser;
  }
  this.aggregators=aggregators;
  this.granularitySpec=granularitySpec == null ? new UniformGranularitySpec(null,null,null,null) : granularitySpec;
}
