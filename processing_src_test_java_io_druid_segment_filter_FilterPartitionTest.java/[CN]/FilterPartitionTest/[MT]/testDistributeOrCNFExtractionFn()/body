{
  DimFilter dimFilter1=new OrDimFilter(Arrays.<DimFilter>asList(new SelectorDimFilter("dim0","super-6",JS_EXTRACTION_FN),new AndDimFilter(Arrays.<DimFilter>asList(new NoBitmapSelectorDimFilter("dim1","super-def",JS_EXTRACTION_FN),new SelectorDimFilter("dim2","super-c",JS_EXTRACTION_FN)))));
  Filter filter1=dimFilter1.toFilter();
  Filter filter1CNF=Filters.convertToCNF(filter1);
  Assert.assertEquals(AndFilter.class,filter1CNF.getClass());
  Assert.assertEquals(2,((AndFilter)filter1CNF).getFilters().size());
  assertFilterMatches(dimFilter1,ImmutableList.of("4","6"));
  assertFilterMatchesCNF(dimFilter1,ImmutableList.of("4","6"));
  DimFilter dimFilter2=new OrDimFilter(Arrays.<DimFilter>asList(new SelectorDimFilter("dim0","super-2",JS_EXTRACTION_FN),new SelectorDimFilter("dim0","super-3",JS_EXTRACTION_FN),new AndDimFilter(Arrays.<DimFilter>asList(new NoBitmapSelectorDimFilter("dim1","super-HELLO",JS_EXTRACTION_FN),new SelectorDimFilter("dim2","super-foo",JS_EXTRACTION_FN)))));
  assertFilterMatches(dimFilter2,ImmutableList.of("2","3","7"));
  assertFilterMatchesCNF(dimFilter2,ImmutableList.of("2","3","7"));
  DimFilter dimFilter3=new OrDimFilter(Arrays.<DimFilter>asList(dimFilter1,dimFilter2,new AndDimFilter(Arrays.<DimFilter>asList(new NoBitmapSelectorDimFilter("dim1","super-1",JS_EXTRACTION_FN),new SelectorDimFilter("dim2","super-foo",JS_EXTRACTION_FN)))));
  Filter filter3=dimFilter3.toFilter();
  Filter filter3CNF=Filters.convertToCNF(dimFilter3.toFilter());
  assertFilterMatches(dimFilter3,ImmutableList.of("2","3","4","6","7","9"));
  assertFilterMatchesCNF(dimFilter3,ImmutableList.of("2","3","4","6","7","9"));
}
