{
  assertFilterMatches(new AndDimFilter(Arrays.<DimFilter>asList(new SelectorDimFilter("dim2","a",null),new NoBitmapSelectorDimFilter("dim1",null,null))),ImmutableList.of("0"));
  assertFilterMatches(new AndDimFilter(Arrays.<DimFilter>asList(new SelectorDimFilter("dim1","10",null),new NoBitmapSelectorDimFilter("dim2",null,null))),ImmutableList.of("1"));
  assertFilterMatches(new AndDimFilter(Arrays.<DimFilter>asList(new SelectorDimFilter("dim1","1",null),new NoBitmapSelectorDimFilter("dim2","foo",null))),ImmutableList.of("9"));
  assertFilterMatches(new AndDimFilter(Arrays.<DimFilter>asList(new SelectorDimFilter("dim1","HELLO",null),new NoBitmapSelectorDimFilter("dim2","bar",null))),ImmutableList.<String>of());
  assertFilterMatches(new AndDimFilter(Arrays.<DimFilter>asList(new NoBitmapSelectorDimFilter("dim2","bar",null),new SelectorDimFilter("dim1","NOT_A_VALUE",null))),ImmutableList.<String>of());
  assertFilterMatches(new AndDimFilter(Arrays.<DimFilter>asList(new SelectorDimFilter("dim2","super-a",JS_EXTRACTION_FN),new NoBitmapSelectorDimFilter("dim1","super-null",JS_EXTRACTION_FN))),ImmutableList.of("0"));
  assertFilterMatches(new AndDimFilter(Arrays.<DimFilter>asList(new SelectorDimFilter("dim1","super-10",JS_EXTRACTION_FN),new NoBitmapSelectorDimFilter("dim2","super-null",JS_EXTRACTION_FN))),ImmutableList.of("1"));
  assertFilterMatches(new AndDimFilter(Arrays.<DimFilter>asList(new SelectorDimFilter("dim1","super-2",JS_EXTRACTION_FN),new NoBitmapSelectorDimFilter("dim2","super-null",JS_EXTRACTION_FN))),ImmutableList.of("2"));
  assertFilterMatches(new AndDimFilter(Arrays.<DimFilter>asList(new SelectorDimFilter("dim1","super-1",JS_EXTRACTION_FN),new NoBitmapSelectorDimFilter("dim2","super-foo",JS_EXTRACTION_FN))),ImmutableList.of("9"));
  assertFilterMatches(new AndDimFilter(Arrays.<DimFilter>asList(new SelectorDimFilter("dim1","super-HELLO",JS_EXTRACTION_FN),new NoBitmapSelectorDimFilter("dim2","super-bar",JS_EXTRACTION_FN))),ImmutableList.<String>of());
}
