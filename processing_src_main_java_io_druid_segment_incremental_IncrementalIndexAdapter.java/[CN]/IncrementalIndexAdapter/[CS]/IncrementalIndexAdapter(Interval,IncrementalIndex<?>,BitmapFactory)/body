{
  this.dataInterval=dataInterval;
  this.index=index;
  final List<IncrementalIndex.DimensionDesc> dimensions=index.getDimensions();
  accessors=Maps.newHashMapWithExpectedSize(dimensions.size());
  for (  IncrementalIndex.DimensionDesc dimension : dimensions) {
    accessors.put(dimension.getName(),new DimensionAccessor(dimension));
  }
  int rowNum=0;
  for (  IncrementalIndex.TimeAndDims timeAndDims : index.getFacts().keySet()) {
    final Object[] dims=timeAndDims.getDims();
    for (    IncrementalIndex.DimensionDesc dimension : dimensions) {
      final int dimIndex=dimension.getIndex();
      DimensionAccessor accessor=accessors.get(dimension.getName());
      if (dimIndex >= dims.length || dims[dimIndex] == null) {
        accessor.indexer.processRowValsToUnsortedEncodedArray(null);
        continue;
      }
      final ColumnCapabilities capabilities=dimension.getCapabilities();
      if (capabilities.hasBitmapIndexes()) {
        final MutableBitmap[] bitmapIndexes=accessor.invertedIndexes;
        final DimensionIndexer indexer=accessor.indexer;
        indexer.fillBitmapsFromUnsortedEncodedArray(dims[dimIndex],rowNum,bitmapIndexes,bitmapFactory);
      }
    }
    ++rowNum;
  }
}
