{
  final TaskLock myLock=Iterables.getOnlyElement(toolbox.getTaskActionClient().submit(new LockListAction(this)));
  if (!myLock.getDataSource().equals(getDataSource())) {
    throw new ISE("WTF?! Lock dataSource[%s] != task dataSource[%s]",myLock.getDataSource(),getDataSource());
  }
  if (!myLock.getInterval().equals(getFixedInterval().get())) {
    throw new ISE("WTF?! Lock interval[%s] != task interval[%s]",myLock.getInterval(),getFixedInterval().get());
  }
  final List<DataSegment> unusedSegments=toolbox.getTaskActionClient().submit(new SegmentListUnusedAction(this,myLock.getDataSource(),myLock.getInterval()));
  for (  final DataSegment unusedSegment : unusedSegments) {
    if (unusedSegment.getVersion().compareTo(myLock.getVersion()) > 0) {
      throw new ISE("WTF?! Unused segment[%s] has version[%s] > task version[%s]",unusedSegment.getIdentifier(),unusedSegment.getVersion(),myLock.getVersion());
    }
    log.info("OK to kill segment: %s",unusedSegment.getIdentifier());
  }
  toolbox.getSegmentKiller().kill(unusedSegments);
  toolbox.getTaskActionClient().submit(new SegmentNukeAction(this,ImmutableSet.copyOf(unusedSegments)));
  return TaskStatus.success(getId());
}
