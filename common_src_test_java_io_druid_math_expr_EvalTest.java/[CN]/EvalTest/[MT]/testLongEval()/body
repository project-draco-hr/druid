{
  Map<String,Number> bindings=new HashMap<>();
  bindings.put("x",9223372036854775807l);
  Assert.assertEquals(9223372036854775807l,Parser.parse("x").eval(bindings).longValue());
  Assert.assertFalse(Parser.parse("9223372036854775807 and 0").eval(bindings).longValue() > 0);
  Assert.assertTrue(Parser.parse("9223372036854775807 and 9223372036854775806").eval(bindings).longValue() > 0);
  Assert.assertTrue(Parser.parse("9223372036854775807 or 0").eval(bindings).longValue() > 0);
  Assert.assertFalse(Parser.parse("-9223372036854775807 or -9223372036854775807").eval(bindings).longValue() > 0);
  Assert.assertTrue(Parser.parse("-9223372036854775807 or 9223372036854775807").eval(bindings).longValue() > 0);
  Assert.assertFalse(Parser.parse("0 or 0").eval(bindings).longValue() > 0);
  Assert.assertTrue(Parser.parse("9223372036854775807 > 9223372036854775806").eval(bindings).longValue() > 0);
  Assert.assertTrue(Parser.parse("9223372036854775807 >= 9223372036854775807").eval(bindings).longValue() > 0);
  Assert.assertTrue(Parser.parse("9223372036854775806 < 9223372036854775807").eval(bindings).longValue() > 0);
  Assert.assertTrue(Parser.parse("9223372036854775807 <= 9223372036854775807").eval(bindings).longValue() > 0);
  Assert.assertTrue(Parser.parse("9223372036854775807 == 9223372036854775807").eval(bindings).longValue() > 0);
  Assert.assertTrue(Parser.parse("9223372036854775807 != 9223372036854775806").eval(bindings).longValue() > 0);
  Assert.assertEquals(9223372036854775807l,Parser.parse("9223372036854775806 + 1").eval(bindings).longValue());
  Assert.assertEquals(9223372036854775806l,Parser.parse("9223372036854775807 - 1").eval(bindings).longValue());
  Assert.assertEquals(9223372036854775806l,Parser.parse("4611686018427387903 * 2").eval(bindings).longValue());
  Assert.assertEquals(4611686018427387903l,Parser.parse("9223372036854775806 / 2").eval(bindings).longValue());
  Assert.assertEquals(7,Parser.parse("9223372036854775807 % 9223372036854775800").eval(bindings).longValue());
  Assert.assertEquals(9223372030926249001l,Parser.parse("3037000499 ^ 2").eval(bindings).longValue());
  Assert.assertEquals(-9223372036854775807l,Parser.parse("-9223372036854775807").eval(bindings).longValue());
  Assert.assertTrue(Parser.parse("!-9223372036854775807").eval(bindings).longValue() > 0);
  Assert.assertTrue(Parser.parse("!0").eval(bindings).longValue() > 0);
  Assert.assertFalse(Parser.parse("!9223372036854775807").eval(bindings).longValue() > 0);
  Assert.assertEquals(3037000499l,Parser.parse("sqrt(9223372036854775807)").eval(bindings).longValue());
  Assert.assertEquals(9223372036854775807l,Parser.parse("if(9223372036854775807, 9223372036854775807, 9223372036854775806)").eval(bindings).longValue());
  Assert.assertEquals(9223372036854775806l,Parser.parse("if(0, 9223372036854775807, 9223372036854775806)").eval(bindings).longValue());
}
