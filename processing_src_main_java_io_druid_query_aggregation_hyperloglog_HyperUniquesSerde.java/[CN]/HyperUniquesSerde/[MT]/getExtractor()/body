{
  return new ComplexMetricExtractor(){
    @Override public Class<HyperLogLogCollector> extractedClass(){
      return HyperLogLogCollector.class;
    }
    @Override public HyperLogLogCollector extractValue(    InputRow inputRow,    String metricName){
      HyperLogLogCollector collector=HyperLogLogCollector.makeLatestCollector();
      List<String> dimValues=inputRow.getDimension(metricName);
      if (dimValues == null) {
        return collector;
      }
      for (      String dimensionValue : dimValues) {
        collector.add(hashFn.hashBytes(dimensionValue.getBytes(Charsets.UTF_8)).asBytes());
      }
      return collector;
    }
  }
;
}
