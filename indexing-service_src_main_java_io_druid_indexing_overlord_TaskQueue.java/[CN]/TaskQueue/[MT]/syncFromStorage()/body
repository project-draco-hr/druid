{
  giant.lock();
  try {
    if (active) {
      final Map<String,Task> newTasks=toTaskIDMap(taskStorage.getActiveTasks());
      final int tasksSynced=newTasks.size();
      final Map<String,Task> oldTasks=toTaskIDMap(tasks);
      Set<String> commonIds=Sets.newHashSet(Sets.intersection(newTasks.keySet(),oldTasks.keySet()));
      for (      String taskID : commonIds) {
        newTasks.remove(taskID);
        oldTasks.remove(taskID);
      }
      Collection<Task> addedTasks=newTasks.values();
      Collection<Task> removedTasks=oldTasks.values();
      for (      Task task : removedTasks) {
        removeTaskInternal(task);
      }
      for (      Task task : addedTasks) {
        addTaskInternal(task);
      }
      log.info("Synced %d tasks from storage (%d tasks added, %d tasks removed).",tasksSynced,addedTasks.size(),removedTasks.size());
      managementMayBeNecessary.signalAll();
    }
 else {
      log.info("Not active. Skipping storage sync.");
    }
  }
 catch (  Exception e) {
    log.warn(e,"Failed to sync tasks from storage!");
    throw Throwables.propagate(e);
  }
 finally {
    giant.unlock();
  }
}
