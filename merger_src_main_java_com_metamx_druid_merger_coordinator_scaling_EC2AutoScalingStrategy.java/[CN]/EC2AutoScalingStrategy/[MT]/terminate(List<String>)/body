{
  DescribeInstancesResult result=amazonEC2Client.describeInstances(new DescribeInstancesRequest().withFilters(new Filter("private-ip-address",ids)));
  List<Instance> instances=Lists.newArrayList();
  for (  Reservation reservation : result.getReservations()) {
    instances.addAll(reservation.getInstances());
  }
  try {
    log.info("Terminating instance[%s]",instances);
    amazonEC2Client.terminateInstances(new TerminateInstancesRequest(Lists.transform(instances,new Function<Instance,String>(){
      @Override public String apply(      Instance input){
        return input.getInstanceId();
      }
    }
)));
    return new AutoScalingData<Instance>(Lists.transform(ids,new Function<String,String>(){
      @Override public String apply(      @Nullable String input){
        return String.format("%s:%s",input,config.getWorkerPort());
      }
    }
),instances);
  }
 catch (  Exception e) {
    log.error(e,"Unable to terminate any instances.");
  }
  return null;
}
