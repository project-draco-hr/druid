{
  final InterruptedException ex=new InterruptedException("interruption test");
  final List<URL> urls=ImmutableList.of(new URL("http://foo.bar"));
  final LookupCoordinatorManager manager=new LookupCoordinatorManager(client,discoverer,mapper,configManager,lookupCoordinatorManagerConfig){
    @Override Collection<URL> getAllHostsAnnounceEndpoint(    String tier){
      return urls;
    }
    @Override void updateAllOnHost(    final URL url,    Map<String,Map<String,Object>> knownLookups) throws IOException, InterruptedException, ExecutionException {
      throw ex;
    }
  }
;
  expectedException.expectCause(new BaseMatcher<Throwable>(){
    @Override public boolean matches(    Object o){
      if (!(o instanceof RuntimeException)) {
        return false;
      }
      final Throwable e=(Throwable)o;
      return e.getCause() == ex;
    }
    @Override public void describeTo(    Description description){
    }
  }
);
  try {
    manager.updateAllOnTier(LOOKUP_TIER,SINGLE_LOOKUP_MAP);
  }
  finally {
    Thread.interrupted();
  }
}
