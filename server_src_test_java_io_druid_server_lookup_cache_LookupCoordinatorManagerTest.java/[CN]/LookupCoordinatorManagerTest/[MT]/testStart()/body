{
  final AtomicReference<List<Map<String,Object>>> lookupRef=new AtomicReference<>(null);
  EasyMock.reset(configManager);
  EasyMock.expect(configManager.watch(EasyMock.eq(LookupCoordinatorManager.LOOKUP_CONFIG_KEY),EasyMock.<TypeReference>anyObject(),EasyMock.<AtomicReference>isNull())).andReturn(lookupRef).once();
  EasyMock.replay(configManager);
  final LookupCoordinatorManager manager=new LookupCoordinatorManager(client,discoverer,mapper,configManager,new LookupCoordinatorManagerConfig(){
    @Override public long getPeriod(){
      return 1;
    }
  }
);
  manager.start();
  manager.start();
  Assert.assertTrue(manager.backgroundManagerIsRunning());
  Assert.assertNull(manager.getKnownLookups());
  Assert.assertFalse(manager.waitForBackgroundTermination(10));
  EasyMock.verify(configManager);
}
