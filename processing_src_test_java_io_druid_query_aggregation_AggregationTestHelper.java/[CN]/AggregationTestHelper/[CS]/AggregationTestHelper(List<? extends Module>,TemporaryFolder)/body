{
  this.tempFolder=tempFoler;
  mapper=new DefaultObjectMapper();
  indexIO=TestHelper.getTestIndexIO();
  indexMerger=TestHelper.getTestIndexMerger();
  for (  Module mod : jsonModulesToRegister) {
    mapper.registerModule(mod);
  }
  Supplier<GroupByQueryConfig> configSupplier=Suppliers.ofInstance(new GroupByQueryConfig());
  StupidPool<ByteBuffer> pool=new StupidPool<>(new Supplier<ByteBuffer>(){
    @Override public ByteBuffer get(){
      return ByteBuffer.allocate(1024 * 1024);
    }
  }
);
  QueryWatcher noopQueryWatcher=new QueryWatcher(){
    @Override public void registerQuery(    Query query,    ListenableFuture future){
    }
  }
;
  GroupByQueryEngine engine=new GroupByQueryEngine(configSupplier,pool);
  toolChest=new GroupByQueryQueryToolChest(configSupplier,mapper,engine,pool,NoopIntervalChunkingQueryRunnerDecorator());
  factory=new GroupByQueryRunnerFactory(engine,noopQueryWatcher,configSupplier,toolChest,pool);
}
