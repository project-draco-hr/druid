{
  Preconditions.checkNotNull(metric,"metric can't be null");
  Preconditions.checkNotNull(aggregatorSpecs,"aggregations cannot be null");
  Preconditions.checkArgument(aggregatorSpecs.size() > 0,"Must have at least one AggregatorFactory");
  final AggregatorFactory aggregator=Iterables.tryFind(aggregatorSpecs,new Predicate<AggregatorFactory>(){
    @Override public boolean apply(    AggregatorFactory input){
      return input.getName().equals(metric);
    }
  }
).orNull();
  final PostAggregator postAggregator=Iterables.tryFind(postAggregatorSpecs,new Predicate<PostAggregator>(){
    @Override public boolean apply(    PostAggregator input){
      return input.getName().equals(metric);
    }
  }
).orNull();
  Preconditions.checkArgument(aggregator != null || postAggregator != null,"Must have an AggregatorFactory or PostAggregator for metric[%s], gave[%s] and [%s]",metric,aggregatorSpecs,postAggregatorSpecs);
}
