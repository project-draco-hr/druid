{
  final List<String> dimensions=query.getDimensions();
  final SearchQuerySpec searchQuerySpec=query.getQuery();
  final TreeSet<SearchHit> retVal=Sets.newTreeSet(searchQuerySpec.getSearchSortSpec().getComparator());
  Iterable<String> dimsToSearch;
  if (dimensions == null || dimensions.isEmpty()) {
    dimsToSearch=getAvailableDimensions();
  }
 else {
    dimsToSearch=dimensions;
  }
  Offset filterOffset=(filter == null) ? null : getFilterOffset(filter);
  for (  String dimension : dimsToSearch) {
    Iterable<String> dims=getDimValueLookup(dimension);
    if (dims != null) {
      for (      String dimVal : dims) {
        if (searchQuerySpec.accept(dimVal)) {
          if (filterOffset != null) {
            Offset lhs=new ConciseOffset(getInvertedIndex(dimension,dimVal));
            Offset rhs=filterOffset.clone();
            if (new IntersectingOffset(lhs,rhs).withinBounds()) {
              retVal.add(new SearchHit(dimension,dimVal));
            }
          }
 else {
            retVal.add(new SearchHit(dimension,dimVal));
          }
        }
      }
    }
  }
  return new FunctionalIterable<SearchHit>(retVal).limit(query.getLimit());
}
