{
  Preconditions.checkArgument(task.getId().equals(taskRunnerWorkItem.getTaskId()),"task id != workItem id");
  final Worker theWorker=theZkWorker.getWorker();
  log.info("Coordinator asking Worker[%s] to add task[%s]",theWorker.getHost(),task.getId());
  byte[] rawBytes=jsonMapper.writeValueAsBytes(task);
  if (rawBytes.length > config.getMaxZnodeBytes()) {
    throw new ISE("Length of raw bytes for task too large[%,d > %,d]",rawBytes.length,config.getMaxZnodeBytes());
  }
  String taskPath=JOINER.join(indexerZkConfig.getTasksPath(),theWorker.getHost(),task.getId());
  if (cf.checkExists().forPath(taskPath) == null) {
    cf.create().withMode(CreateMode.EPHEMERAL).forPath(taskPath,rawBytes);
  }
  RemoteTaskRunnerWorkItem workItem=pendingTasks.remove(task.getId());
  if (workItem == null) {
    log.makeAlert("WTF?! Got a null work item from pending tasks?! How can this be?!").addData("taskId",task.getId()).emit();
    return;
  }
  RemoteTaskRunnerWorkItem newWorkItem=workItem.withWorker(theWorker);
  runningTasks.put(task.getId(),newWorkItem);
  log.info("Task %s switched from pending to running (on [%s])",task.getId(),newWorkItem.getWorker().getHost());
  Stopwatch timeoutStopwatch=Stopwatch.createUnstarted();
  timeoutStopwatch.start();
synchronized (statusLock) {
    while (!isWorkerRunningTask(theWorker,task.getId())) {
      final long waitMs=config.getTaskAssignmentTimeout().toStandardDuration().getMillis();
      statusLock.wait(waitMs);
      long elapsed=timeoutStopwatch.elapsed(TimeUnit.MILLISECONDS);
      if (elapsed >= waitMs) {
        log.error("Something went wrong! [%s] never ran task [%s]! Timeout: (%s >= %s)!",theWorker.getHost(),task.getId(),elapsed,config.getTaskAssignmentTimeout());
        taskComplete(taskRunnerWorkItem,theZkWorker,TaskStatus.failure(task.getId()));
        break;
      }
    }
  }
}
