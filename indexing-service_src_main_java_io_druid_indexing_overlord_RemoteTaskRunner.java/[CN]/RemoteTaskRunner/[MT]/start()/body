{
  try {
    if (started) {
      return;
    }
    final CountDownLatch initialized=new CountDownLatch(1);
    workerPathCache.getListenable().addListener(new PathChildrenCacheListener(){
      @Override public void childEvent(      CuratorFramework client,      final PathChildrenCacheEvent event) throws Exception {
        Worker worker;
switch (event.getType()) {
case CHILD_ADDED:
          worker=jsonMapper.readValue(event.getData().getData(),Worker.class);
        addWorker(worker);
      break;
case CHILD_REMOVED:
    worker=jsonMapper.readValue(event.getData().getData(),Worker.class);
  removeWorker(worker);
break;
case INITIALIZED:
initialized.countDown();
default :
break;
}
}
}
);
workerPathCache.start(PathChildrenCache.StartMode.POST_INITIALIZED_EVENT);
initialized.await();
started=true;
}
 catch (Exception e) {
throw Throwables.propagate(e);
}
}
