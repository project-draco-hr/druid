{
  runPendingTasksExec.submit(new Callable<Void>(){
    @Override public Void call() throws Exception {
      try {
        List<RemoteTaskRunnerWorkItem> copy=Lists.newArrayList(pendingTasks.values());
        for (        RemoteTaskRunnerWorkItem taskRunnerWorkItem : copy) {
          String taskId=taskRunnerWorkItem.getTaskId();
          try {
            if (tryAssignTask(pendingTaskPayloads.get(taskId),taskRunnerWorkItem)) {
              pendingTaskPayloads.remove(taskId);
            }
          }
 catch (          Exception e) {
            log.makeAlert(e,"Exception while trying to assign task").addData("taskId",taskRunnerWorkItem.getTaskId()).emit();
            RemoteTaskRunnerWorkItem workItem=pendingTasks.remove(taskId);
            taskComplete(workItem,null,TaskStatus.failure(taskId));
          }
        }
      }
 catch (      Exception e) {
        log.makeAlert(e,"Exception in running pending tasks").emit();
      }
      return null;
    }
  }
);
}
