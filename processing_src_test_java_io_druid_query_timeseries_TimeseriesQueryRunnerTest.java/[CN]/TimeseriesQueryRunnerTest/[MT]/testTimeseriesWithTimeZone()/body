{
  TimeseriesQuery query=Druids.newTimeseriesQueryBuilder().dataSource(QueryRunnerTestHelper.dataSource).intervals("2011-03-31T00:00:00-07:00/2011-04-02T00:00:00-07:00").aggregators(Arrays.<AggregatorFactory>asList(QueryRunnerTestHelper.rowsCount,new LongSumAggregatorFactory("idx","index"))).granularity(new PeriodGranularity(new Period("P1D"),null,DateTimeZone.forID("America/Los_Angeles"))).descending(descending).build();
  List<Result<TimeseriesResultValue>> expectedResults=Arrays.asList(new Result<>(new DateTime("2011-03-31",DateTimeZone.forID("America/Los_Angeles")),new TimeseriesResultValue(ImmutableMap.<String,Object>of("rows",13L,"idx",6619L))),new Result<>(new DateTime("2011-04-01T",DateTimeZone.forID("America/Los_Angeles")),new TimeseriesResultValue(ImmutableMap.<String,Object>of("rows",13L,"idx",5827L))));
  Iterable<Result<TimeseriesResultValue>> results=Sequences.toList(runner.run(query,CONTEXT),Lists.<Result<TimeseriesResultValue>>newArrayList());
  assertExpectedResults(expectedResults,results);
}
