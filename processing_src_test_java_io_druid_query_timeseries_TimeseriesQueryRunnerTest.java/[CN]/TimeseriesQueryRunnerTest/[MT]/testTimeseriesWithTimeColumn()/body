{
  TimeseriesQuery query=Druids.newTimeseriesQueryBuilder().dataSource(QueryRunnerTestHelper.dataSource).intervals(QueryRunnerTestHelper.firstToThird).aggregators(Arrays.asList(QueryRunnerTestHelper.rowsCount,QueryRunnerTestHelper.jsCountIfTimeGreaterThan,QueryRunnerTestHelper.__timeLongSum)).granularity(QueryRunnerTestHelper.allGran).descending(descending).build();
  List<Result<TimeseriesResultValue>> expectedResults=Arrays.asList(new Result<>(new DateTime("2011-04-01"),new TimeseriesResultValue(ImmutableMap.<String,Object>of("rows",26L,"ntimestamps",13.0,"sumtime",33843139200000L))));
  Iterable<Result<TimeseriesResultValue>> actualResults=Sequences.toList(runner.run(query,CONTEXT),Lists.<Result<TimeseriesResultValue>>newArrayList());
  assertExpectedResults(expectedResults,actualResults);
}
