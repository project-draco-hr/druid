{
  return ImmutableList.<Object>of(new Module(){
    @Override public void configure(    Binder binder){
      JsonConfigProvider.bind(binder,"druid.broker",TierConfig.class);
      binder.bind(CoordinatorRuleManager.class);
      LifecycleModule.register(binder,CoordinatorRuleManager.class);
      binder.bind(QueryToolChestWarehouse.class).to(MapQueryToolChestWarehouse.class);
      binder.bind(BrokerSelector.class).in(LazySingleton.class);
      binder.bind(QuerySegmentWalker.class).to(RouterQuerySegmentWalker.class).in(LazySingleton.class);
      binder.bind(JettyServerInitializer.class).to(QueryJettyServerInitializer.class).in(LazySingleton.class);
      Jerseys.addResource(binder,QueryResource.class);
      LifecycleModule.register(binder,QueryResource.class);
      LifecycleModule.register(binder,Server.class);
      DiscoveryModule.register(binder,Self.class);
    }
    @Provides @ManageLifecycle public ServerDiscoverySelector getCoordinatorServerDiscoverySelector(    TierConfig config,    ServerDiscoveryFactory factory){
      return factory.createSelector(config.getCoordinatorServiceName());
    }
  }
);
}
