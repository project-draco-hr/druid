{
  return new CachingClusteredClient(new MapQueryToolChestWarehouse(ImmutableMap.<Class<? extends Query>,QueryToolChest>builder().put(TimeseriesQuery.class,new TimeseriesQueryQueryToolChest(new QueryConfig())).put(TopNQuery.class,new TopNQueryQueryToolChest(new TopNQueryConfig())).put(SearchQuery.class,new SearchQueryQueryToolChest(new SearchQueryConfig())).build()),new TimelineServerView(){
    @Override public void registerSegmentCallback(    Executor exec,    SegmentCallback callback){
    }
    @Override public VersionedIntervalTimeline<String,ServerSelector> getTimeline(    DataSource dataSource){
      return timeline;
    }
    @Override public <T>QueryRunner<T> getQueryRunner(    DruidServer server){
      return serverView.getQueryRunner(server);
    }
    @Override public void registerServerCallback(    Executor exec,    ServerCallback callback){
    }
  }
,cache,jsonMapper);
}
