{
  DimFilter filter=Druids.newAndDimFilterBuilder().fields(Arrays.asList(Druids.newOrDimFilterBuilder().fields(Arrays.asList(new SelectorDimFilter("dim0","1",null),new BoundDimFilter("dim0","222","333",false,false,false,null))).build(),Druids.newAndDimFilterBuilder().fields(Arrays.asList(new InDimFilter("dim1",Arrays.asList("0","1","2","3","4"),null),new BoundDimFilter("dim1","0","3",false,true,false,null),new BoundDimFilter("dim1","1","9999",true,false,false,null))).build())).build();
  final Druids.TimeseriesQueryBuilder builder=Druids.newTimeseriesQueryBuilder().dataSource(DATA_SOURCE).intervals(SEG_SPEC).filters(filter).granularity(GRANULARITY).aggregators(AGGS).postAggregators(POST_AGGS).context(CONTEXT);
  QueryRunner runner=new FinalizeResultsQueryRunner(client,new TimeseriesQueryQueryToolChest(QueryRunnerTestHelper.NoopIntervalChunkingQueryRunnerDecorator()));
  List<Iterable<Result<TimeseriesResultValue>>> expectedResult=Arrays.asList(makeTimeResults(new DateTime("2011-01-01"),50,5000,new DateTime("2011-01-02"),10,1252,new DateTime("2011-01-03"),20,6213,new DateTime("2011-01-04"),30,743),makeTimeResults(new DateTime("2011-01-07"),60,6020,new DateTime("2011-01-08"),70,250));
  testQueryCachingWithFilter(runner,3,builder.build(),expectedResult,new Interval("2011-01-01/2011-01-05"),makeTimeResults(new DateTime("2011-01-01"),50,5000),new Interval("2011-01-01/2011-01-05"),makeTimeResults(new DateTime("2011-01-02"),10,1252),new Interval("2011-01-01/2011-01-05"),makeTimeResults(new DateTime("2011-01-03"),20,6213),new Interval("2011-01-01/2011-01-05"),makeTimeResults(new DateTime("2011-01-04"),30,743),new Interval("2011-01-01/2011-01-05"),makeTimeResults(new DateTime("2011-01-05"),40,6000),new Interval("2011-01-06/2011-01-10"),makeTimeResults(new DateTime("2011-01-06"),50,425),new Interval("2011-01-06/2011-01-10"),makeTimeResults(new DateTime("2011-01-07"),60,6020),new Interval("2011-01-06/2011-01-10"),makeTimeResults(new DateTime("2011-01-08"),70,250),new Interval("2011-01-06/2011-01-10"),makeTimeResults(new DateTime("2011-01-09"),23,85312),new Interval("2011-01-06/2011-01-10"),makeTimeResults(new DateTime("2011-01-10"),100,512));
}
