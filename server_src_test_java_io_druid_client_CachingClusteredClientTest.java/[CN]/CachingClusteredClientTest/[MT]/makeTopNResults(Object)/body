{
  List<Result<TopNResultValue>> retVal=Lists.newArrayList();
  int index=0;
  while (index < objects.length) {
    DateTime timestamp=(DateTime)objects[index++];
    List<Map<String,Object>> values=Lists.newArrayList();
    while (index < objects.length && !(objects[index] instanceof DateTime)) {
      if (objects.length - index < 3) {
        throw new ISE("expect 3 values for each entry in the top list, had %d values left.",objects.length - index);
      }
      final double imps=((Number)objects[index + 2]).doubleValue();
      final double rows=((Number)objects[index + 1]).doubleValue();
      values.add(ImmutableMap.<String,Object>builder().put(TOP_DIM,objects[index]).put("rows",rows).put("imps",imps).put("impers",imps).put("avg_imps_per_row",imps / rows).put("avg_imps_per_row_double",((imps * 2) / rows)).put("avg_imps_per_row_half",(imps / (rows * 2))).build());
      index+=3;
    }
    retVal.add(new Result<>(timestamp,new TopNResultValue(values)));
  }
  return retVal;
}
