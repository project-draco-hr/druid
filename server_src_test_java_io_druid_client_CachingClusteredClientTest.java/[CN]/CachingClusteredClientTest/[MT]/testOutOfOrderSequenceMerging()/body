{
  List<Sequence<Result<TopNResultValue>>> sequences=ImmutableList.of(Sequences.simple(makeTopNResults(new DateTime("2011-01-07"),"a",50,4991,"b",50,4990,"c",50,4989,new DateTime("2011-01-08"),"a",50,4988,"b",50,4987,"c",50,4986,new DateTime("2011-01-09"),"a",50,4985,"b",50,4984,"c",50,4983)),Sequences.simple(makeTopNResults(new DateTime("2011-01-06T01"),"a",50,4991,"b",50,4990,"c",50,4989,new DateTime("2011-01-07T01"),"a",50,4991,"b",50,4990,"c",50,4989,new DateTime("2011-01-08T01"),"a",50,4988,"b",50,4987,"c",50,4986,new DateTime("2011-01-09T01"),"a",50,4985,"b",50,4984,"c",50,4983)));
  TestHelper.assertExpectedResults(makeTopNResults(new DateTime("2011-01-06T01"),"a",50,4991,"b",50,4990,"c",50,4989,new DateTime("2011-01-07"),"a",50,4991,"b",50,4990,"c",50,4989,new DateTime("2011-01-07T01"),"a",50,4991,"b",50,4990,"c",50,4989,new DateTime("2011-01-08"),"a",50,4988,"b",50,4987,"c",50,4986,new DateTime("2011-01-08T01"),"a",50,4988,"b",50,4987,"c",50,4986,new DateTime("2011-01-09"),"a",50,4985,"b",50,4984,"c",50,4983,new DateTime("2011-01-09T01"),"a",50,4985,"b",50,4984,"c",50,4983),client.mergeCachedAndUncachedSequences(new TopNQueryBuilder().dataSource("test").intervals("2011-01-06/2011-01-10").dimension("a").metric("b").threshold(3).aggregators(Arrays.<AggregatorFactory>asList(new CountAggregatorFactory("b"))).build(),sequences));
}
