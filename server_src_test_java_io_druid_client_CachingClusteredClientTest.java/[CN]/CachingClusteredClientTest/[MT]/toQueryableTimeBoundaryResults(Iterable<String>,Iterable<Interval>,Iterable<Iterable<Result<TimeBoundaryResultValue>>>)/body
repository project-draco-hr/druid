{
  return Sequences.simple(FunctionalIterable.create(segmentIds).trinaryTransform(intervals,results,new TrinaryFn<String,Interval,Iterable<Result<TimeBoundaryResultValue>>,Result<TimeBoundaryResultValue>>(){
    @Override @SuppressWarnings("unchecked") public Result<TimeBoundaryResultValue> apply(    final String segmentId,    final Interval interval,    final Iterable<Result<TimeBoundaryResultValue>> results){
      return new Result(results.iterator().next().getTimestamp(),new BySegmentResultValueClass(Lists.newArrayList(results),segmentId,interval));
    }
  }
));
}
