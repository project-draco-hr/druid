{
  if (args.length % 2 != 0) {
    throw new ISE("args.length must be divisible by two, was %d",args.length);
  }
  for (int i=0; i < args.length; i+=2) {
    final Interval interval=(Interval)args[i];
    final Iterable<Result<Object>> results=(Iterable<Result<Object>>)args[i + 1];
    if (queryIntervals.size() > 0 && interval.equals(queryIntervals.get(queryIntervals.size() - 1))) {
      expectedResults.get(expectedResults.size() - 1).add(results);
    }
 else {
      queryIntervals.add(interval);
      expectedResults.add(Lists.<Iterable<Result<Object>>>newArrayList(results));
    }
  }
}
