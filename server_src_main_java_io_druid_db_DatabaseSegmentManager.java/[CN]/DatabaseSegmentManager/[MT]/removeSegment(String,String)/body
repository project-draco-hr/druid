{
  try {
    dbi.withHandle(new HandleCallback<Void>(){
      @Override public Void withHandle(      Handle handle) throws Exception {
        handle.createStatement(String.format("UPDATE %s SET used=0 WHERE id = :segmentID",getSegmentsTable())).bind("segmentID",segmentID).execute();
        return null;
      }
    }
);
    ConcurrentHashMap<String,DruidDataSource> dataSourceMap=dataSources.get();
    if (!dataSourceMap.containsKey(ds)) {
      log.warn("Cannot find datasource %s",ds);
      return false;
    }
    DruidDataSource dataSource=dataSourceMap.get(ds);
    dataSource.removePartition(segmentID);
    if (dataSource.isEmpty()) {
      dataSourceMap.remove(ds);
    }
  }
 catch (  Exception e) {
    log.error(e,e.toString());
    return false;
  }
  return true;
}
