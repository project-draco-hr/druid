{
  try {
    final List<String> segmentFailures=Lists.newArrayList();
    final List<DataSegment> validSegments=Lists.newArrayList();
    for (    DataSegment segment : segments) {
      log.info("Loading segment %s",segment.getIdentifier());
      try {
        serverManager.loadSegment(segment);
      }
 catch (      Exception e) {
        log.error(e,"Exception loading segment[%s]",segment.getIdentifier());
        removeSegment(segment);
        segmentFailures.add(segment.getIdentifier());
        continue;
      }
      File segmentInfoCacheFile=new File(config.getSegmentInfoCacheDirectory(),segment.getIdentifier());
      if (!segmentInfoCacheFile.exists()) {
        try {
          jsonMapper.writeValue(segmentInfoCacheFile,segment);
        }
 catch (        IOException e) {
          log.error(e,"Failed to write to disk segment info cache file[%s]",segmentInfoCacheFile);
          removeSegment(segment);
          segmentFailures.add(segment.getIdentifier());
          continue;
        }
      }
      validSegments.add(segment);
    }
    try {
      announcer.announceSegments(validSegments);
    }
 catch (    IOException e) {
      throw new SegmentLoadingException(e,"Failed to announce segments[%s]",segments);
    }
    if (!segmentFailures.isEmpty()) {
      log.error("Exception loading segments: %s",segmentFailures);
      throw new SegmentLoadingException("%,d errors seen while loading segments",segmentFailures.size());
    }
  }
 catch (  SegmentLoadingException e) {
    log.makeAlert(e,"Failed to load segments for dataSource").addData("segments",segments).emit();
  }
}
