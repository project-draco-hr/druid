{
  SelectQuery query=builder.descending(true).build();
  for (  int[] expected : new int[][]{{0,0,0,-3,3},{0,0,0,-6,3},{0,0,0,-9,3},{0,0,0,-12,3},{0,0,-2,-13,3},{0,0,-5,0,3},{0,-3,0,0,3},{-2,-4,0,0,3},{-4,0,0,0,2},{-5,0,0,0,0}}) {
    List<Result<SelectResultValue>> results=Sequences.toList(runner.run(query,ImmutableMap.of()),Lists.<Result<SelectResultValue>>newArrayList());
    Assert.assertEquals(1,results.size());
    SelectResultValue value=results.get(0).getValue();
    Map<String,Integer> pagingIdentifiers=value.getPagingIdentifiers();
    for (int i=0; i < expected.length - 1; i++) {
      if (expected[i] < 0) {
        Assert.assertEquals(expected[i],pagingIdentifiers.get(segmentIdentifiers.get(i)).intValue());
      }
    }
    Assert.assertEquals(expected[expected.length - 1],value.getEvents().size());
    query=query.withPagingSpec(toNextPager(3,query.isDescending(),pagingIdentifiers));
  }
}
