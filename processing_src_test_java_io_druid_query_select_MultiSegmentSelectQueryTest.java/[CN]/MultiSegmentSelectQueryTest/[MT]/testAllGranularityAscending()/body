{
  SelectQuery query=builder.build();
  for (  int[] expected : new int[][]{{2,-1,-1,-1,3},{3,1,-1,-1,3},{-1,3,0,-1,3},{-1,-1,3,-1,3},{-1,-1,4,1,3},{-1,-1,-1,4,3},{-1,-1,-1,7,3},{-1,-1,-1,10,3},{-1,-1,-1,12,2},{-1,-1,-1,13,0}}) {
    List<Result<SelectResultValue>> results=Sequences.toList(runner.run(query,ImmutableMap.of()),Lists.<Result<SelectResultValue>>newArrayList());
    Assert.assertEquals(1,results.size());
    SelectResultValue value=results.get(0).getValue();
    Map<String,Integer> pagingIdentifiers=value.getPagingIdentifiers();
    for (int i=0; i < expected.length - 1; i++) {
      if (expected[i] >= 0) {
        Assert.assertEquals(expected[i],pagingIdentifiers.get(segmentIdentifiers.get(i)).intValue());
      }
    }
    Assert.assertEquals(expected[expected.length - 1],value.getEvents().size());
    query=query.withPagingSpec(toNextPager(3,query.isDescending(),pagingIdentifiers));
  }
}
