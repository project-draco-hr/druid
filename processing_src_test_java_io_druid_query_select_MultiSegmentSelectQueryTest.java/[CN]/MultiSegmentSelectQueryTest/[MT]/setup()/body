{
  CharSource v_0112=CharSource.wrap(StringUtils.join(V_0112,"\n"));
  CharSource v_0113=CharSource.wrap(StringUtils.join(V_0113,"\n"));
  CharSource v_override=CharSource.wrap(StringUtils.join(V_OVERRIDE,"\n"));
  IncrementalIndex index0=TestIndex.loadIncrementalIndex(newIndex("2011-01-12T00:00:00.000Z"),v_0112);
  IncrementalIndex index1=TestIndex.loadIncrementalIndex(newIndex("2011-01-13T00:00:00.000Z"),v_0113);
  IncrementalIndex index2=TestIndex.loadIncrementalIndex(newIndex("2011-01-12T04:00:00.000Z"),v_override);
  segment0=new IncrementalIndexSegment(index0,makeIdentifier(index0,"v1"));
  segment1=new IncrementalIndexSegment(index1,makeIdentifier(index1,"v1"));
  segment_override=new IncrementalIndexSegment(index2,makeIdentifier(index2,"v2"));
  VersionedIntervalTimeline<String,Segment> timeline=new VersionedIntervalTimeline(StringComparators.LEXICOGRAPHIC);
  timeline.add(index0.getInterval(),"v1",new SingleElementPartitionChunk(segment0));
  timeline.add(index1.getInterval(),"v1",new SingleElementPartitionChunk(segment1));
  timeline.add(index2.getInterval(),"v2",new SingleElementPartitionChunk(segment_override));
  segmentIdentifiers=Lists.newArrayList();
  for (  TimelineObjectHolder<String,?> holder : timeline.lookup(new Interval("2011-01-12/2011-01-14"))) {
    segmentIdentifiers.add(makeIdentifier(holder.getInterval(),holder.getVersion()));
  }
  runner=QueryRunnerTestHelper.makeFilteringQueryRunner(timeline,factory);
}
