{
  final MapInputRowParser parser=new MapInputRowParser(new JSONParseSpec(new TimestampSpec("timemillis","millis",null),new DimensionsSpec(DimensionsSpec.getDefaultSchemas(ImmutableList.of("foo","values")),ImmutableList.of("toobig","value"),null),null,null));
  final MapInputRowParser parser2=jsonMapper.readValue(jsonMapper.writeValueAsBytes(parser),MapInputRowParser.class);
  final InputRow parsed=parser2.parse(ImmutableMap.<String,Object>of("timemillis",1412705931123L,"toobig",123E64,"value",123.456,"long",123456789000L,"values",Lists.newArrayList(1412705931123L,123.456,123E45,"hello")));
  Assert.assertEquals(ImmutableList.of("foo","values"),parsed.getDimensions());
  Assert.assertEquals(ImmutableList.of(),parsed.getDimension("foo"));
  Assert.assertEquals(ImmutableList.of("1412705931123","123.456","1.23E47","hello"),parsed.getDimension("values"));
  Assert.assertEquals(Float.POSITIVE_INFINITY,parsed.getFloatMetric("toobig"));
  Assert.assertEquals(123E64,parsed.getRaw("toobig"));
  Assert.assertEquals(123.456f,parsed.getFloatMetric("value"));
  Assert.assertEquals(123456789000L,parsed.getRaw("long"));
  Assert.assertEquals(1.23456791E11f,parsed.getFloatMetric("long"));
  Assert.assertEquals(1412705931123L,parsed.getTimestampFromEpoch());
}
