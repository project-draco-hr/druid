{
  int taskCount=0;
  List<Task> tasks=taskStorage.getActiveTasks();
  for (  Task task : tasks) {
    if (task instanceof KafkaIndexTask && dataSource.equals(task.getDataSource())) {
      taskCount++;
      KafkaIndexTask kafkaTask=(KafkaIndexTask)task;
      String taskId=task.getId();
      Iterator<Integer> it=kafkaTask.getIOConfig().getStartPartitions().getPartitionOffsetMap().keySet().iterator();
      Integer taskGroupId=(it.hasNext() ? getTaskGroupIdForPartition(it.next()) : null);
      if (taskGroupId != null) {
        TaskGroup taskGroup=taskGroups.get(taskGroupId);
        if (!isTaskInPendingCompletionGroups(taskId) && (taskGroup == null || !taskGroup.tasks.containsKey(taskId))) {
          Optional<KafkaIndexTask.Status> status=getTaskStatus(taskId);
          if (status.isPresent() && status.get() == KafkaIndexTask.Status.PUBLISHING) {
            addDiscoveredTaskToPendingCompletionTaskGroups(taskGroupId,taskId,kafkaTask.getIOConfig().getStartPartitions().getPartitionOffsetMap());
            Map<Integer,Long> publishingTaskCurrentOffsets=getCurrentOffsets(taskId,true);
            for (            Map.Entry<Integer,Long> entry : publishingTaskCurrentOffsets.entrySet()) {
              Integer partition=entry.getKey();
              Long offset=entry.getValue();
              Map<Integer,Long> partitionOffsets=partitionGroups.get(getTaskGroupIdForPartition(partition));
              if (partitionOffsets.get(partition) == null || partitionOffsets.get(partition) < offset) {
                partitionOffsets.put(partition,offset);
              }
            }
          }
 else {
            for (            Integer partition : kafkaTask.getIOConfig().getStartPartitions().getPartitionOffsetMap().keySet()) {
              if (!taskGroupId.equals(getTaskGroupIdForPartition(partition))) {
                log.warn("Stopping task [%s] which does not match the expected partition allocation",taskId);
                stopTask(taskId,false);
                taskGroupId=null;
                break;
              }
            }
            if (taskGroupId == null) {
              continue;
            }
            if (!taskGroups.containsKey(taskGroupId)) {
              log.debug("Creating new task group [%d]",taskGroupId);
              taskGroups.put(taskGroupId,new TaskGroup(kafkaTask.getIOConfig().getStartPartitions().getPartitionOffsetMap(),kafkaTask.getIOConfig().getMinimumMessageTime()));
            }
            if (!isTaskCurrent(taskGroupId,taskId)) {
              log.info("Stopping task [%s] which does not match the expected parameters and ingestion spec",taskId);
              stopTask(taskId,false);
            }
 else {
              taskGroups.get(taskGroupId).tasks.put(taskId,new TaskData());
            }
          }
        }
      }
    }
  }
  log.debug("Found [%d] Kafka indexing tasks for dataSource [%s]",taskCount,dataSource);
}
