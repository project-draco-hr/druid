{
  emitter.emit(EasyMock.<ServiceEventBuilder>anyObject());
  EasyMock.expectLastCall().times(availableSegments.size());
  EasyMock.replay(emitter);
  EasyMock.expect(databaseRuleManager.getRulesWithDefault(EasyMock.<String>anyObject())).andReturn(Lists.<Rule>newArrayList(new IntervalLoadRule(new Interval("2012-01-02T00:00:00.000Z/2012-01-03T00:00:00.000Z"),null,1,"normal"))).atLeastOnce();
  EasyMock.replay(databaseRuleManager);
  DruidCluster druidCluster=new DruidCluster(ImmutableMap.of("normal",MinMaxPriorityQueue.orderedBy(Ordering.natural().reverse()).create(Arrays.asList(new ServerHolder(new DruidServer("serverNorm","hostNorm",1000,"historical","normal"),mockPeon)))));
  DruidCoordinatorRuntimeParams params=new DruidCoordinatorRuntimeParams.Builder().withEmitter(emitter).withDruidCluster(druidCluster).withAvailableSegments(availableSegments).withDatabaseRuleManager(databaseRuleManager).withSegmentReplicantLookup(SegmentReplicantLookup.make(new DruidCluster())).build();
  ruleRunner.run(params);
  EasyMock.verify(emitter);
}
