{
switch (func) {
case UNION:
    Union union=(Union)SetOperation.builder().build(sketchSize,Family.UNION);
  for (  Sketch sketch : sketches) {
    union.update(sketch);
  }
return union.getResult(false,null);
case INTERSECT:
Intersection intersection=(Intersection)SetOperation.builder().build(sketchSize,Family.INTERSECTION);
for (Sketch sketch : sketches) {
intersection.update(sketch);
}
return intersection.getResult(false,null);
case NOT:
if (sketches.length < 1) {
throw new IllegalArgumentException("A-Not-B requires atleast 1 sketch");
}
if (sketches.length == 1) {
return sketches[0];
}
Sketch result=sketches[0];
for (int i=1; i < sketches.length; i++) {
AnotB anotb=(AnotB)SetOperation.builder().build(sketchSize,Family.A_NOT_B);
anotb.update(result,sketches[i]);
result=anotb.getResult(false,null);
}
return result;
default :
throw new IllegalArgumentException("Unknown sketch operation " + func);
}
}
