{
  final GroupByQueryConfig config=configSupplier.get();
  Pair<IncrementalIndex,Accumulator<IncrementalIndex,Row>> indexAccumulatorPair=GroupByQueryHelper.createIndexAccumulatorPair(query,config);
  IncrementalIndex index=runner.run(query).accumulate(indexAccumulatorPair.lhs,indexAccumulatorPair.rhs);
  Sequence<Row> sequence=Sequences.map(Sequences.simple(index.iterableWithPostAggregations(query.getPostAggregatorSpecs())),new Function<Row,Row>(){
    @Override public Row apply(    Row input){
      final MapBasedRow row=(MapBasedRow)input;
      return new MapBasedRow(query.getGranularity().toDateTime(row.getTimestampFromEpoch()),row.getEvent());
    }
  }
);
  return query.applyLimit(sequence);
}
