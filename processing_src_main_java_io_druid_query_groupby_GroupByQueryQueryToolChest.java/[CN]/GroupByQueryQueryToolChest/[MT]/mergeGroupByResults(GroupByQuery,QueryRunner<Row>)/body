{
  Sequence<Row> result;
  final DataSource dataSource=query.getDataSource();
  if (dataSource instanceof QueryDataSource) {
    GroupByQuery subquery;
    try {
      subquery=(GroupByQuery)((QueryDataSource)dataSource).getQuery();
    }
 catch (    ClassCastException e) {
      throw new UnsupportedOperationException("Subqueries must be of type 'group by'");
    }
    final Sequence<Row> subqueryResult=mergeGroupByResults(subquery,runner);
    final List<AggregatorFactory> aggs=Lists.newArrayList();
    for (    AggregatorFactory aggregatorFactory : query.getAggregatorSpecs()) {
      aggs.addAll(aggregatorFactory.getBaseFactories());
    }
    final GroupByQuery innerQuery=new GroupByQuery.Builder(query).setAggregatorSpecs(aggs).setInterval(subquery.getIntervals()).setPostAggregatorSpecs(Lists.<PostAggregator>newArrayList()).build();
    final IncrementalIndexStorageAdapter adapter=new IncrementalIndexStorageAdapter(makeIncrementalIndex(innerQuery,subqueryResult));
    return engine.process(query,adapter);
  }
 else {
    result=runner.run(query);
    return postAggregate(query,makeIncrementalIndex(query,result));
  }
}
