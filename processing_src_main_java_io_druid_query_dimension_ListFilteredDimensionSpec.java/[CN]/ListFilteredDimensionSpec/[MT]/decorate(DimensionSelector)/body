{
  if (selector == null) {
    return selector;
  }
  final int selectorCardinality=selector.getValueCardinality();
  if (selectorCardinality < 0) {
    throw new UnsupportedOperationException("Cannot decorate a selector with no dictionary");
  }
  int cardinality=isWhitelist ? values.size() : selectorCardinality - values.size();
  int count=0;
  final Map<Integer,Integer> forwardMapping=new HashMap<>(cardinality);
  final int[] reverseMapping=new int[cardinality];
  if (isWhitelist) {
    for (    String value : values) {
      int i=selector.lookupId(value);
      if (i >= 0) {
        forwardMapping.put(i,count);
        reverseMapping[count++]=i;
      }
    }
  }
 else {
    for (int i=0; i < selectorCardinality; i++) {
      if (!values.contains(Strings.nullToEmpty(selector.lookupName(i)))) {
        forwardMapping.put(i,count);
        reverseMapping[count++]=i;
      }
    }
  }
  return BaseFilteredDimensionSpec.decorate(selector,forwardMapping,reverseMapping);
}
