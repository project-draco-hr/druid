{
  segmentPredicates.put(callback,filter);
  registerSegmentCallback(exec,new SegmentCallback(){
    @Override public CallbackAction segmentAdded(    DruidServerMetadata server,    DataSegment segment){
      final CallbackAction action;
      if (filter.apply(segment)) {
        action=callback.segmentAdded(server,segment);
        if (action.equals(CallbackAction.UNREGISTER)) {
          segmentPredicates.remove(callback);
        }
      }
 else {
        action=CallbackAction.CONTINUE;
      }
      return action;
    }
    @Override public CallbackAction segmentRemoved(    DruidServerMetadata server,    DataSegment segment){
      final CallbackAction action;
      if (filter.apply(segment)) {
        action=callback.segmentRemoved(server,segment);
        if (action.equals(CallbackAction.UNREGISTER)) {
          segmentPredicates.remove(callback);
        }
      }
 else {
        action=CallbackAction.CONTINUE;
      }
      return action;
    }
    @Override public CallbackAction segmentViewInitialized(){
      return callback.segmentViewInitialized();
    }
  }
);
}
