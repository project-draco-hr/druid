{
  if (aether == null) {
    aether=getAetherClient();
  }
  final File extensionsDir=new File(extensionsConfig.getDirectory());
  final File hadoopDependenciesDir=new File(extensionsConfig.getHadoopDependenciesDir());
  if (clean) {
    try {
      FileUtils.deleteDirectory(extensionsDir);
      FileUtils.deleteDirectory(hadoopDependenciesDir);
    }
 catch (    IOException e) {
      log.error("Unable to clear extension directory at [%s]",extensionsConfig.getDirectory());
      throw Throwables.propagate(e);
    }
  }
  createRootExtensionsDirectory(extensionsDir);
  createRootExtensionsDirectory(hadoopDependenciesDir);
  try {
    log.info("Start downloading dependencies for extension coordinates: [%s]",coordinates);
    for (    final String coordinate : coordinates) {
      final Artifact versionedArtifact=getArtifact(coordinate);
      File currExtensionDir=new File(extensionsDir,versionedArtifact.getArtifactId());
      createExtensionDirectory(coordinate,currExtensionDir);
      downloadExtension(versionedArtifact,currExtensionDir);
    }
    log.info("Finish downloading dependencies for extension coordinates: [%s]",coordinates);
    if (!noDefaultHadoop && hadoopCoordinates.isEmpty()) {
      hadoopCoordinates.addAll(TaskConfig.DEFAULT_DEFAULT_HADOOP_COORDINATES);
    }
    log.info("Start downloading dependencies for hadoop extension coordinates: [%s]",hadoopCoordinates);
    for (    final String hadoopCoordinate : hadoopCoordinates) {
      final Artifact versionedArtifact=getArtifact(hadoopCoordinate);
      File currExtensionDir=new File(hadoopDependenciesDir,versionedArtifact.getArtifactId());
      createExtensionDirectory(hadoopCoordinate,currExtensionDir);
      currExtensionDir=new File(currExtensionDir,versionedArtifact.getVersion());
      createExtensionDirectory(hadoopCoordinate,currExtensionDir);
      downloadExtension(versionedArtifact,currExtensionDir);
    }
    log.info("Finish downloading dependencies for hadoop extension coordinates: [%s]",hadoopCoordinates);
  }
 catch (  Exception e) {
    throw Throwables.propagate(e);
  }
}
