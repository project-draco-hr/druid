{
  Set<DataSegment> availableSegments=Sets.newTreeSet(Comparators.inverse(DataSegment.bucketMonthComparator()));
  Iterable<DataSegment> dataSegments=Iterables.concat(Iterables.transform(databaseSegmentManager.getInventory(),new Function<DruidDataSource,Iterable<DataSegment>>(){
    @Override public Iterable<DataSegment> apply(    DruidDataSource input){
      return input.getSegments();
    }
  }
));
  for (  DataSegment dataSegment : dataSegments) {
    if (dataSegment.getSize() < 0) {
      log.makeAlert("No size on Segment, wtf?").addData("segment",dataSegment).emit();
    }
    availableSegments.add(dataSegment);
  }
  return availableSegments;
}
