{
  SupervisorSpec spec=new TestSupervisorSpec("id1",supervisor1);
  SupervisorSpec spec2=new TestSupervisorSpec("id1",supervisor2);
  Map<String,SupervisorSpec> existingSpecs=ImmutableMap.<String,SupervisorSpec>of("id3",new TestSupervisorSpec("id3",supervisor3));
  Assert.assertTrue(manager.getSupervisorIds().isEmpty());
  EasyMock.expect(metadataSupervisorManager.getLatest()).andReturn(existingSpecs);
  metadataSupervisorManager.insert("id1",spec);
  supervisor3.start();
  supervisor1.start();
  replayAll();
  manager.start();
  Assert.assertEquals(1,manager.getSupervisorIds().size());
  manager.createOrUpdateAndStartSupervisor(spec);
  Assert.assertEquals(2,manager.getSupervisorIds().size());
  Assert.assertEquals(spec,manager.getSupervisorSpec("id1").get());
  verifyAll();
  resetAll();
  metadataSupervisorManager.insert("id1",spec2);
  supervisor2.start();
  supervisor1.stop(true);
  replayAll();
  manager.createOrUpdateAndStartSupervisor(spec2);
  Assert.assertEquals(2,manager.getSupervisorIds().size());
  Assert.assertEquals(spec2,manager.getSupervisorSpec("id1").get());
  verifyAll();
  resetAll();
  metadataSupervisorManager.insert(eq("id1"),anyObject(NoopSupervisorSpec.class));
  supervisor2.stop(true);
  replayAll();
  boolean retVal=manager.stopAndRemoveSupervisor("id1");
  Assert.assertTrue(retVal);
  Assert.assertEquals(1,manager.getSupervisorIds().size());
  Assert.assertEquals(Optional.absent(),manager.getSupervisorSpec("id1"));
  verifyAll();
  resetAll();
  supervisor3.stop(false);
  replayAll();
  manager.stop();
  verifyAll();
  Assert.assertTrue(manager.getSupervisorIds().isEmpty());
}
