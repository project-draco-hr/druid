{
  TreeSet<ImmutableZkWorker> sortedWorkers=Sets.newTreeSet(new Comparator<ImmutableZkWorker>(){
    @Override public int compare(    ImmutableZkWorker zkWorker,    ImmutableZkWorker zkWorker2){
      int retVal=Ints.compare(zkWorker2.getCurrCapacityUsed(),zkWorker.getCurrCapacityUsed());
      if (retVal == 0) {
        retVal=zkWorker.getWorker().getHost().compareTo(zkWorker2.getWorker().getHost());
      }
      return retVal;
    }
  }
);
  sortedWorkers.addAll(zkWorkers.values());
  final String minWorkerVer=config.getMinWorkerVersion();
  for (  ImmutableZkWorker zkWorker : sortedWorkers) {
    if (zkWorker.canRunTask(task) && zkWorker.isValidVersion(minWorkerVer)) {
      return Optional.of(zkWorker.getMutableZkWorker());
    }
  }
  log.debug("Worker nodes %s do not have capacity to run any more tasks!",zkWorkers.values());
  return Optional.absent();
}
