{
  Assert.assertTrue(TestUtils.conditionValid(new IndexingServiceCondition(){
    @Override public boolean isValid(){
      try {
        return cf.checkExists().forPath(joiner.join(tasksPath,task.getId())) == null;
      }
 catch (      Exception e) {
        return false;
      }
    }
  }
));
  cf.create().creatingParentsIfNeeded().forPath(joiner.join(tasksPath,task.getId()),jsonMapper.writeValueAsBytes(task));
  Assert.assertTrue(TestUtils.conditionValid(new IndexingServiceCondition(){
    @Override public boolean isValid(){
      try {
        final byte[] bytes=cf.getData().forPath(joiner.join(statusPath,task.getId()));
        final TaskAnnouncement announcement=jsonMapper.readValue(bytes,TaskAnnouncement.class);
        return announcement.getTaskStatus().isComplete();
      }
 catch (      Exception e) {
        return false;
      }
    }
  }
));
  TaskAnnouncement taskAnnouncement=jsonMapper.readValue(cf.getData().forPath(joiner.join(statusPath,task.getId())),TaskAnnouncement.class);
  Assert.assertEquals(task.getId(),taskAnnouncement.getTaskStatus().getId());
  Assert.assertEquals(TaskStatus.Status.SUCCESS,taskAnnouncement.getTaskStatus().getStatusCode());
}
