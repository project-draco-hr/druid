{
  task=TestTasks.unending("test");
  cf.create().creatingParentsIfNeeded().forPath(joiner.join(tasksPath,task.getId()),jsonMapper.writeValueAsBytes(task));
  Assert.assertTrue(TestUtils.conditionValid(new IndexingServiceCondition(){
    @Override public boolean isValid(){
      try {
        return cf.checkExists().forPath(joiner.join(statusPath,task.getId())) != null;
      }
 catch (      Exception e) {
        return false;
      }
    }
  }
));
  workerTaskMonitor.stop();
  workerTaskMonitor=createTaskMonitor();
  workerTaskMonitor.start();
  List<TaskAnnouncement> announcements=workerCuratorCoordinator.getAnnouncements();
  Assert.assertEquals(1,announcements.size());
  Assert.assertEquals(task.getId(),announcements.get(0).getTaskStatus().getId());
  Assert.assertEquals(TaskStatus.Status.FAILED,announcements.get(0).getTaskStatus().getStatusCode());
}
