{
  testingCluster=new TestingCluster(1);
  testingCluster.start();
  cf=CuratorFrameworkFactory.builder().connectString(testingCluster.getConnectString()).retryPolicy(new ExponentialBackoffRetry(1,10)).compressionProvider(new PotentiallyGzippedCompressionProvider(false)).build();
  cf.start();
  cf.blockUntilConnected();
  cf.create().creatingParentsIfNeeded().forPath(basePath);
  worker=new Worker("worker","localhost",3,"0",DateTime.now());
  workerCuratorCoordinator=new WorkerCuratorCoordinator(jsonMapper,new IndexerZkConfig(new ZkPathsConfig(){
    @Override public String getBase(){
      return basePath;
    }
  }
,null,null,null,null,null),new TestRemoteTaskRunnerConfig(new Period("PT1S")),cf,worker);
  workerCuratorCoordinator.start();
  workerTaskMonitor=createTaskMonitor();
  TestTasks.registerSubtypes(jsonMapper);
  jsonMapper.registerSubtypes(new NamedType(TestRealtimeTask.class,"test_realtime"));
  workerTaskMonitor.start();
  task=TestTasks.immediateSuccess("test");
}
