{
  if (args.length < 1 || args.length > 2) {
    printHelp();
    System.exit(2);
  }
  final List<Interval> dataInterval;
  final HadoopDruidIndexerConfig config;
  HadoopDruidIndexerJob job;
  try {
    final String intervalSpec=args.length == 1 ? null : args[0];
    final String argumentSpec=args[args.length == 1 ? 0 : 1];
    if (argumentSpec.startsWith("{")) {
      config=jsonMapper.readValue(argumentSpec,HadoopDruidIndexerConfig.class);
    }
 else {
      config=jsonMapper.readValue(new File(argumentSpec),HadoopDruidIndexerConfig.class);
    }
    if (intervalSpec != null) {
      dataInterval=Lists.transform(Arrays.asList(intervalSpec.split(",")),new StringIntervalFunction());
      config.setIntervals(dataInterval);
    }
    config.setVersion(new DateTime());
    job=new HadoopDruidIndexerJob(config);
  }
 catch (  Exception e) {
    e.printStackTrace();
    Thread.sleep(500);
    printHelp();
    System.exit(1);
    return;
  }
  job.run();
}
