{
  final Predicate<String> nonEmpty=new Predicate<String>(){
    @Override public boolean apply(    String input){
      return input != null && !input.isEmpty();
    }
  }
;
  this.dataSource=interner.intern(dataSource);
  this.interval=interval;
  this.loadSpec=loadSpec;
  this.version=version;
  this.dimensions=dimensions == null ? ImmutableList.<String>of() : ImmutableList.copyOf(Iterables.transform(Iterables.filter(dimensions,nonEmpty),internFun));
  this.metrics=metrics == null ? ImmutableList.<String>of() : ImmutableList.copyOf(Iterables.transform(Iterables.filter(metrics,nonEmpty),internFun));
  this.shardSpec=(shardSpec == null) ? new NoneShardSpec() : shardSpec;
  this.binaryVersion=binaryVersion;
  this.size=size;
  this.identifier=makeDataSegmentIdentifier(this.dataSource,this.interval.getStart(),this.interval.getEnd(),this.version,this.shardSpec);
}
