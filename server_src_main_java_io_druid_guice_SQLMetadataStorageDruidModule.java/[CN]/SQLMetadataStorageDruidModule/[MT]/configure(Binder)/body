{
  PolyBind.createChoice(binder,"druid.db.type",Key.get(MetadataStorageConnector.class),null);
  PolyBind.createChoice(binder,"druid.db.type",Key.get(SQLMetadataConnector.class),null);
  PolyBind.createChoice(binder,"druid.db.type",Key.get(MetadataSegmentManager.class),Key.get(SQLMetadataSegmentManager.class));
  PolyBind.createChoice(binder,"druid.db.type",Key.get(MetadataSegmentManagerProvider.class),Key.get(SQLMetadataSegmentManagerProvider.class));
  PolyBind.createChoice(binder,"druid.db.type",Key.get(MetadataRuleManager.class),Key.get(SQLMetadataRuleManager.class));
  PolyBind.createChoice(binder,"druid.db.type",Key.get(MetadataRuleManagerProvider.class),Key.get(SQLMetadataRuleManagerProvider.class));
  PolyBind.createChoice(binder,"druid.db.type",Key.get(SegmentPublisher.class),Key.get(SQLMetadataSegmentPublisher.class));
  PolyBind.createChoice(binder,"druid.db.type",Key.get(MetadataSegmentPublisherProvider.class),Key.get(SQLMetadataSegmentPublisherProvider.class));
  PolyBind.createChoice(binder,"druid.db.type",Key.get(IndexerMetadataStorageCoordinator.class),Key.get(IndexerSQLMetadataStorageCoordinator.class));
  PolyBind.createChoice(binder,"druid.db.type",Key.get(MetadataStorageActionHandlerFactory.class),Key.get(SQLMetadataStorageActionHandlerFactory.class));
  PolyBind.createChoice(binder,"druid.db.type",Key.get(MetadataStorageUpdaterJobHandler.class),Key.get(SQLMetadataStorageUpdaterJobHandler.class));
  PolyBind.optionBinder(binder,Key.get(MetadataSegmentManager.class)).addBinding(type).to(SQLMetadataSegmentManager.class).in(LazySingleton.class);
  PolyBind.optionBinder(binder,Key.get(MetadataSegmentManagerProvider.class)).addBinding(type).to(SQLMetadataSegmentManagerProvider.class).in(LazySingleton.class);
  PolyBind.optionBinder(binder,Key.get(MetadataRuleManager.class)).addBinding(type).to(SQLMetadataRuleManager.class).in(LazySingleton.class);
  PolyBind.optionBinder(binder,Key.get(MetadataRuleManagerProvider.class)).addBinding(type).to(SQLMetadataRuleManagerProvider.class).in(LazySingleton.class);
  PolyBind.optionBinder(binder,Key.get(SegmentPublisher.class)).addBinding(type).to(SQLMetadataSegmentPublisher.class).in(LazySingleton.class);
  PolyBind.optionBinder(binder,Key.get(MetadataSegmentPublisherProvider.class)).addBinding(type).to(SQLMetadataSegmentPublisherProvider.class).in(LazySingleton.class);
  PolyBind.optionBinder(binder,Key.get(MetadataStorageActionHandlerFactory.class)).addBinding(type).to(SQLMetadataStorageActionHandlerFactory.class).in(LazySingleton.class);
  PolyBind.optionBinder(binder,Key.get(IndexerMetadataStorageCoordinator.class)).addBinding(type).to(IndexerSQLMetadataStorageCoordinator.class).in(LazySingleton.class);
  PolyBind.optionBinder(binder,Key.get(MetadataStorageUpdaterJobHandler.class)).addBinding(type).to(SQLMetadataStorageUpdaterJobHandler.class).in(LazySingleton.class);
}
