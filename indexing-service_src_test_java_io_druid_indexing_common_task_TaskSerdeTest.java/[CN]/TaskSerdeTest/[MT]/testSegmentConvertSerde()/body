{
  final DataSegment segment=new DataSegment("dataSource",Interval.parse("1990-01-01/1999-12-31"),"version",ImmutableMap.<String,Object>of(),ImmutableList.of("dim1","dim2"),ImmutableList.of("metric1","metric2"),NoneShardSpec.instance(),0,12345L);
  final ConvertSegmentTask convertSegmentTaskOriginal=ConvertSegmentTask.create(segment,new IndexSpec(new RoaringBitmapSerdeFactory(null),"lzf","uncompressed"),false,true,null);
  final String json=jsonMapper.writeValueAsString(convertSegmentTaskOriginal);
  final Task task=jsonMapper.readValue(json,Task.class);
  Assert.assertTrue(task instanceof ConvertSegmentTask);
  final ConvertSegmentTask convertSegmentTask=(ConvertSegmentTask)task;
  Assert.assertEquals(convertSegmentTaskOriginal.getDataSource(),convertSegmentTask.getDataSource());
  Assert.assertEquals(convertSegmentTaskOriginal.getInterval(),convertSegmentTask.getInterval());
  Assert.assertEquals(convertSegmentTaskOriginal.getIndexSpec().getBitmapSerdeFactory().getClass().getCanonicalName(),convertSegmentTask.getIndexSpec().getBitmapSerdeFactory().getClass().getCanonicalName());
  Assert.assertEquals(convertSegmentTaskOriginal.getIndexSpec().getDimensionCompression(),convertSegmentTask.getIndexSpec().getDimensionCompression());
  Assert.assertEquals(convertSegmentTaskOriginal.getIndexSpec().getMetricCompression(),convertSegmentTask.getIndexSpec().getMetricCompression());
  Assert.assertEquals(false,convertSegmentTask.isForce());
  Assert.assertEquals(segment,convertSegmentTask.getSegment());
}
