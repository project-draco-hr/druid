{
  final GroupByQueryConfig defaultConfig=new GroupByQueryConfig(){
    @Override public String toString(){
      return "default";
    }
  }
;
  final GroupByQueryConfig singleThreadedConfig=new GroupByQueryConfig(){
    @Override public boolean isSingleThreaded(){
      return true;
    }
    @Override public String toString(){
      return "singleThreaded";
    }
  }
;
  final GroupByQueryConfig v2Config=new GroupByQueryConfig(){
    @Override public String getDefaultStrategy(){
      return GroupByStrategySelector.STRATEGY_V2;
    }
    @Override public String toString(){
      return "v2";
    }
  }
;
  final GroupByQueryConfig v2SmallBufferConfig=new GroupByQueryConfig(){
    @Override public String getDefaultStrategy(){
      return GroupByStrategySelector.STRATEGY_V2;
    }
    @Override public int getBufferGrouperMaxSize(){
      return 2;
    }
    @Override public long getMaxOnDiskStorage(){
      return 10L * 1024 * 1024;
    }
    @Override public String toString(){
      return "v2SmallBuffer";
    }
  }
;
  final GroupByQueryConfig epinephelinaeSmallDictionaryConfig=new GroupByQueryConfig(){
    @Override public String getDefaultStrategy(){
      return GroupByStrategySelector.STRATEGY_V2;
    }
    @Override public long getMaxMergingDictionarySize(){
      return 400;
    }
    @Override public long getMaxOnDiskStorage(){
      return 10L * 1024 * 1024;
    }
    @Override public String toString(){
      return "epinephelinaeSmallDictionary";
    }
  }
;
  defaultConfig.setMaxIntermediateRows(10000);
  singleThreadedConfig.setMaxIntermediateRows(10000);
  final List<Object[]> constructors=Lists.newArrayList();
  final List<GroupByQueryConfig> configs=ImmutableList.of(defaultConfig,singleThreadedConfig,v2Config,v2SmallBufferConfig,epinephelinaeSmallDictionaryConfig);
  for (  GroupByQueryConfig config : configs) {
    final GroupByQueryRunnerFactory factory=makeQueryRunnerFactory(config);
    for (    QueryRunner<Row> runner : QueryRunnerTestHelper.makeQueryRunners(factory)) {
      final String testName=String.format("config=%s, runner=%s",config.toString(),runner.toString());
      constructors.add(new Object[]{testName,config,factory,runner});
    }
  }
  return constructors;
}
