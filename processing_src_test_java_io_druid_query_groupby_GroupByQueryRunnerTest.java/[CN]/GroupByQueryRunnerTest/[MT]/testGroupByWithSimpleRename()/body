{
  Map<String,String> map=new HashMap<>();
  map.put("automotive","automotive0");
  map.put("business","business0");
  map.put("entertainment","entertainment0");
  map.put("health","health0");
  map.put("mezzanine","mezzanine0");
  map.put("news","news0");
  map.put("premium","premium0");
  map.put("technology","technology0");
  map.put("travel","travel0");
  GroupByQuery query=GroupByQuery.builder().setDataSource(QueryRunnerTestHelper.dataSource).setQuerySegmentSpec(QueryRunnerTestHelper.firstToThird).setDimensions(Lists.<DimensionSpec>newArrayList(new ExtractionDimensionSpec("quality","alias",new LookupExtractionFn(new MapLookupExtractor(map),false,null,true,false),null))).setAggregatorSpecs(Arrays.asList(QueryRunnerTestHelper.rowsCount,new LongSumAggregatorFactory("idx","index"))).setGranularity(QueryRunnerTestHelper.dayGran).build();
  List<Row> expectedResults=Arrays.asList(GroupByQueryRunnerTestHelper.createExpectedRow("2011-04-01","alias","automotive0","rows",1L,"idx",135L),GroupByQueryRunnerTestHelper.createExpectedRow("2011-04-01","alias","business0","rows",1L,"idx",118L),GroupByQueryRunnerTestHelper.createExpectedRow("2011-04-01","alias","entertainment0","rows",1L,"idx",158L),GroupByQueryRunnerTestHelper.createExpectedRow("2011-04-01","alias","health0","rows",1L,"idx",120L),GroupByQueryRunnerTestHelper.createExpectedRow("2011-04-01","alias","mezzanine0","rows",3L,"idx",2870L),GroupByQueryRunnerTestHelper.createExpectedRow("2011-04-01","alias","news0","rows",1L,"idx",121L),GroupByQueryRunnerTestHelper.createExpectedRow("2011-04-01","alias","premium0","rows",3L,"idx",2900L),GroupByQueryRunnerTestHelper.createExpectedRow("2011-04-01","alias","technology0","rows",1L,"idx",78L),GroupByQueryRunnerTestHelper.createExpectedRow("2011-04-01","alias","travel0","rows",1L,"idx",119L),GroupByQueryRunnerTestHelper.createExpectedRow("2011-04-02","alias","automotive0","rows",1L,"idx",147L),GroupByQueryRunnerTestHelper.createExpectedRow("2011-04-02","alias","business0","rows",1L,"idx",112L),GroupByQueryRunnerTestHelper.createExpectedRow("2011-04-02","alias","entertainment0","rows",1L,"idx",166L),GroupByQueryRunnerTestHelper.createExpectedRow("2011-04-02","alias","health0","rows",1L,"idx",113L),GroupByQueryRunnerTestHelper.createExpectedRow("2011-04-02","alias","mezzanine0","rows",3L,"idx",2447L),GroupByQueryRunnerTestHelper.createExpectedRow("2011-04-02","alias","news0","rows",1L,"idx",114L),GroupByQueryRunnerTestHelper.createExpectedRow("2011-04-02","alias","premium0","rows",3L,"idx",2505L),GroupByQueryRunnerTestHelper.createExpectedRow("2011-04-02","alias","technology0","rows",1L,"idx",97L),GroupByQueryRunnerTestHelper.createExpectedRow("2011-04-02","alias","travel0","rows",1L,"idx",126L));
  Iterable<Row> results=GroupByQueryRunnerTestHelper.runQuery(factory,runner,query);
  TestHelper.assertExpectedObjects(expectedResults,results,"");
}
