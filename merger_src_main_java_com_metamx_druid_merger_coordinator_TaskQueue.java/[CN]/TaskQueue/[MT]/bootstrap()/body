{
  giant.lock();
  try {
    Preconditions.checkState(!active,"queue must be stopped");
    log.info("Bootstrapping queue (and associated lockbox)");
    queue.clear();
    taskLockbox.clear();
    final Multimap<TaskLock,Task> tasksByLock=ArrayListMultimap.create();
    for (    final String taskId : taskStorage.getRunningTaskIds()) {
      try {
        final Task task=taskStorage.getTask(taskId).get();
        final List<TaskLock> taskLocks=taskStorage.getLocks(task.getId());
        queue.add(task);
        for (        final TaskLock taskLock : taskLocks) {
          tasksByLock.put(taskLock,task);
        }
      }
 catch (      Exception e) {
        log.makeAlert("Failed to bootstrap task").addData("task",taskId).emit();
        if (e instanceof JsonProcessingException || e.getCause() instanceof JsonProcessingException) {
          taskStorage.setStatus(TaskStatus.failure(taskId));
        }
 else {
          throw Throwables.propagate(e);
        }
      }
    }
    final Ordering<TaskLock> byVersionOrdering=new Ordering<TaskLock>(){
      @Override public int compare(      TaskLock left,      TaskLock right){
        return left.getVersion().compareTo(right.getVersion());
      }
    }
;
    for (    final Map.Entry<TaskLock,Task> taskAndLock : tasksByLock.entries()) {
      final Task task=taskAndLock.getValue();
      final TaskLock savedTaskLock=taskAndLock.getKey();
      final Optional<TaskLock> acquiredTaskLock=taskLockbox.tryLock(task,savedTaskLock.getInterval(),Optional.of(savedTaskLock.getVersion()));
      if (acquiredTaskLock.isPresent() && savedTaskLock.getVersion().equals(acquiredTaskLock.get().getVersion())) {
        log.info("Reacquired lock on interval[%s] version[%s] for task: %s",savedTaskLock.getInterval(),savedTaskLock.getVersion(),task.getId());
      }
 else       if (acquiredTaskLock.isPresent()) {
        log.info("Could not reacquire lock on interval[%s] version[%s] (got version[%s] instead) for task: %s",savedTaskLock.getInterval(),savedTaskLock.getVersion(),acquiredTaskLock.get().getVersion(),task.getId());
      }
 else {
        log.info("Could not reacquire lock on interval[%s] version[%s] for task: %s",savedTaskLock.getInterval(),savedTaskLock.getVersion(),task.getId());
      }
    }
    log.info("Bootstrapped %,d tasks with %,d locks. Ready to go!",queue.size(),tasksByLock.keySet().size());
  }
  finally {
    giant.unlock();
  }
}
