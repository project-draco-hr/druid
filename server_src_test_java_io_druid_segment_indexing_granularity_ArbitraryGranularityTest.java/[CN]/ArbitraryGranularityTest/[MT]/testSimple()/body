{
  final GranularitySpec spec=new ArbitraryGranularitySpec(Lists.newArrayList(new Interval("2012-01-08T00Z/2012-01-11T00Z"),new Interval("2012-02-01T00Z/2012-03-01T00Z"),new Interval("2012-01-07T00Z/2012-01-08T00Z"),new Interval("2012-01-03T00Z/2012-01-04T00Z"),new Interval("2012-01-01T00Z/2012-01-03T00Z")));
  Assert.assertEquals(Lists.newArrayList(new Interval("2012-01-01T00Z/2012-01-03T00Z"),new Interval("2012-01-03T00Z/2012-01-04T00Z"),new Interval("2012-01-07T00Z/2012-01-08T00Z"),new Interval("2012-01-08T00Z/2012-01-11T00Z"),new Interval("2012-02-01T00Z/2012-03-01T00Z")),Lists.newArrayList(spec.bucketIntervals().get()));
  Assert.assertEquals("2012-01-03T00Z",Optional.of(new Interval("2012-01-03T00Z/2012-01-04T00Z")),spec.bucketInterval(new DateTime("2012-01-03T00Z")));
  Assert.assertEquals("2012-01-03T01Z",Optional.of(new Interval("2012-01-03T00Z/2012-01-04T00Z")),spec.bucketInterval(new DateTime("2012-01-03T01Z")));
  Assert.assertEquals("2012-01-04T01Z",Optional.<Interval>absent(),spec.bucketInterval(new DateTime("2012-01-04T01Z")));
  Assert.assertEquals("2012-01-07T23:59:59.999Z",Optional.of(new Interval("2012-01-07T00Z/2012-01-08T00Z")),spec.bucketInterval(new DateTime("2012-01-07T23:59:59.999Z")));
  Assert.assertEquals("2012-01-08T01Z",Optional.of(new Interval("2012-01-08T00Z/2012-01-11T00Z")),spec.bucketInterval(new DateTime("2012-01-08T01Z")));
  Assert.assertEquals("2012-01-04T00Z",Optional.absent(),spec.bucketInterval(new DateTime("2012-01-04T00Z")));
  Assert.assertEquals("2012-01-05T00Z",Optional.absent(),spec.bucketInterval(new DateTime("2012-01-05T00Z")));
}
