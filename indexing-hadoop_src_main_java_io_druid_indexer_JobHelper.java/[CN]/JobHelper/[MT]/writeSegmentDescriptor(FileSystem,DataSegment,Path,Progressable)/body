{
  final DataPusher descriptorPusher=(DataPusher)RetryProxy.create(DataPusher.class,new DataPusher(){
    @Override public long push() throws IOException {
      try {
        progressable.progress();
        if (outputFS.exists(descriptorPath)) {
          if (!outputFS.delete(descriptorPath,false)) {
            throw new IOException(String.format("Failed to delete descriptor at [%s]",descriptorPath));
          }
        }
        try (final OutputStream descriptorOut=outputFS.create(descriptorPath,true,DEFAULT_FS_BUFFER_SIZE,progressable)){
          HadoopDruidIndexerConfig.JSON_MAPPER.writeValue(descriptorOut,segment);
          descriptorOut.flush();
        }
       }
 catch (      RuntimeException|IOException ex) {
        log.info(ex,"Exception in descriptor pusher retry loop");
        throw ex;
      }
      return -1;
    }
  }
,RetryPolicies.exponentialBackoffRetry(NUM_RETRIES,SECONDS_BETWEEN_RETRIES,TimeUnit.SECONDS));
  descriptorPusher.push();
}
