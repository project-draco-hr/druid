{
  final CloserRule closer=new CloserRule(true);
  final AtomicBoolean closed=new AtomicBoolean(false);
  final String ioExceptionMsg="You can't triple stamp a double stamp!";
  final IOException suppressed=new IOException(ioExceptionMsg);
  closer.closeLater(new Closeable(){
    @Override public void close() throws IOException {
      throw suppressed;
    }
  }
);
  closer.closeLater(new Closeable(){
    @Override public void close() throws IOException {
      closed.set(true);
    }
  }
);
  final String msg="You can't divide by zero, you can only take the limit of such!";
  final ArithmeticException arithmeticException=new ArithmeticException(msg);
  Throwable ex=null;
  try {
    run(closer,new Runnable(){
      @Override public void run(){
        throw arithmeticException;
      }
    }
);
  }
 catch (  Throwable e) {
    ex=e;
  }
  Assert.assertEquals(arithmeticException,ex);
  Assert.assertNotNull(ex);
  Assert.assertNotNull(ex.getSuppressed());
  Assert.assertEquals(suppressed,ex.getSuppressed()[0]);
}
