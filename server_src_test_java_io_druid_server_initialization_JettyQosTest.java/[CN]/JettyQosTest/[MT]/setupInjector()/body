{
  return Initialization.makeInjectorWithModules(GuiceInjectors.makeStartupInjector(),ImmutableList.<Module>of(new Module(){
    @Override public void configure(    Binder binder){
      JsonConfigProvider.bindInstance(binder,Key.get(DruidNode.class,Self.class),new DruidNode("test","localhost",null));
      binder.bind(JettyServerInitializer.class).to(JettyServerInit.class).in(LazySingleton.class);
      Jerseys.addResource(binder,SlowResource.class);
      Jerseys.addResource(binder,ExceptionResource.class);
      Jerseys.addResource(binder,DefaultResource.class);
      JettyBindings.addQosFilter(binder,"/slow/*",2);
      final ServerConfig serverConfig=new ObjectMapper().convertValue(ImmutableMap.of("numThreads","10"),ServerConfig.class);
      binder.bind(ServerConfig.class).toInstance(serverConfig);
      LifecycleModule.register(binder,Server.class);
    }
  }
));
}
