{
synchronized (log) {
    try {
      if (events.isEmpty()) {
        makeEvents();
      }
      for (      final Map<String,Object> event : events) {
        final long timestamp=new DateTime(event.get(TIMESTAMP)).getMillis();
        final List<String> dims=Lists.newArrayList();
        for (        Map.Entry<String,Object> entry : event.entrySet()) {
          if (!entry.getKey().equalsIgnoreCase(TIMESTAMP) && !METRICS.contains(entry.getKey())) {
            dims.add(entry.getKey());
          }
        }
        final IncrementalIndex rowIndex=new IncrementalIndex(timestamp,QueryGranularity.MINUTE,METRIC_AGGS,TestQueryRunners.pool);
        rowIndex.add(new MapBasedInputRow(timestamp,dims,event));
        File tmpFile=File.createTempFile("billy","yay");
        tmpFile.delete();
        tmpFile.mkdirs();
        tmpFile.deleteOnExit();
        IndexMaker.persist(rowIndex,tmpFile);
        rowPersistedIndexes.add(IndexIO.loadIndex(tmpFile));
      }
    }
 catch (    IOException e) {
      throw Throwables.propagate(e);
    }
  }
}
