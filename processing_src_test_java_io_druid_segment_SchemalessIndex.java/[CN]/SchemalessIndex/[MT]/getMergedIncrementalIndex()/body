{
synchronized (log) {
    if (mergedIndex != null) {
      return mergedIndex;
    }
    try {
      IncrementalIndex top=makeIncrementalIndex("druid.sample.json.top",METRIC_AGGS);
      IncrementalIndex bottom=makeIncrementalIndex("druid.sample.json.bottom",METRIC_AGGS);
      File tmpFile=File.createTempFile("yay","who");
      tmpFile.delete();
      File topFile=new File(tmpFile,"top");
      File bottomFile=new File(tmpFile,"bottom");
      File mergedFile=new File(tmpFile,"merged");
      topFile.mkdirs();
      topFile.deleteOnExit();
      bottomFile.mkdirs();
      bottomFile.deleteOnExit();
      mergedFile.mkdirs();
      mergedFile.deleteOnExit();
      IndexMerger.persist(top,topFile,indexSpec);
      IndexMerger.persist(bottom,bottomFile,indexSpec);
      mergedIndex=io.druid.segment.IndexIO.loadIndex(IndexMerger.mergeQueryableIndex(Arrays.asList(IndexIO.loadIndex(topFile),IndexIO.loadIndex(bottomFile)),METRIC_AGGS,mergedFile,indexSpec));
      return mergedIndex;
    }
 catch (    IOException e) {
      mergedIndex=null;
      throw Throwables.propagate(e);
    }
  }
}
