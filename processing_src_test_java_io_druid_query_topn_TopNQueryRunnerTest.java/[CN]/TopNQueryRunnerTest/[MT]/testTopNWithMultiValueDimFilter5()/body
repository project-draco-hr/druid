{
  TopNQuery query=new TopNQueryBuilder().dataSource(QueryRunnerTestHelper.dataSource).granularity(QueryRunnerTestHelper.allGran).filters(QueryRunnerTestHelper.placementishDimension,"preferred").dimension(QueryRunnerTestHelper.placementishDimension).metric(QueryRunnerTestHelper.indexMetric).threshold(4).intervals(QueryRunnerTestHelper.firstToThird).aggregators(QueryRunnerTestHelper.commonAggregators).postAggregators(Arrays.<PostAggregator>asList(QueryRunnerTestHelper.addRowsIndexConstant)).build();
  final ArrayList<Result<TopNResultValue>> expectedResults=Lists.newArrayList(new Result<>(new DateTime("2011-04-01T00:00:00.000Z"),new TopNResultValue(Arrays.<Map<String,Object>>asList(ImmutableMap.<String,Object>of("placementish","preferred","rows",26L,"index",12459.361190795898D,"addRowsIndexConstant",12486.361190795898D,"uniques",QueryRunnerTestHelper.UNIQUES_9),ImmutableMap.<String,Object>of("placementish","p","rows",6L,"index",5407.213653564453D,"addRowsIndexConstant",5414.213653564453D,"uniques",QueryRunnerTestHelper.UNIQUES_1),ImmutableMap.<String,Object>of("placementish","m","rows",6L,"index",5320.717338562012D,"addRowsIndexConstant",5327.717338562012D,"uniques",QueryRunnerTestHelper.UNIQUES_1),ImmutableMap.<String,Object>of("placementish","t","rows",4L,"index",422.3440856933594D,"addRowsIndexConstant",427.3440856933594D,"uniques",QueryRunnerTestHelper.UNIQUES_2)))));
  assertExpectedResults(expectedResults,query);
}
