{
  EasyMock.expect(testServletRequest.getAttribute(EasyMock.anyString())).andReturn(new AuthorizationInfo(){
    @Override public Access isAuthorized(    Resource resource,    Action action){
      if (resource.getName().equals("allow")) {
        return new Access(true);
      }
 else {
        return new Access(false);
      }
    }
  }
).times(2);
  EasyMock.replay(testServletRequest);
  queryResource=new QueryResource(warehouse,serverConfig,jsonMapper,jsonMapper,testSegmentWalker,new NoopServiceEmitter(),new NoopRequestLogger(),queryManager,new AuthConfig(true));
  Response response=queryResource.doPost(new ByteArrayInputStream(simpleTimeSeriesQuery.getBytes("UTF-8")),null,testServletRequest);
  Assert.assertEquals(Response.Status.FORBIDDEN.getStatusCode(),response.getStatus());
  response=queryResource.doPost(new ByteArrayInputStream("{\"queryType\":\"timeBoundary\", \"dataSource\":\"allow\"}".getBytes("UTF-8")),null,testServletRequest);
  Assert.assertEquals(Response.Status.OK.getStatusCode(),response.getStatus());
}
