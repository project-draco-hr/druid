{
  if (segment == null) {
    final List<DataSegment> segments=toolbox.getTaskActionClient().submit(new SegmentListUsedAction(getDataSource(),getInterval()));
    final FunctionalIterable<Task> tasks=FunctionalIterable.create(segments).keep(new Function<DataSegment,Task>(){
      @Override public Task apply(      DataSegment segment){
        final Integer segmentVersion=segment.getBinaryVersion();
        if (!CURR_VERSION_INTEGER.equals(segmentVersion)) {
          return new SubTask(getGroupId(),segment,indexSpec,force);
        }
 else         if (force) {
          log.info("Segment[%s] already at version[%s], forcing conversion",segment.getIdentifier(),segmentVersion);
          return new SubTask(getGroupId(),segment,indexSpec,force);
        }
 else {
          log.info("Skipping[%s], already version[%s]",segment.getIdentifier(),segmentVersion);
          return null;
        }
      }
    }
);
    for (    final Task subTask : tasks) {
      final TaskStatus status=subTask.run(toolbox);
      if (!status.isSuccess()) {
        return status;
      }
    }
  }
 else {
    log.info("I'm in a subless mood.");
    convertSegment(toolbox,segment,indexSpec,force);
  }
  return success();
}
