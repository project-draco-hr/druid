{
  final Iterable<DataSegment> segmentsToUpdate;
  if (segment == null) {
    final List<DataSegment> segments=toolbox.getTaskActionClient().submit(new SegmentListUsedAction(getDataSource(),getInterval()));
    segmentsToUpdate=FunctionalIterable.create(segments).filter(new Predicate<DataSegment>(){
      @Override public boolean apply(      DataSegment segment){
        final Integer segmentVersion=segment.getBinaryVersion();
        if (!CURR_VERSION_INTEGER.equals(segmentVersion)) {
          return true;
        }
 else         if (force) {
          log.info("Segment[%s] already at version[%s], forcing conversion",segment.getIdentifier(),segmentVersion);
          return true;
        }
 else {
          log.info("Skipping[%s], already version[%s]",segment.getIdentifier(),segmentVersion);
          return false;
        }
      }
    }
);
  }
 else {
    log.info("I'm in a subless mood.");
    segmentsToUpdate=Collections.singleton(segment);
  }
  for (  final Task subTask : generateSubTasks(getGroupId(),segmentsToUpdate,indexSpec,force,validate,getContext())) {
    final TaskStatus status=subTask.run(toolbox);
    if (!status.isSuccess()) {
      return TaskStatus.fromCode(getId(),status.getStatusCode());
    }
  }
  return success();
}
