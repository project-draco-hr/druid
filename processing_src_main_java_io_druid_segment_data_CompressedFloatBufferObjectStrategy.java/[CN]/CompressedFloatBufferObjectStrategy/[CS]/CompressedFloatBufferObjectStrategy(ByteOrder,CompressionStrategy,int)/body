{
  super(order,new BufferConverter<FloatBuffer>(){
    @Override public FloatBuffer convert(    ByteBuffer buf){
      return buf.asFloatBuffer();
    }
    @Override public int compare(    FloatBuffer lhs,    FloatBuffer rhs){
      return Ordering.natural().nullsFirst().compare(lhs,rhs);
    }
    @Override public int sizeOf(    int count){
      return count * Floats.BYTES;
    }
    @Override public FloatBuffer combine(    ByteBuffer into,    FloatBuffer from){
      return into.asFloatBuffer().put(from);
    }
  }
,compression);
  this.sizePer=sizePer;
}
