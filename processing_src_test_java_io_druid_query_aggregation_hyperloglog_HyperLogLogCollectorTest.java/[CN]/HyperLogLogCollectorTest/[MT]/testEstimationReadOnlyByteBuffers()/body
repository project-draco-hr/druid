{
  Random random=new Random(0l);
  final int[] valsToCheck={10,20,50,100,1000,2000,5000,10000,20000,50000,100000,1000000,2000000};
  final double[] expectedVals={11.029647221949576,21.108407720752034,51.64575281885815,100.42231726408892,981.8579991802412,1943.1337257462792,4946.192042635218,9935.088157579434,20366.1486889433,49433.56029693898,100615.26273314281,980831.624899156000,1982408.2608981386};
  int valsToCheckIndex=0;
  HyperLogLogCollector collector=HyperLogLogCollector.makeCollector(ByteBuffer.allocateDirect(HyperLogLogCollector.getLatestNumBytesForDenseStorage()));
  for (int i=0; i < valsToCheck[valsToCheck.length - 1]; ++i) {
    collector.add(fn.hashLong(random.nextLong()).asBytes());
    if (i == valsToCheck[valsToCheckIndex]) {
      Assert.assertEquals(expectedVals[valsToCheckIndex],collector.estimateCardinality(),0.0d);
      ++valsToCheckIndex;
    }
  }
  Assert.assertEquals(expectedVals.length,valsToCheckIndex + 1);
  Assert.assertEquals(expectedVals[valsToCheckIndex],collector.estimateCardinality(),0.0d);
}
