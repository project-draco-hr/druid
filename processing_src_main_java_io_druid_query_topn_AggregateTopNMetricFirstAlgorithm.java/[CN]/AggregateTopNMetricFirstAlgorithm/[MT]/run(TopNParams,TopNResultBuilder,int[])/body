{
  final String metric=query.getTopNMetricSpec().getMetricName(query.getDimensionSpec());
  Pair<List<AggregatorFactory>,List<PostAggregator>> condensedAggPostAggPair=AggregatorUtil.condensedAggregators(query.getAggregatorSpecs(),query.getPostAggregatorSpecs(),metric);
  if (condensedAggPostAggPair.lhs.isEmpty() && condensedAggPostAggPair.rhs.isEmpty()) {
    throw new ISE("WTF! Can't find the metric to do topN over?");
  }
  TopNQuery singleMetricQuery=new TopNQueryBuilder().copy(query).aggregators(condensedAggPostAggPair.lhs).postAggregators(condensedAggPostAggPair.rhs).build();
  final TopNResultBuilder singleMetricResultBuilder=BaseTopNAlgorithm.makeResultBuilder(params,singleMetricQuery);
  PooledTopNAlgorithm singleMetricAlgo=new PooledTopNAlgorithm(capabilities,singleMetricQuery,bufferPool);
  PooledTopNAlgorithm.PooledTopNParams singleMetricParam=null;
  int[] dimValSelector=null;
  try {
    singleMetricParam=singleMetricAlgo.makeInitParams(params.getDimSelector(),params.getCursor());
    singleMetricAlgo.run(singleMetricParam,singleMetricResultBuilder,null);
    dimValSelector=getDimValSelectorForTopNMetric(singleMetricParam,singleMetricResultBuilder);
  }
  finally {
    if (singleMetricParam != null) {
      singleMetricAlgo.cleanup(singleMetricParam);
    }
  }
  PooledTopNAlgorithm allMetricAlgo=new PooledTopNAlgorithm(capabilities,query,bufferPool);
  PooledTopNAlgorithm.PooledTopNParams allMetricsParam=null;
  try {
    allMetricsParam=allMetricAlgo.makeInitParams(params.getDimSelector(),params.getCursor());
    allMetricAlgo.run(allMetricsParam,resultBuilder,dimValSelector);
  }
  finally {
    if (allMetricsParam != null) {
      allMetricAlgo.cleanup(allMetricsParam);
    }
  }
}
