{
  EasyMock.reset(autoScaler);
  EasyMock.expect(autoScaler.getMinNumWorkers()).andReturn(0);
  EasyMock.expect(autoScaler.getMaxNumWorkers()).andReturn(2);
  EasyMock.expect(autoScaler.ipToIdLookup(EasyMock.<List<String>>anyObject())).andReturn(Lists.newArrayList("ip"));
  EasyMock.replay(autoScaler);
  RemoteTaskRunner runner=EasyMock.createMock(RemoteTaskRunner.class);
  EasyMock.expect(runner.getPendingTasks()).andReturn(Collections.<RemoteTaskRunnerWorkItem>emptyList()).times(3);
  EasyMock.expect(runner.getWorkers()).andReturn(Collections.<ZkWorker>singletonList(new TestZkWorker(NoopTask.create(),"h1","i1","0"))).times(3);
  EasyMock.expect(runner.getLazyWorkers()).andReturn(Lists.<ZkWorker>newArrayList());
  EasyMock.expect(runner.markWorkersLazy(EasyMock.<Predicate<ZkWorker>>anyObject(),EasyMock.anyInt())).andReturn(Collections.<ZkWorker>emptyList());
  EasyMock.replay(runner);
  boolean terminatedSomething=simpleResourceManagementStrategy.doTerminate(runner);
  Assert.assertFalse(terminatedSomething);
  EasyMock.verify(autoScaler);
  EasyMock.reset(autoScaler);
  EasyMock.expect(autoScaler.getMinNumWorkers()).andReturn(0);
  EasyMock.expect(autoScaler.getMaxNumWorkers()).andReturn(2);
  EasyMock.expect(autoScaler.ipToIdLookup(EasyMock.<List<String>>anyObject())).andReturn(Lists.newArrayList("ip"));
  EasyMock.replay(autoScaler);
  boolean provisionedSomething=simpleResourceManagementStrategy.doProvision(runner);
  Assert.assertFalse(provisionedSomething);
  EasyMock.verify(autoScaler);
  EasyMock.reset(autoScaler);
  EasyMock.expect(autoScaler.getMinNumWorkers()).andReturn(3);
  EasyMock.expect(autoScaler.getMaxNumWorkers()).andReturn(5);
  EasyMock.expect(autoScaler.ipToIdLookup(EasyMock.<List<String>>anyObject())).andReturn(Lists.newArrayList("ip"));
  EasyMock.expect(autoScaler.provision()).andReturn(new AutoScalingData(Lists.newArrayList("h3")));
  EasyMock.expect(autoScaler.provision()).andReturn(new AutoScalingData(Lists.newArrayList("h4")));
  EasyMock.replay(autoScaler);
  provisionedSomething=simpleResourceManagementStrategy.doProvision(runner);
  Assert.assertTrue(provisionedSomething);
  EasyMock.verify(autoScaler);
  EasyMock.verify(runner);
}
