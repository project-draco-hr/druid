{
  final File tmpDir=Files.createTempDir();
  try {
    final File logDir=new File(tmpDir,"druid/logs");
    final File logFile=new File(tmpDir,"log");
    Files.write("blah",logFile,Charsets.UTF_8);
    final TaskLogs taskLogs=new FileTaskLogs(new FileTaskLogsConfig(logDir));
    taskLogs.pushTaskLog("foo",logFile);
    final Map<Long,String> expected=ImmutableMap.of(0L,"blah",1L,"lah",-2L,"ah",-5L,"blah");
    for (    Map.Entry<Long,String> entry : expected.entrySet()) {
      final byte[] bytes=ByteStreams.toByteArray(taskLogs.streamTaskLog("foo",entry.getKey()).get().getInput());
      final String string=new String(bytes);
      Assert.assertEquals(String.format("Read with offset %,d",entry.getKey()),string,entry.getValue());
    }
  }
  finally {
    FileUtils.deleteDirectory(tmpDir);
  }
}
