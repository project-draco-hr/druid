{
  int retVal=Longs.compare(lhs.timestamp,rhs.timestamp);
  int numComparisons=Math.min(lhs.dims.length,rhs.dims.length);
  int index=0;
  while (retVal == 0 && index < numComparisons) {
    final Object lhsIdxs=lhs.dims[index];
    final Object rhsIdxs=rhs.dims[index];
    if (lhsIdxs == null) {
      if (rhsIdxs == null) {
        ++index;
        continue;
      }
      return -1;
    }
    if (rhsIdxs == null) {
      return 1;
    }
    final DimensionIndexer indexer=dimensionDescs.get(index).getIndexer();
    retVal=indexer.compareUnsortedEncodedArrays(lhsIdxs,rhsIdxs);
    ++index;
  }
  if (retVal == 0) {
    return Ints.compare(lhs.dims.length,rhs.dims.length);
  }
  return retVal;
}
