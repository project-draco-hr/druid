{
  this.minTimestamp=incrementalIndexSchema.getMinTimestamp();
  this.gran=incrementalIndexSchema.getGran();
  this.rollup=incrementalIndexSchema.isRollup();
  this.metrics=incrementalIndexSchema.getMetrics();
  this.rowTransformers=new CopyOnWriteArrayList<>();
  this.deserializeComplexMetrics=deserializeComplexMetrics;
  this.reportParseExceptions=reportParseExceptions;
  this.columnCapabilities=Maps.newHashMap();
  this.metadata=new Metadata().setAggregators(getCombiningAggregators(metrics)).setTimestampSpec(incrementalIndexSchema.getTimestampSpec()).setQueryGranularity(this.gran).setRollup(this.rollup);
  this.aggs=initAggs(metrics,rowSupplier,deserializeComplexMetrics);
  this.metricDescs=Maps.newLinkedHashMap();
  for (  AggregatorFactory metric : metrics) {
    MetricDesc metricDesc=new MetricDesc(metricDescs.size(),metric);
    metricDescs.put(metricDesc.getName(),metricDesc);
    columnCapabilities.put(metricDesc.getName(),metricDesc.getCapabilities());
  }
  DimensionsSpec dimensionsSpec=incrementalIndexSchema.getDimensionsSpec();
  this.dimensionDescs=Maps.newLinkedHashMap();
  this.dimensionDescsList=new ArrayList<>();
  for (  DimensionSchema dimSchema : dimensionsSpec.getDimensions()) {
    ValueType type=TYPE_MAP.get(dimSchema.getValueType());
    String dimName=dimSchema.getName();
    ColumnCapabilitiesImpl capabilities=makeCapabilitesFromValueType(type);
    if (dimSchema.getTypeName().equals(DimensionSchema.SPATIAL_TYPE_NAME)) {
      capabilities.setHasSpatialIndexes(true);
    }
 else {
      DimensionHandler handler=DimensionHandlerUtil.getHandlerFromCapabilities(dimName,capabilities);
      addNewDimension(dimName,capabilities,handler);
    }
    columnCapabilities.put(dimName,capabilities);
  }
  ColumnCapabilitiesImpl timeCapabilities=new ColumnCapabilitiesImpl();
  timeCapabilities.setType(ValueType.LONG);
  columnCapabilities.put(Column.TIME_COLUMN_NAME,timeCapabilities);
  List<SpatialDimensionSchema> spatialDimensions=dimensionsSpec.getSpatialDimensions();
  if (!spatialDimensions.isEmpty()) {
    this.rowTransformers.add(new SpatialDimensionRowTransformer(spatialDimensions));
  }
}
