{
  final TestObjectColumnSelector ocs=new TestObjectColumnSelector("what",null,new String[]{"hey","there"});
  final JavaScriptAggregator agg=new JavaScriptAggregator("billy",Collections.<ObjectColumnSelector>singletonList(ocs),JavaScriptAggregatorFactory.compileScript("function aggregate(current, a) { if (Array.isArray(a)) { return current + a.length; } else if (typeof a === 'string') { return current + 1; } else { return current; } }",scriptDoubleSum.get("fnReset"),scriptDoubleSum.get("fnCombine")));
  agg.reset();
  Assert.assertEquals("billy",agg.getName());
  double val=0.;
  Assert.assertEquals(val,agg.get());
  Assert.assertEquals(val,agg.get());
  Assert.assertEquals(val,agg.get());
  aggregate(ocs,agg);
  val+=1;
  Assert.assertEquals(val,agg.get());
  Assert.assertEquals(val,agg.get());
  Assert.assertEquals(val,agg.get());
  aggregate(ocs,agg);
  Assert.assertEquals(val,agg.get());
  Assert.assertEquals(val,agg.get());
  Assert.assertEquals(val,agg.get());
  aggregate(ocs,agg);
  val+=2;
  Assert.assertEquals(val,agg.get());
  Assert.assertEquals(val,agg.get());
  Assert.assertEquals(val,agg.get());
}
