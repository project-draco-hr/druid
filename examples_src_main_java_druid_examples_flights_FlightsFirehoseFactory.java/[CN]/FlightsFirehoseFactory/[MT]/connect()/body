{
  File dir=new File(flightsFileLocation);
  final Iterator<File> files=Iterators.forArray(dir.listFiles());
  return new Firehose(){
    BufferedReader in=null;
    String line=null;
    @Override public boolean hasMore(){
      try {
        if (line != null) {
          return true;
        }
 else         if (in != null) {
          line=in.readLine();
          if (line == null) {
            Closeables.closeQuietly(in);
            in=null;
          }
          return true;
        }
 else         if (files.hasNext()) {
          final File nextFile=files.next();
          if (nextFile.getName().endsWith(".gz")) {
            in=new BufferedReader(new InputStreamReader(new GZIPInputStream(new FileInputStream(nextFile)),Charsets.UTF_8));
          }
 else {
            in=new BufferedReader(new FileReader(nextFile));
          }
          return hasMore();
        }
        Thread.currentThread().join();
        return false;
      }
 catch (      IOException e) {
        throw Throwables.propagate(e);
      }
catch (      InterruptedException e) {
        throw Throwables.propagate(e);
      }
    }
    @Override public InputRow nextRow(){
      final InputRow retVal=parser.parse(ByteBuffer.wrap(line.getBytes()));
      line=null;
      return retVal;
    }
    @Override public Runnable commit(){
      return new Runnable(){
        @Override public void run(){
        }
      }
;
    }
    @Override public void close() throws IOException {
      Closeables.closeQuietly(in);
    }
  }
;
}
