{
  ObjectColumnSelector selector=metricFactory.makeObjectColumnSelector(fieldName);
  if (selector == null) {
    return Aggregators.noopAggregator();
  }
  if ("float".equalsIgnoreCase(inputType)) {
    return new VarianceAggregator.FloatVarianceAggregator(name,metricFactory.makeFloatColumnSelector(fieldName));
  }
 else   if ("long".equalsIgnoreCase(inputType)) {
    return new VarianceAggregator.LongVarianceAggregator(name,metricFactory.makeLongColumnSelector(fieldName));
  }
 else   if ("variance".equalsIgnoreCase(inputType)) {
    return new VarianceAggregator.ObjectVarianceAggregator(name,selector);
  }
  throw new IAE("Incompatible type for metric[%s], expected a float, long or variance, got a %s",fieldName,inputType);
}
