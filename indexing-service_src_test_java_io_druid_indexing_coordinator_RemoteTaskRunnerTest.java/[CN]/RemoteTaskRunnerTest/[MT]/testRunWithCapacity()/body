{
  doSetup();
  TestRealtimeTask task1=new TestRealtimeTask("rt1",new TaskResource("rt1",1),"foo",TaskStatus.running("rt1"));
  remoteTaskRunner.run(task1);
  Assert.assertTrue(taskAnnounced(task1.getId()));
  mockWorkerRunningTask(task1);
  TestRealtimeTask task2=new TestRealtimeTask("rt2",new TaskResource("rt2",3),"foo",TaskStatus.running("rt2"));
  remoteTaskRunner.run(task2);
  TestRealtimeTask task3=new TestRealtimeTask("rt3",new TaskResource("rt3",2),"foo",TaskStatus.running("rt3"));
  remoteTaskRunner.run(task3);
  Assert.assertTrue(taskAnnounced(task3.getId()));
  mockWorkerRunningTask(task3);
  Assert.assertTrue(TestUtils.conditionValid(new IndexingServiceCondition(){
    @Override public boolean isValid(){
      return remoteTaskRunner.getRunningTasks().size() == 2;
    }
  }
));
  Assert.assertTrue(TestUtils.conditionValid(new IndexingServiceCondition(){
    @Override public boolean isValid(){
      return remoteTaskRunner.getPendingTasks().size() == 1;
    }
  }
));
  Assert.assertTrue(remoteTaskRunner.getPendingTasks().iterator().next().getTask().getId().equals("rt2"));
}
