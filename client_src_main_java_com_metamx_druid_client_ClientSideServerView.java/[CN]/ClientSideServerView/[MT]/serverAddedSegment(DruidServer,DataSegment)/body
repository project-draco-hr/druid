{
  String segmentId=segment.getIdentifier();
synchronized (lock) {
    log.info("Adding segment[%s] for server[%s]",segment,server);
    ServerSelector selector=selectors.get(segmentId);
    if (selector == null) {
      selector=new ServerSelector(segment);
      VersionedIntervalTimeline<String,ServerSelector> timeline=timelines.get(segment.getDataSource());
      if (timeline == null) {
        timeline=new VersionedIntervalTimeline<String,ServerSelector>(Ordering.natural());
        timelines.put(segment.getDataSource(),timeline);
      }
      timeline.add(segment.getInterval(),segment.getVersion(),segment.getShardSpec().createChunk(selector));
      selectors.put(segmentId,selector);
    }
    selector.addServer(server);
    runSegmentCallbacks(new Function<SegmentCallback,CallbackAction>(){
      @Override public CallbackAction apply(      @Nullable SegmentCallback input){
        return input.segmentAdded(server,segment);
      }
    }
);
  }
}
