{
  try {
    workerPathCache.getListenable().addListener(new PathChildrenCacheListener(){
      @Override public void childEvent(      CuratorFramework client,      final PathChildrenCacheEvent event) throws Exception {
        if (event.getType().equals(PathChildrenCacheEvent.Type.CHILD_ADDED)) {
          final Worker worker=jsonMapper.readValue(event.getData().getData(),Worker.class);
          log.info("Worker[%s] reportin' for duty!",worker.getHost());
          ZkWorker zkWorker=addWorker(worker);
          initWorker(zkWorker);
          runPendingTasks();
        }
 else         if (event.getType().equals(PathChildrenCacheEvent.Type.CHILD_REMOVED)) {
          final Worker worker=jsonMapper.readValue(event.getData().getData(),Worker.class);
          log.info("Kaboom! Worker[%s] removed!",worker.getHost());
          removeWorker(worker);
        }
      }
    }
);
    workerPathCache.start();
  }
 catch (  Exception e) {
    throw Throwables.propagate(e);
  }
}
