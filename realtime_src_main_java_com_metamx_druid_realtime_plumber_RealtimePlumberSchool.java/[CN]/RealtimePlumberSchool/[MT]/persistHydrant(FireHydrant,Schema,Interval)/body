{
  if (indexToPersist.hasSwapped()) {
    log.info("DataSource[%s], Interval[%s], Hydrant[%s] already swapped. Ignoring request to persist.",schema.getDataSource(),interval,indexToPersist);
    return 0;
  }
  log.info("DataSource[%s], Interval[%s], persisting Hydrant[%s]",schema.getDataSource(),interval,indexToPersist);
  try {
    int numRows=indexToPersist.getIndex().size();
    File persistedFile=IndexMerger.persist(indexToPersist.getIndex(),new File(computePersistDir(schema,interval),String.valueOf(indexToPersist.getCount())));
    indexToPersist.swapSegment(new QueryableIndexSegment(null,IndexIO.loadIndex(persistedFile)));
    return numRows;
  }
 catch (  IOException e) {
    log.makeAlert("dataSource[%s] -- incremental persist failed",schema.getDataSource()).addData("interval",interval).addData("count",indexToPersist.getCount()).emit();
    throw Throwables.propagate(e);
  }
}
