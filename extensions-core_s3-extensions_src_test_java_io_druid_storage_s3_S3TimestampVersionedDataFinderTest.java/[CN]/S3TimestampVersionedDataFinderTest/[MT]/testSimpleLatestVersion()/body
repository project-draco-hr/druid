{
  String bucket="bucket";
  String keyPrefix="prefix/dir/0";
  RestS3Service s3Client=EasyMock.createStrictMock(RestS3Service.class);
  S3Object object0=new S3Object(), object1=new S3Object();
  object0.setBucketName(bucket);
  object0.setKey(keyPrefix + "/renames-0.gz");
  object0.setLastModifiedDate(new Date(0));
  object1.setBucketName(bucket);
  object1.setKey(keyPrefix + "/renames-1.gz");
  object1.setLastModifiedDate(new Date(1));
  EasyMock.expect(s3Client.listObjects(EasyMock.eq(bucket),EasyMock.anyString(),EasyMock.eq("/"))).andReturn(new S3Object[]{object0,object1}).once();
  S3TimestampVersionedDataFinder finder=new S3TimestampVersionedDataFinder(s3Client);
  Pattern pattern=Pattern.compile("renames-[0-9]*\\.gz");
  EasyMock.replay(s3Client);
  URI latest=finder.getLatestVersion(URI.create(String.format("s3://%s/%s",bucket,object0.getKey())),pattern);
  EasyMock.verify(s3Client);
  URI expected=URI.create(String.format("s3://%s/%s",bucket,object1.getKey()));
  Assert.assertEquals(expected,latest);
}
