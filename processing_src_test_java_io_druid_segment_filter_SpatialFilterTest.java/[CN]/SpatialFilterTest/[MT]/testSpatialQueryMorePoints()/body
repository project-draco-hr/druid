{
  TimeseriesQuery query=Druids.newTimeseriesQueryBuilder().dataSource("test").granularity(QueryGranularity.DAY).intervals(Arrays.asList(new Interval("2013-01-01/2013-01-07"))).filters(new SpatialDimFilter("dim.geo",new RectangularBound(new float[]{0.0f,0.0f},new float[]{9.0f,9.0f}))).aggregators(Arrays.asList(new CountAggregatorFactory("rows"),new LongSumAggregatorFactory("val","val"))).build();
  List<Result<TimeseriesResultValue>> expectedResults=Arrays.asList(new Result<>(new DateTime("2013-01-01T00:00:00.000Z"),new TimeseriesResultValue(ImmutableMap.<String,Object>builder().put("rows",1L).put("val",17l).build())),new Result<>(new DateTime("2013-01-02T00:00:00.000Z"),new TimeseriesResultValue(ImmutableMap.<String,Object>builder().put("rows",1L).put("val",29l).build())),new Result<>(new DateTime("2013-01-03T00:00:00.000Z"),new TimeseriesResultValue(ImmutableMap.<String,Object>builder().put("rows",1L).put("val",13l).build())),new Result<>(new DateTime("2013-01-04T00:00:00.000Z"),new TimeseriesResultValue(ImmutableMap.<String,Object>builder().put("rows",1L).put("val",91l).build())),new Result<>(new DateTime("2013-01-05T00:00:00.000Z"),new TimeseriesResultValue(ImmutableMap.<String,Object>builder().put("rows",1L).put("val",47l).build())));
  try {
    TimeseriesQueryRunnerFactory factory=new TimeseriesQueryRunnerFactory(new TimeseriesQueryQueryToolChest(new QueryConfig()),new TimeseriesQueryEngine(),QueryRunnerTestHelper.NOOP_QUERYWATCHER);
    QueryRunner runner=new FinalizeResultsQueryRunner(factory.createRunner(segment),factory.getToolchest());
    TestHelper.assertExpectedResults(expectedResults,runner.run(query));
  }
 catch (  Exception e) {
    throw Throwables.propagate(e);
  }
}
