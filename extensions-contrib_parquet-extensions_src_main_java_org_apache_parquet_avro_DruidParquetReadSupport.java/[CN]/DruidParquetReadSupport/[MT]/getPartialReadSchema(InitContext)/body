{
  MessageType fullSchema=context.getFileSchema();
  String name=fullSchema.getName();
  HadoopDruidIndexerConfig config=HadoopDruidIndexerConfig.fromConfiguration(context.getConfiguration());
  String tsField=config.getParser().getParseSpec().getTimestampSpec().getTimestampColumn();
  List<DimensionSchema> dimensionSchema=config.getParser().getParseSpec().getDimensionsSpec().getDimensions();
  Set<String> dimensions=Sets.newHashSet();
  for (  DimensionSchema dim : dimensionSchema) {
    dimensions.add(dim.getName());
  }
  Set<String> metricsFields=Sets.newHashSet();
  for (  AggregatorFactory agg : config.getSchema().getDataSchema().getAggregators()) {
    metricsFields.addAll(agg.requiredFields());
  }
  List<Type> partialFields=Lists.newArrayList();
  for (  Type type : fullSchema.getFields()) {
    if (tsField.equals(type.getName()) || metricsFields.contains(type.getName()) || dimensions.size() > 0 && dimensions.contains(type.getName()) || dimensions.size() == 0) {
      partialFields.add(type);
    }
  }
  return new MessageType(name,partialFields);
}
