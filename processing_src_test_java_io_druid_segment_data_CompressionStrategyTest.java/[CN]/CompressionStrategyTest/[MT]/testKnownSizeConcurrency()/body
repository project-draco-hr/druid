{
  final int numThreads=20;
  ListeningExecutorService threadPoolExecutor=MoreExecutors.listeningDecorator(Executors.newFixedThreadPool(numThreads));
  List<ListenableFuture<?>> results=new ArrayList<>();
  for (int i=0; i < numThreads; ++i) {
    results.add(threadPoolExecutor.submit(new Runnable(){
      @Override public void run(){
        ByteBuffer compressed=ByteBuffer.wrap(compressionStrategy.getCompressor().compress(originalData));
        ByteBuffer output=ByteBuffer.allocate(originalData.length);
        compressionStrategy.getDecompressor().decompress(compressed,compressed.array().length,output,originalData.length);
        byte[] checkArray=new byte[DATA_SIZER];
        output.get(checkArray);
        Assert.assertArrayEquals("Uncompressed data does not match",originalData,checkArray);
      }
    }
));
  }
  Futures.allAsList(results).get();
}
