{
  DefaultObjectMapper objectMapper=new DefaultObjectMapper();
  String segmentIdentifier="segment";
  SegmentDescriptor segmentDescriptor=new SegmentDescriptor(new Interval("2011/2012"),"version",0);
  CacheStrategy cacheStrategy=toolchest.getCacheStrategy(query);
  Cache.NamedKey cacheKey=CacheUtil.computeSegmentCacheKey(segmentIdentifier,segmentDescriptor,cacheStrategy.computeCacheKey(query));
  Cache cache=MapCache.create(1024 * 1024);
  CacheUtil.populate(cache,objectMapper,cacheKey,Iterables.transform(expectedResults,cacheStrategy.prepareForCache()));
  CachingQueryRunner runner=new CachingQueryRunner(segmentIdentifier,segmentDescriptor,objectMapper,cache,toolchest,new QueryRunner(){
    @Override public Sequence run(    Query query,    Map responseContext){
      return Sequences.empty();
    }
  }
,MoreExecutors.sameThreadExecutor(),new CacheConfig(){
    @Override public boolean isPopulateCache(){
      return true;
    }
    @Override public boolean isUseCache(){
      return true;
    }
  }
);
  HashMap<String,Object> context=new HashMap<String,Object>();
  List<Result> results=Sequences.toList(runner.run(query,context),new ArrayList());
  Assert.assertEquals(expectedResults.toString(),results.toString());
}
