{
  final QueryToolChest<T,Query<T>> toolChest=warehouse.getToolChest(query);
  final QueryRunner<T> baseRunner=CPUTimeMetricQueryRunner.safeBuild(new FinalizeResultsQueryRunner<T>(toolChest.postMergeQueryDecoration(toolChest.mergeResults(new UnionQueryRunner<T>(toolChest.preMergeQueryDecoration(new RetryQueryRunner<T>(baseClient,toolChest,retryConfig,objectMapper))))),toolChest),new Function<Query<T>,ServiceMetricEvent.Builder>(){
    @Nullable @Override public ServiceMetricEvent.Builder apply(    Query<T> tQuery){
      return toolChest.makeMetricBuilder(tQuery);
    }
  }
,emitter,new AtomicLong(0L),true);
  final Map<String,Object> context=query.getContext();
  PostProcessingOperator<T> postProcessing=null;
  if (context != null) {
    postProcessing=objectMapper.convertValue(context.get("postProcessing"),new TypeReference<PostProcessingOperator<T>>(){
    }
);
  }
  return postProcessing != null ? postProcessing.postProcess(baseRunner) : baseRunner;
}
