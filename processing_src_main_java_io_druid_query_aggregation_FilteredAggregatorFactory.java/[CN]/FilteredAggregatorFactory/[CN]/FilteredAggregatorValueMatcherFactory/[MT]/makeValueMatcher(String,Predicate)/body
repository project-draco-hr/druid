{
  final DimensionSelector selector=columnSelectorFactory.makeDimensionSelector(new DefaultDimensionSpec(dimension,dimension));
  if (selector == null) {
    return new BooleanValueMatcher(predicate.apply(null));
  }
  final int cardinality=selector.getValueCardinality();
  final BitSet valueIds=new BitSet(cardinality);
  for (int i=0; i < cardinality; i++) {
    if (predicate.apply(selector.lookupName(i))) {
      valueIds.set(i);
    }
  }
  return new ValueMatcher(){
    @Override public boolean matches(){
      final IndexedInts row=selector.getRow();
      final int size=row.size();
      for (int i=0; i < size; ++i) {
        if (valueIds.get(row.get(i))) {
          return true;
        }
      }
      return false;
    }
  }
;
}
