{
  final SelectorDimFilter selector;
  if (dimFilter instanceof NotDimFilter) {
    selector=(SelectorDimFilter)((NotDimFilter)dimFilter).getField();
  }
 else   if (dimFilter instanceof SelectorDimFilter) {
    selector=(SelectorDimFilter)dimFilter;
  }
 else {
    throw new UnsupportedOperationException("FilteredAggregator does not support DimFilter of type " + dimFilter.getClass());
  }
  final DimensionSelector dimSelector=metricFactory.makeDimensionSelector(selector.getDimension());
  final int lookupId=dimSelector.lookupId(selector.getValue());
  if (dimFilter instanceof SelectorDimFilter) {
    return Pair.<DimensionSelector,IntPredicate>of(dimSelector,new IntPredicate(){
      @Override public boolean apply(      int value){
        return lookupId == value;
      }
    }
);
  }
 else   if (dimFilter instanceof NotDimFilter) {
    return Pair.<DimensionSelector,IntPredicate>of(dimSelector,new IntPredicate(){
      @Override public boolean apply(      int value){
        return lookupId != value;
      }
    }
);
  }
 else {
    throw new UnsupportedOperationException("FilteredAggregator does not support DimFilter of type " + dimFilter.getClass());
  }
}
