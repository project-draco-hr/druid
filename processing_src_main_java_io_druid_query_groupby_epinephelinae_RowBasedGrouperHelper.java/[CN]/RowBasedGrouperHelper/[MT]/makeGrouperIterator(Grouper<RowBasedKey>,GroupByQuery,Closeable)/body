{
  return new CloseableGrouperIterator<>(grouper,true,new Function<Grouper.Entry<RowBasedKey>,Row>(){
    @Override public Row apply(    Grouper.Entry<RowBasedKey> entry){
      Map<String,Object> theMap=Maps.newLinkedHashMap();
      for (int i=0; i < entry.getKey().getDimensions().length; i++) {
        theMap.put(query.getDimensions().get(i).getOutputName(),Strings.emptyToNull(entry.getKey().getDimensions()[i]));
      }
      for (int i=0; i < entry.getValues().length; i++) {
        theMap.put(query.getAggregatorSpecs().get(i).getName(),entry.getValues()[i]);
      }
      return new MapBasedRow(query.getGranularity().toDateTime(entry.getKey().getTimestamp()),theMap);
    }
  }
,closeable);
}
