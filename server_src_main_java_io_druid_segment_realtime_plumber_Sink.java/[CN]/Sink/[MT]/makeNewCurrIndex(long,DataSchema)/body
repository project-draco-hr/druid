{
  final IncrementalIndexSchema indexSchema=new IncrementalIndexSchema.Builder().withMinTimestamp(minTimestamp).withTimestampSpec(schema.getParser()).withQueryGranularity(schema.getGranularitySpec().getQueryGranularity()).withDimensionsSpec(schema.getParser()).withMetrics(schema.getAggregators()).withRollup(schema.getGranularitySpec().isRollup()).build();
  final IncrementalIndex newIndex=new OnheapIncrementalIndex(indexSchema,reportParseExceptions,maxRowsInMemory);
  final FireHydrant old;
synchronized (hydrantLock) {
    if (writable) {
      old=currHydrant;
      int newCount=0;
      int numHydrants=hydrants.size();
      if (numHydrants > 0) {
        FireHydrant lastHydrant=hydrants.get(numHydrants - 1);
        newCount=lastHydrant.getCount() + 1;
        if (!indexSchema.getDimensionsSpec().hasCustomDimensions()) {
          if (lastHydrant.hasSwapped()) {
            QueryableIndex oldIndex=lastHydrant.getSegment().asQueryableIndex();
            for (            String dim : oldIndex.getAvailableDimensions()) {
              dimOrder.add(dim);
            }
          }
 else {
            IncrementalIndex oldIndex=lastHydrant.getIndex();
            dimOrder.addAll(oldIndex.getDimensionOrder());
          }
          newIndex.loadDimensionIterable(dimOrder);
        }
      }
      currHydrant=new FireHydrant(newIndex,newCount,getSegment().getIdentifier());
      if (old != null) {
        numRowsExcludingCurrIndex.addAndGet(old.getIndex().size());
      }
      hydrants.add(currHydrant);
    }
 else {
      newIndex.close();
      throw new ISE("finishWriting() called during swap");
    }
  }
  return old;
}
