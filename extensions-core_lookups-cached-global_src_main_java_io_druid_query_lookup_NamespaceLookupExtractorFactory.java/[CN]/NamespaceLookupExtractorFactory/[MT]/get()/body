{
  final Lock readLock=startStopSync.readLock();
  readLock.lock();
  try {
    if (!started) {
      throw new ISE("Factory [%s] not started",extractorID);
    }
    String preVersion=null, postVersion=null;
    Map<String,String> map=null;
    do {
      preVersion=manager.getVersion(extractorID);
      if (preVersion == null) {
        throw new ISE("Namespace vanished for [%s]",extractorID);
      }
      map=manager.getCacheMap(extractorID);
      postVersion=manager.getVersion(extractorID);
      if (postVersion == null) {
        manager.delete(extractorID);
        throw new ISE("Lookup [%s] is deleting",extractorID);
      }
    }
 while (!preVersion.equals(postVersion));
    final byte[] v=StringUtils.toUtf8(postVersion);
    final byte[] id=StringUtils.toUtf8(extractorID);
    return new MapLookupExtractor(map,isInjective()){
      @Override public byte[] getCacheKey(){
        return ByteBuffer.allocate(CLASS_CACHE_KEY.length + id.length + 1+ v.length+ 1+ 1).put(CLASS_CACHE_KEY).put(id).put((byte)0xFF).put(v).put((byte)0xFF).put(isOneToOne() ? (byte)1 : (byte)0).array();
      }
    }
;
  }
  finally {
    readLock.unlock();
  }
}
