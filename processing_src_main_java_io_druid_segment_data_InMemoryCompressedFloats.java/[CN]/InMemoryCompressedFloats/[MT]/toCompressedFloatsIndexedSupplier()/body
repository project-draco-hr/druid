{
  final FloatBuffer endBufCopy=endBuffer.asReadOnlyBuffer();
  endBufCopy.flip();
  return new CompressedFloatsIndexedSupplier(numInserted,sizePer,GenericIndexed.fromIterable(Iterables.<ResourceHolder<FloatBuffer>>concat(Iterables.transform(compressedBuffers,new Function<byte[],ResourceHolder<FloatBuffer>>(){
    @Override public ResourceHolder<FloatBuffer> apply(    byte[] input){
      return strategy.fromByteBuffer(ByteBuffer.wrap(input),input.length);
    }
  }
),Arrays.<ResourceHolder<FloatBuffer>>asList(StupidResourceHolder.create(endBufCopy))),strategy),COMPRESSION);
}
