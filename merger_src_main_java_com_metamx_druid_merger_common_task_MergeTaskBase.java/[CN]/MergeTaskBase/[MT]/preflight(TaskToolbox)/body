{
  try {
    final Function<DataSegment,String> toIdentifier=new Function<DataSegment,String>(){
      @Override public String apply(      DataSegment dataSegment){
        return dataSegment.getIdentifier();
      }
    }
;
    final Set<String> current=ImmutableSet.copyOf(Iterables.transform(toolbox.getTaskActionClient().submit(defaultListUsedAction()),toIdentifier));
    final Set<String> requested=ImmutableSet.copyOf(Iterables.transform(segments,toIdentifier));
    final Set<String> missingFromRequested=Sets.difference(current,requested);
    if (!missingFromRequested.isEmpty()) {
      throw new ISE("Merge is invalid: current segment(s) are not in the requested set: %s",Joiner.on(", ").join(missingFromRequested));
    }
    final Set<String> missingFromCurrent=Sets.difference(requested,current);
    if (!missingFromCurrent.isEmpty()) {
      throw new ISE("Merge is invalid: requested segment(s) are not in the current set: %s",Joiner.on(", ").join(missingFromCurrent));
    }
    return TaskStatus.running(getId());
  }
 catch (  IOException e) {
    throw Throwables.propagate(e);
  }
}
