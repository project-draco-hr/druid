{
  final Capabilities capabilities=adapter.getCapabilities();
  final int cardinality=adapter.getDimensionCardinality(query.getDimensionSpec().getDimension());
  int numBytesPerRecord=0;
  for (  AggregatorFactory aggregatorFactory : query.getAggregatorSpecs()) {
    numBytesPerRecord+=aggregatorFactory.getMaxIntermediateSize();
  }
  final TopNAlgorithmSelector selector=new TopNAlgorithmSelector(cardinality,numBytesPerRecord);
  query.initTopNAlgorithmSelector(selector);
  TopNAlgorithm topNAlgorithm=null;
  if (selector.isHasDimExtractionFn()) {
    topNAlgorithm=new DimExtractionTopNAlgorithm(capabilities,query);
  }
 else   if (selector.isAggregateAllMetrics()) {
    topNAlgorithm=new PooledTopNAlgorithm(capabilities,query,bufferPool);
  }
 else   if (selector.isAggregateTopNMetricFirst()) {
    topNAlgorithm=new AggregateTopNMetricFirstAlgorithm(capabilities,query,bufferPool);
  }
 else {
    topNAlgorithm=new PooledTopNAlgorithm(capabilities,query,bufferPool);
  }
  return new TopNMapFn(query,topNAlgorithm);
}
