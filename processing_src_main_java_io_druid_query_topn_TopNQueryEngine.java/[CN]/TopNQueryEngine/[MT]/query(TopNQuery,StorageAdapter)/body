{
  final List<Interval> queryIntervals=query.getQuerySegmentSpec().getIntervals();
  final Filter filter=Filters.convertDimensionFilters(query.getDimensionsFilter());
  final QueryGranularity granularity=query.getGranularity();
  final Function<Cursor,Result<TopNResultValue>> mapFn=getMapFn(query,adapter);
  Preconditions.checkArgument(queryIntervals.size() == 1,"Can only handle a single interval, got[%s]",queryIntervals);
  if (mapFn == null) {
    return Lists.newArrayList();
  }
  return FunctionalIterable.create(adapter.makeCursors(filter,queryIntervals.get(0),granularity)).transform(new Function<Cursor,Cursor>(){
    @Override public Cursor apply(    Cursor input){
      log.debug("Running over cursor[%s]",adapter.getInterval(),input.getTime());
      return input;
    }
  }
).keep(mapFn);
}
