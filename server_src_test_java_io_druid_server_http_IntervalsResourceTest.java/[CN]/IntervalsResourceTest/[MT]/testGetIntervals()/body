{
  EasyMock.expect(inventoryView.getInventory()).andReturn(ImmutableList.of(server)).atLeastOnce();
  EasyMock.replay(inventoryView);
  List<Interval> expectedIntervals=new ArrayList<>();
  expectedIntervals.add(new Interval("2010-01-01T00:00:00.000Z/2010-01-02T00:00:00.000Z"));
  expectedIntervals.add(new Interval("2010-01-22T00:00:00.000Z/2010-01-23T00:00:00.000Z"));
  IntervalsResource intervalsResource=new IntervalsResource(inventoryView);
  Response response=intervalsResource.getIntervals();
  TreeMap<Interval,Map<String,Map<String,Object>>> actualIntervals=(TreeMap)response.getEntity();
  Assert.assertEquals(2,actualIntervals.size());
  Assert.assertEquals(expectedIntervals.get(1),actualIntervals.firstKey());
  Assert.assertEquals(10L,actualIntervals.get(expectedIntervals.get(1)).get("datasource1").get("size"));
  Assert.assertEquals(1,actualIntervals.get(expectedIntervals.get(1)).get("datasource1").get("count"));
  Assert.assertEquals(expectedIntervals.get(0),actualIntervals.lastKey());
  Assert.assertEquals(20L,actualIntervals.get(expectedIntervals.get(0)).get("datasource1").get("size"));
  Assert.assertEquals(1,actualIntervals.get(expectedIntervals.get(0)).get("datasource1").get("count"));
  Assert.assertEquals(5L,actualIntervals.get(expectedIntervals.get(0)).get("datasource2").get("size"));
  Assert.assertEquals(1,actualIntervals.get(expectedIntervals.get(0)).get("datasource2").get("count"));
  EasyMock.verify(inventoryView);
}
