{
  final TimeBoundaryQuery query=Druids.newTimeBoundaryQueryBuilder().dataSource("foo").intervals("2013/2014").context(ImmutableMap.<String,Object>of("priority","1","useCache","true","populateCache","true","finalize","true")).build();
  final ObjectMapper mapper=new DefaultObjectMapper();
  final TimeBoundaryQuery serdeQuery=mapper.readValue(mapper.writeValueAsBytes(mapper.readValue(mapper.writeValueAsString(query),TimeBoundaryQuery.class)),TimeBoundaryQuery.class);
  Assert.assertEquals("1",serdeQuery.getContextValue("priority"));
  Assert.assertEquals("true",serdeQuery.getContextValue("useCache"));
  Assert.assertEquals("true",serdeQuery.getContextValue("populateCache"));
  Assert.assertEquals("true",serdeQuery.getContextValue("finalize"));
}
