{
  return new FileObject(){
    final Path path=new Path(uri);
    @Override public URI toUri(){
      return uri;
    }
    @Override public String getName(){
      return path.getName();
    }
    @Override public InputStream openInputStream() throws IOException {
      final FileSystem fs=path.getFileSystem(config);
      return fs.open(path);
    }
    @Override public OutputStream openOutputStream() throws IOException {
      final FileSystem fs=path.getFileSystem(config);
      return fs.create(path,overwrite);
    }
    @Override public Reader openReader(    boolean ignoreEncodingErrors) throws IOException {
      throw new UOE("HDFS Reader not supported");
    }
    @Override public CharSequence getCharContent(    boolean ignoreEncodingErrors) throws IOException {
      throw new UOE("HDFS CharSequence not supported");
    }
    @Override public Writer openWriter() throws IOException {
      throw new UOE("HDFS Writer not supported");
    }
    @Override public long getLastModified(){
      try {
        final FileSystem fs=path.getFileSystem(config);
        return fs.getFileStatus(path).getModificationTime();
      }
 catch (      IOException ex) {
        throw new HdfsIOException(ex);
      }
    }
    @Override public boolean delete(){
      try {
        final FileSystem fs=path.getFileSystem(config);
        return fs.delete(path,false);
      }
 catch (      IOException ex) {
        throw new HdfsIOException(ex);
      }
    }
  }
;
}
