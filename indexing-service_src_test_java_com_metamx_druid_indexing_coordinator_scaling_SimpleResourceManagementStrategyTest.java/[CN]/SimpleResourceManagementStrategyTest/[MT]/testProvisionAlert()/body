{
  ServiceEmitter emitter=EasyMock.createMock(ServiceEmitter.class);
  EmittingLogger.registerEmitter(emitter);
  emitter.emit(EasyMock.<ServiceEventBuilder>anyObject());
  EasyMock.expectLastCall();
  EasyMock.replay(emitter);
  EasyMock.expect(autoScalingStrategy.ipToIdLookup(EasyMock.<List<String>>anyObject())).andReturn(Lists.<String>newArrayList()).times(2);
  EasyMock.expect(autoScalingStrategy.idToIpLookup(EasyMock.<List<String>>anyObject())).andReturn(Lists.<String>newArrayList());
  EasyMock.expect(autoScalingStrategy.terminate(EasyMock.<List<String>>anyObject())).andReturn(null);
  EasyMock.expect(autoScalingStrategy.provision()).andReturn(new AutoScalingData(Lists.<String>newArrayList("fake"),Lists.newArrayList("faker")));
  EasyMock.replay(autoScalingStrategy);
  boolean provisionedSomething=simpleResourceManagementStrategy.doProvision(Arrays.<RemoteTaskRunnerWorkItem>asList(new RemoteTaskRunnerWorkItem(testTask,null,null).withQueueInsertionTime(new DateTime())),Arrays.<ZkWorker>asList(new TestZkWorker(testTask)));
  Assert.assertTrue(provisionedSomething);
  Assert.assertTrue(simpleResourceManagementStrategy.getStats().toList().size() == 1);
  DateTime createdTime=simpleResourceManagementStrategy.getStats().toList().get(0).getTimestamp();
  Assert.assertTrue(simpleResourceManagementStrategy.getStats().toList().get(0).getEvent() == ScalingStats.EVENT.PROVISION);
  Thread.sleep(2000);
  provisionedSomething=simpleResourceManagementStrategy.doProvision(Arrays.<RemoteTaskRunnerWorkItem>asList(new RemoteTaskRunnerWorkItem(testTask,null,null).withQueueInsertionTime(new DateTime())),Arrays.<ZkWorker>asList(new TestZkWorker(testTask)));
  Assert.assertFalse(provisionedSomething);
  Assert.assertTrue(simpleResourceManagementStrategy.getStats().toList().get(0).getEvent() == ScalingStats.EVENT.PROVISION);
  DateTime anotherCreatedTime=simpleResourceManagementStrategy.getStats().toList().get(0).getTimestamp();
  Assert.assertTrue(createdTime.equals(anotherCreatedTime));
  EasyMock.verify(autoScalingStrategy);
  EasyMock.verify(emitter);
}
