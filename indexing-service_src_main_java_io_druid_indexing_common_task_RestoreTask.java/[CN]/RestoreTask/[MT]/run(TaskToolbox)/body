{
  final TaskLock myLock=Iterables.getOnlyElement(getTaskLocks(toolbox));
  if (!myLock.getDataSource().equals(getDataSource())) {
    throw new ISE("WTF?! Lock dataSource[%s] != task dataSource[%s]",myLock.getDataSource(),getDataSource());
  }
  if (!myLock.getInterval().equals(getInterval())) {
    throw new ISE("WTF?! Lock interval[%s] != task interval[%s]",myLock.getInterval(),getInterval());
  }
  final List<DataSegment> unusedSegments=toolbox.getTaskActionClient().submit(new SegmentListUnusedAction(myLock.getDataSource(),myLock.getInterval()));
  for (  final DataSegment unusedSegment : unusedSegments) {
    if (unusedSegment.getVersion().compareTo(myLock.getVersion()) > 0) {
      throw new ISE("WTF?! Unused segment[%s] has version[%s] > task version[%s]",unusedSegment.getIdentifier(),unusedSegment.getVersion(),myLock.getVersion());
    }
    log.info("OK to restore segment: %s",unusedSegment.getIdentifier());
  }
  List<DataSegment> restoredSegments=Lists.newLinkedList();
  for (  DataSegment segment : unusedSegments) {
    restoredSegments.add(toolbox.getDataSegmentArchiver().restore(segment));
  }
  toolbox.getTaskActionClient().submit(new SegmentMetadataUpdateAction(ImmutableSet.copyOf(restoredSegments)));
  return TaskStatus.success(getId());
}
