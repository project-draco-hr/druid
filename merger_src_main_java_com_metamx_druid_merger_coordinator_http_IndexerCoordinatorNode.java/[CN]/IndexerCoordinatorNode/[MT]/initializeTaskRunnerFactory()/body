{
  if (taskRunnerFactory == null) {
    if (config.getRunnerImpl().equals("remote")) {
      taskRunnerFactory=new TaskRunnerFactory(){
        @Override public TaskRunner build(){
          final ScheduledExecutorService retryScheduledExec=Executors.newScheduledThreadPool(1,new ThreadFactoryBuilder().setDaemon(true).setNameFormat("RemoteRunnerRetryExec--%d").build());
          ScalingStrategy strategy;
          if (config.getStrategyImpl().equalsIgnoreCase("ec2")) {
            strategy=new EC2AutoScalingStrategy(jsonMapper,new AmazonEC2Client(new BasicAWSCredentials(PropUtils.getProperty(props,"com.metamx.aws.accessKey"),PropUtils.getProperty(props,"com.metamx.aws.secretKey"))),configFactory.build(EC2AutoScalingStrategyConfig.class));
          }
 else           if (config.getStrategyImpl().equalsIgnoreCase("noop")) {
            strategy=new NoopScalingStrategy();
          }
 else {
            throw new ISE("Invalid strategy implementation: %s",config.getStrategyImpl());
          }
          return new RemoteTaskRunner(jsonMapper,configFactory.build(RemoteTaskRunnerConfig.class),curatorFramework,new PathChildrenCache(curatorFramework,indexerZkConfig.getAnnouncementPath(),true),retryScheduledExec,new RetryPolicyFactory(configFactory.build(RetryPolicyConfig.class)),strategy);
        }
      }
;
    }
 else     if (config.getRunnerImpl().equals("local")) {
      taskRunnerFactory=new TaskRunnerFactory(){
        @Override public TaskRunner build(){
          final ExecutorService runnerExec=Executors.newFixedThreadPool(config.getNumLocalThreads());
          return new LocalTaskRunner(taskToolbox,runnerExec);
        }
      }
;
    }
 else {
      throw new ISE("Invalid runner implementation: %s",config.getRunnerImpl());
    }
  }
}
