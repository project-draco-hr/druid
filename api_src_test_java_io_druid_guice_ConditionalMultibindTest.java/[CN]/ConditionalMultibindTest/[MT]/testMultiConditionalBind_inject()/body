{
  props.setProperty("animal.type","pets");
  Injector injector=Guice.createInjector(new Module(){
    @Override public void configure(    Binder binder){
      ConditionalMultibind.create(props,binder,Animal.class).addBinding(Bird.class).addConditionBinding(ANIMAL_TYPE,Predicates.equalTo("pets"),Cat.class).addConditionBinding(ANIMAL_TYPE,Predicates.equalTo("pets"),Dog.class);
    }
  }
,new Module(){
    @Override public void configure(    Binder binder){
      ConditionalMultibind.create(props,binder,Animal.class).addConditionBinding(ANIMAL_TYPE,Predicates.equalTo("not_match"),Tiger.class).addConditionBinding(ANIMAL_TYPE,Predicates.equalTo("pets"),Fish.class);
    }
  }
);
  PetShotAvails shop=new PetShotAvails();
  injector.injectMembers(shop);
  Assert.assertEquals(4,shop.animals.size());
  Assert.assertEquals(shop.animals,ImmutableSet.<Animal>of(new Bird(),new Cat(),new Dog(),new Fish()));
}
