{
  final File tmpDir=com.google.common.io.Files.createTempDir();
  tmpDir.deleteOnExit();
  final File tmpFile=File.createTempFile("zipContents",".txt",tmpDir);
  tmpFile.deleteOnExit();
  final Path zipPath=new Path("/tmp/testZip.zip");
  final File outTmpDir=com.google.common.io.Files.createTempDir();
  outTmpDir.deleteOnExit();
  final URI uri=URI.create(uriBase.toString() + zipPath.toString());
  tmpFile.deleteOnExit();
  try (final OutputStream stream=new FileOutputStream(tmpFile)){
    ByteStreams.copy(new ByteArrayInputStream(pathByteContents),stream);
  }
   Assert.assertTrue(tmpFile.exists());
  final File outFile=new File(outTmpDir,tmpFile.getName());
  outFile.delete();
  try (final OutputStream stream=miniCluster.getFileSystem().create(zipPath)){
    CompressionUtils.zip(tmpDir,stream);
  }
   try {
    Assert.assertFalse(outFile.exists());
    puller.getSegmentFiles(uri,outTmpDir);
    Assert.assertTrue(outFile.exists());
    Assert.assertArrayEquals(pathByteContents,Files.readAllBytes(outFile.toPath()));
  }
  finally {
    if (tmpFile.exists()) {
      tmpFile.delete();
    }
    if (outFile.exists()) {
      outFile.delete();
    }
    if (outTmpDir.exists()) {
      outTmpDir.delete();
    }
    if (tmpDir.exists()) {
      tmpDir.delete();
    }
  }
}
