{
  RunInstancesResult runInstancesResult=EasyMock.createMock(RunInstancesResult.class);
  EC2AutoScaler autoScaler=new EC2AutoScaler(0,1,ENV_CONFIG,amazonEC2Client,managementConfig);
  EasyMock.expect(amazonEC2Client.runInstances(EasyMock.anyObject(RunInstancesRequest.class))).andReturn(runInstancesResult);
  EasyMock.expect(amazonEC2Client.describeInstances(EasyMock.anyObject(DescribeInstancesRequest.class))).andReturn(describeInstancesResult);
  EasyMock.expect(amazonEC2Client.terminateInstances(EasyMock.anyObject(TerminateInstancesRequest.class))).andReturn(null);
  EasyMock.replay(amazonEC2Client);
  EasyMock.expect(runInstancesResult.getReservation()).andReturn(reservation).atLeastOnce();
  EasyMock.replay(runInstancesResult);
  EasyMock.expect(describeInstancesResult.getReservations()).andReturn(Collections.singletonList(reservation)).atLeastOnce();
  EasyMock.replay(describeInstancesResult);
  EasyMock.expect(reservation.getInstances()).andReturn(Collections.singletonList(instance)).atLeastOnce();
  EasyMock.replay(reservation);
  AutoScalingData created=autoScaler.provision();
  Assert.assertEquals(created.getNodeIds().size(),1);
  Assert.assertEquals("theInstance",created.getNodeIds().get(0));
  AutoScalingData deleted=autoScaler.terminate(Arrays.asList("dummyIP"));
  Assert.assertEquals(deleted.getNodeIds().size(),1);
  Assert.assertEquals(INSTANCE_ID,deleted.getNodeIds().get(0));
  EasyMock.verify(runInstancesResult);
}
