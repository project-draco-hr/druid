{
  return new DruidPredicateFactory(){
    @Override public Predicate<String> makeStringPredicate(){
      if (extractionFn != null) {
        return new Predicate<String>(){
          @Override public boolean apply(          String input){
            return doesMatch(extractionFn.apply(input));
          }
        }
;
      }
 else {
        return new Predicate<String>(){
          @Override public boolean apply(          String input){
            return doesMatch(input);
          }
        }
;
      }
    }
    @Override public DruidLongPredicate makeLongPredicate(){
      if (extractionFn != null) {
        return new DruidLongPredicate(){
          @Override public boolean applyLong(          long input){
            return doesMatch(extractionFn.apply(input));
          }
        }
;
      }
 else       if (boundDimFilter.getOrdering().equals(StringComparators.NUMERIC)) {
        return longPredicateSupplier.get();
      }
 else {
        return new DruidLongPredicate(){
          @Override public boolean applyLong(          long input){
            return doesMatch(String.valueOf(input));
          }
        }
;
      }
    }
  }
;
}
