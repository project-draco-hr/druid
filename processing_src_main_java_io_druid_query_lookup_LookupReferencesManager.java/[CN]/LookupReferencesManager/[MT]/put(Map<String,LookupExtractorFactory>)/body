{
  Map<String,LookupExtractorFactory> failedExtractorFactoryMap=new HashMap<>();
  try {
    startStopLock.readLock().lockInterruptibly();
  }
 catch (  InterruptedException e) {
    throw Throwables.propagate(e);
  }
  try {
    assertStarted();
    for (    Map.Entry<String,LookupExtractorFactory> entry : lookups.entrySet()) {
      final String lookupName=entry.getKey();
      final LookupExtractorFactory lookupExtractorFactory=entry.getValue();
      if (lookupMap.containsKey(lookupName)) {
        LOGGER.warn("lookup [%s] is not add, another lookup with the same name already exist",lookupName);
        continue;
      }
      if (!lookupExtractorFactory.start()) {
        failedExtractorFactoryMap.put(lookupName,lookupExtractorFactory);
        continue;
      }
      if (null != lookupMap.putIfAbsent(lookupName,lookupExtractorFactory)) {
        LOGGER.warn("lookup [%s] is not add, another lookup with the same name already exist",lookupName);
        if (!lookupExtractorFactory.close()) {
          LOGGER.error("Failed to properly close stale lookup [%s]",lookupExtractorFactory);
        }
        continue;
      }
      if (lookupSnapshotTaker != null) {
        lookupSnapshotTaker.takeSnapshot(getAllAsList());
      }
    }
    if (!failedExtractorFactoryMap.isEmpty()) {
      throw new ISE("was not able to start the following lookup(s) [%s]",failedExtractorFactoryMap.keySet().toString());
    }
  }
  finally {
    startStopLock.readLock().unlock();
  }
}
