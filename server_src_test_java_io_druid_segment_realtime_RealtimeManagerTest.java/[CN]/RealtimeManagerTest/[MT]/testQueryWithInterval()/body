{
  List<Row> expectedResults=Arrays.asList(GroupByQueryRunnerTestHelper.createExpectedRow("2011-04-01","alias","automotive","rows",2L,"idx",270L),GroupByQueryRunnerTestHelper.createExpectedRow("2011-04-01","alias","business","rows",2L,"idx",236L),GroupByQueryRunnerTestHelper.createExpectedRow("2011-04-01","alias","entertainment","rows",2L,"idx",316L),GroupByQueryRunnerTestHelper.createExpectedRow("2011-04-01","alias","health","rows",2L,"idx",240L),GroupByQueryRunnerTestHelper.createExpectedRow("2011-04-01","alias","mezzanine","rows",6L,"idx",5740L),GroupByQueryRunnerTestHelper.createExpectedRow("2011-04-01","alias","news","rows",2L,"idx",242L),GroupByQueryRunnerTestHelper.createExpectedRow("2011-04-01","alias","premium","rows",6L,"idx",5800L),GroupByQueryRunnerTestHelper.createExpectedRow("2011-04-01","alias","technology","rows",2L,"idx",156L),GroupByQueryRunnerTestHelper.createExpectedRow("2011-04-01","alias","travel","rows",2L,"idx",238L),GroupByQueryRunnerTestHelper.createExpectedRow("2011-04-02","alias","automotive","rows",2L,"idx",294L),GroupByQueryRunnerTestHelper.createExpectedRow("2011-04-02","alias","business","rows",2L,"idx",224L),GroupByQueryRunnerTestHelper.createExpectedRow("2011-04-02","alias","entertainment","rows",2L,"idx",332L),GroupByQueryRunnerTestHelper.createExpectedRow("2011-04-02","alias","health","rows",2L,"idx",226L),GroupByQueryRunnerTestHelper.createExpectedRow("2011-04-02","alias","mezzanine","rows",6L,"idx",4894L),GroupByQueryRunnerTestHelper.createExpectedRow("2011-04-02","alias","news","rows",2L,"idx",228L),GroupByQueryRunnerTestHelper.createExpectedRow("2011-04-02","alias","premium","rows",6L,"idx",5010L),GroupByQueryRunnerTestHelper.createExpectedRow("2011-04-02","alias","technology","rows",2L,"idx",194L),GroupByQueryRunnerTestHelper.createExpectedRow("2011-04-02","alias","travel","rows",2L,"idx",252L));
  chiefStartedLatch.await();
  for (  QueryRunner runner : QueryRunnerTestHelper.makeQueryRunners((GroupByQueryRunnerFactory)factory)) {
    GroupByQuery query=GroupByQuery.builder().setDataSource(QueryRunnerTestHelper.dataSource).setQuerySegmentSpec(QueryRunnerTestHelper.firstToThird).setDimensions(Lists.<DimensionSpec>newArrayList(new DefaultDimensionSpec("quality","alias"))).setAggregatorSpecs(Arrays.asList(QueryRunnerTestHelper.rowsCount,new LongSumAggregatorFactory("idx","index"))).setGranularity(QueryRunnerTestHelper.dayGran).build();
    plumber.setRunners(ImmutableMap.of(query.getIntervals().get(0),runner));
    plumber2.setRunners(ImmutableMap.of(query.getIntervals().get(0),runner));
    Iterable<Row> results=GroupByQueryRunnerTestHelper.runQuery(factory,realtimeManager3.getQueryRunnerForIntervals(query,QueryRunnerTestHelper.firstToThird.getIntervals()),query);
    TestHelper.assertExpectedObjects(expectedResults,results,"");
  }
}
