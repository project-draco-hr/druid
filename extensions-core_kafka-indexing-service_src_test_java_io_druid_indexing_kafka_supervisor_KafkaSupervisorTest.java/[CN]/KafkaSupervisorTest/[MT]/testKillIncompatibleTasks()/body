{
  supervisor=getSupervisor(2,1,true,"PT1H");
  addSomeEvents(1);
  Task id1=createKafkaIndexTask("id1",DATASOURCE,"index_kafka_testDS__some_other_sequenceName",new KafkaPartitions("topic",ImmutableMap.of(0,0L)),new KafkaPartitions("topic",ImmutableMap.of(0,10L)));
  Task id2=createKafkaIndexTask("id2",DATASOURCE,"sequenceName-0",new KafkaPartitions("topic",ImmutableMap.of(0,0L,1,0L,2,0L)),new KafkaPartitions("topic",ImmutableMap.of(0,333L,1,333L,2,333L)));
  Task id3=createKafkaIndexTask("id3",DATASOURCE,"index_kafka_testDS__some_other_sequenceName",new KafkaPartitions("topic",ImmutableMap.of(0,0L,1,0L,2,1L)),new KafkaPartitions("topic",ImmutableMap.of(0,333L,1,333L,2,330L)));
  Task id4=createKafkaIndexTask("id4","other-datasource","index_kafka_testDS_d927edff33c4b3f",new KafkaPartitions("topic",ImmutableMap.of(0,0L)),new KafkaPartitions("topic",ImmutableMap.of(0,10L)));
  Task id5=new RealtimeIndexTask("id5",null,new FireDepartment(dataSchema,new RealtimeIOConfig(null,null,null),null),null);
  List<Task> existingTasks=ImmutableList.of(id1,id2,id3,id4,id5);
  expect(taskMaster.getTaskQueue()).andReturn(Optional.of(taskQueue)).anyTimes();
  expect(taskMaster.getTaskRunner()).andReturn(Optional.of(taskRunner)).anyTimes();
  expect(taskRunner.getRunningTasks()).andReturn(Collections.EMPTY_LIST).anyTimes();
  expect(taskStorage.getActiveTasks()).andReturn(existingTasks).anyTimes();
  expect(taskStorage.getStatus("id1")).andReturn(Optional.of(TaskStatus.running("id1"))).anyTimes();
  expect(taskStorage.getStatus("id2")).andReturn(Optional.of(TaskStatus.running("id2"))).anyTimes();
  expect(taskStorage.getStatus("id3")).andReturn(Optional.of(TaskStatus.running("id3"))).anyTimes();
  expect(taskStorage.getTask("id1")).andReturn(Optional.of(id1)).anyTimes();
  expect(taskStorage.getTask("id2")).andReturn(Optional.of(id2)).anyTimes();
  expect(taskStorage.getTask("id3")).andReturn(Optional.of(id3)).anyTimes();
  expect(taskClient.getStatus(anyString())).andThrow(taskClient.new NoTaskLocationException("test-id")).anyTimes();
  expect(taskClient.getStartTime(anyString(),eq(false))).andThrow(taskClient.new NoTaskLocationException("test-id")).anyTimes();
  expect(indexerMetadataStorageCoordinator.getDataSourceMetadata(DATASOURCE)).andReturn(new KafkaDataSourceMetadata(null)).anyTimes();
  taskRunner.registerListener(anyObject(TaskRunnerListener.class),anyObject(Executor.class));
  taskQueue.shutdown("id1");
  taskQueue.shutdown("id3");
  expect(taskQueue.add(anyObject(Task.class))).andReturn(true);
  replayAll();
  supervisor.start();
  supervisor.runInternal();
  verifyAll();
}
