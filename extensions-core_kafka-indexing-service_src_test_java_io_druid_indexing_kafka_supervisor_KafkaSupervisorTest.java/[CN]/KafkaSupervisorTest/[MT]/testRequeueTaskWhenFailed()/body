{
  supervisor=getSupervisor(2,2,true,"PT1H");
  addSomeEvents(1);
  Capture<Task> captured=Capture.newInstance(CaptureType.ALL);
  expect(taskMaster.getTaskQueue()).andReturn(Optional.of(taskQueue)).anyTimes();
  expect(taskMaster.getTaskRunner()).andReturn(Optional.of(taskRunner)).anyTimes();
  expect(taskRunner.getRunningTasks()).andReturn(Collections.EMPTY_LIST).anyTimes();
  expect(taskStorage.getActiveTasks()).andReturn(ImmutableList.<Task>of()).anyTimes();
  expect(taskClient.getStatus(anyString())).andThrow(taskClient.new NoTaskLocationException("test-id")).anyTimes();
  expect(taskClient.getStartTime(anyString(),eq(false))).andThrow(taskClient.new NoTaskLocationException("test-id")).anyTimes();
  expect(indexerMetadataStorageCoordinator.getDataSourceMetadata(DATASOURCE)).andReturn(new KafkaDataSourceMetadata(null)).anyTimes();
  expect(taskQueue.add(capture(captured))).andReturn(true).times(4);
  taskRunner.registerListener(anyObject(TaskRunnerListener.class),anyObject(Executor.class));
  replayAll();
  supervisor.start();
  supervisor.runInternal();
  verifyAll();
  List<Task> tasks=captured.getValues();
  reset(taskStorage);
  expect(taskStorage.getActiveTasks()).andReturn(tasks).anyTimes();
  for (  Task task : tasks) {
    expect(taskStorage.getStatus(task.getId())).andReturn(Optional.of(TaskStatus.running(task.getId()))).anyTimes();
    expect(taskStorage.getTask(task.getId())).andReturn(Optional.of(task)).anyTimes();
  }
  replay(taskStorage);
  supervisor.runInternal();
  verifyAll();
  Capture<Task> aNewTaskCapture=Capture.newInstance();
  List<Task> imStillAlive=tasks.subList(0,3);
  KafkaIndexTask iHaveFailed=(KafkaIndexTask)tasks.get(3);
  reset(taskStorage);
  reset(taskQueue);
  expect(taskStorage.getActiveTasks()).andReturn(imStillAlive).anyTimes();
  for (  Task task : imStillAlive) {
    expect(taskStorage.getStatus(task.getId())).andReturn(Optional.of(TaskStatus.running(task.getId()))).anyTimes();
    expect(taskStorage.getTask(task.getId())).andReturn(Optional.of(task)).anyTimes();
  }
  expect(taskStorage.getStatus(iHaveFailed.getId())).andReturn(Optional.of(TaskStatus.failure(iHaveFailed.getId())));
  expect(taskStorage.getTask(iHaveFailed.getId())).andReturn(Optional.of((Task)iHaveFailed)).anyTimes();
  expect(taskQueue.add(capture(aNewTaskCapture))).andReturn(true);
  replay(taskStorage);
  replay(taskQueue);
  supervisor.runInternal();
  verifyAll();
  Assert.assertNotEquals(iHaveFailed.getId(),aNewTaskCapture.getValue().getId());
  Assert.assertEquals(iHaveFailed.getIOConfig().getBaseSequenceName(),((KafkaIndexTask)aNewTaskCapture.getValue()).getIOConfig().getBaseSequenceName());
}
